{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":1049,\"strength\":2,\"defense\":2,\"dexterity\":2,\"agility\":1,\"charisma\":2,\"intelligence\":0},\"exp\":{\"hacking\":1896261419.1872435,\"strength\":8.926112703433846,\"defense\":8.926112703433846,\"dexterity\":8.926112703433846,\"agility\":8.926112703433846,\"charisma\":8.926112703433846,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.4216368069006857,\"hacking_speed\":1.4145367320901912,\"hacking_money\":2.375497735591265,\"hacking_grow\":1.4226241080316595,\"hacking\":2.1697852576735293,\"strength\":1.5705770152669518,\"defense\":1.365719143710393,\"dexterity\":1.5116803771944416,\"agility\":1.195004250746594,\"charisma\":1.5022910580814324,\"hacking_exp\":2.864588964372152,\"strength_exp\":1.4396955973280396,\"defense_exp\":1.4396955973280396,\"dexterity_exp\":1.4396955973280396,\"agility_exp\":1.4396955973280396,\"charisma_exp\":1.4396955973280396,\"company_rep\":1.9003981884730121,\"faction_rep\":1.4396955973280394,\"crime_money\":1.1380992864253276,\"crime_success\":1.1380992864253276,\"hacknet_node_money\":2.8703930971727787,\"hacknet_node_purchase_cost\":0.672173341222978,\"hacknet_node_ram_cost\":0.8786579623829778,\"hacknet_node_core_cost\":0.8786579623829778,\"hacknet_node_level_cost\":0.746859268025531,\"work_money\":1.2519092150678606,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":13,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Augmented Targeting I\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":14,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":15,\"name\":\"NeuroFlux Governor\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"BitRunners\",\"Volhaven\"],\"factionInvitations\":[\"Netburners\",\"Tian Di Hui\",\"NiteSec\",\"CyberSec\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2517690349.743438,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2517248057.4415884,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2517241445.0747366,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2516852489.607402,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2509630018.916033,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2499910402.4902077,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2499909971.9312434,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2499909670.539968,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2499909498.3163824,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2499909196.063989,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":98885.9999999797,\"ram\":64,\"totalMoneyGenerated\":2499908787.032973,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95679.60000002632,\"ram\":64,\"totalMoneyGenerated\":2497658363.8259807,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95679.40000002632,\"ram\":64,\"totalMoneyGenerated\":2497658362.964863,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95679.20000002632,\"ram\":64,\"totalMoneyGenerated\":2497658362.103745,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95677.20000002635,\"ram\":64,\"totalMoneyGenerated\":2497658353.4925656,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95677.00000002635,\"ram\":64,\"totalMoneyGenerated\":2497658352.631448,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95676.80000002636,\"ram\":64,\"totalMoneyGenerated\":2497658351.77033,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95676.80000002636,\"ram\":64,\"totalMoneyGenerated\":2497658351.77033,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95676.20000002637,\"ram\":64,\"totalMoneyGenerated\":2497658349.186976,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95676.20000002637,\"ram\":64,\"totalMoneyGenerated\":2497658349.186976,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95676.00000002637,\"ram\":64,\"totalMoneyGenerated\":2497658348.325858,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":95675.80000002637,\"ram\":64,\"totalMoneyGenerated\":2497658347.4647403,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63984.599999954946,\"ram\":64,\"totalMoneyGenerated\":1681755293.4056075,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63984.39999995494,\"ram\":64,\"totalMoneyGenerated\":1681755292.5444896,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63983.599999954946,\"ram\":64,\"totalMoneyGenerated\":1681755289.1000178,\"name\":\"hacknet-node-24\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63983.39999995494,\"ram\":64,\"totalMoneyGenerated\":1681755288.2389,\"name\":\"hacknet-node-25\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63983.199999954944,\"ram\":64,\"totalMoneyGenerated\":1681755287.3777819,\"name\":\"hacknet-node-26\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63982.39999995494,\"ram\":64,\"totalMoneyGenerated\":1681755283.9333103,\"name\":\"hacknet-node-27\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63981.99999995494,\"ram\":64,\"totalMoneyGenerated\":1681755282.2110744,\"name\":\"hacknet-node-28\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":26325.26265609327,\"onlineTimeSeconds\":63977.79999995494,\"ram\":64,\"totalMoneyGenerated\":1681755264.1275978,\"name\":\"hacknet-node-29\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"Alpha Enterprises\",\"money\":87798345749.95221,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":1336742924710.676,\"hacknet\":68506404058.39904,\"hacknet_expenses\":-92546633013.67108,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":87797345749.95123,\"work\":0,\"servers\":-1099111301197.0957,\"other\":-5315100000,\"augmentations\":-89278948811.82909}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":2128857370938.223,\"hacknet\":223147497981.45654,\"hacknet_expenses\":-168586717628.77945,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":98716041851.63483,\"work\":0,\"servers\":-1689816724277.292,\"other\":-6261900000,\"augmentations\":-357423485165.35187}},\"playtimeSinceLastAug\":98897600,\"playtimeSinceLastBitnode\":596163800,\"purchasedServers\":[\"pserv\",\"pserv-0\",\"pserv-1\",\"pserv-2\",\"pserv-3\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-7\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-14\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-20\",\"pserv-21\",\"pserv-22\",\"pserv-23\"],\"scriptProdSinceLastAug\":669236070188,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":[],\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1682294708210},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1682294888213},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1682307548220},{\"ID\":\"TOR\",\"unlockedOn\":1682313128215},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1682313188210},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1682313728204},{\"ID\":\"FROZE\",\"unlockedOn\":1682314588558},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1682318199393},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1682320059392},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1682383083452},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1682389837554},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1682439904426},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1682470257546},{\"ID\":\"NITESEC\",\"unlockedOn\":1682529013119},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1682541222545},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1682563435319},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1682694406462},{\"ID\":\"TRAVEL\",\"unlockedOn\":1682772323700},{\"ID\":\"DONATION\",\"unlockedOn\":1682791697124},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1682826620322},{\"ID\":\"4S\",\"unlockedOn\":1682826620324},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1682890520880}],\"terminalCommandHistory\":[\"connect\",\"connect darkweb\",\"ls\",\"buy -l\",\"buy SQLInject.exe\",\"buy ServerProfiler.exe\",\"buy DeepscanV1.exe\",\"buy DeepscanV2.exe\",\"buy AutoLink.exe\",\"buy AutoLink.exebuy -l\",\"buy -l\",\"home\",\"nano routine.new-script.js\",\"run routine.new-script.js\",\"run routine.ramp-up.js\",\"scan-analyze\",\"scan-analyze 10\",\"backdoor\",\"analyze\",\"home\",\"run hacknet.equalize.js cores\",\"run hacknet.equalize.js\",\"run hacknet.equalize.js ram\",\"run hacknet.equalize.js cores\",\"nano test.js\",\"run test.js\",\"nano servers.upgrade.js\",\"run servers.upgrade.js 60\",\"run servers.upgrade.js 30\",\"run servers.upgrade.js 10\",\"run routine.ramp-up.js\",\"nano logs/hack.orchestrator.service.log.txt\",\"nano logs/hack.ramp-up.orchestrator.service.log.txt\",\"nano hosts-info.db.txt\",\"scan-analyze 10\",\"backdoor\",\"connect The-Cave\",\"ls\",\"cat alpha-omega.lit\",\"home\",\"scan-analyze 10\",\"backdoor\",\"ls\",\"home\",\"connect\",\"connect darkweb\",\"BUY -A\",\"buy -a\",\"buy -l\",\"home\"],\"lastUpdate\":1682890562264,\"lastSave\":1682890508874,\"totalPlaytime\":596163800,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":15064,\"factionWorkType\":\"hacking\",\"factionName\":\"Volhaven\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"88a3af4f75433\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"99.5.6.1\",\"isConnectedTo\":true,\"maxRam\":32768,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"ServerProfiler.exe\",\"DeepscanV1.exe\",\"DeepscanV2.exe\",\"AutoLink.exe\",\"Formulas.exe\"],\"ramUsed\":21.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.770000000004,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36681.21000003442,\"pid\":1,\"ramUsage\":8.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"url\":\"blob:file:///34b1770a-90e5-4e85-86ff-a2b082d9a3df\",\"moduleSequenceNumber\":51804}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"hack.orchestrator.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.770000000004,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36681.21000003442,\"pid\":2,\"ramUsage\":8.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.orchestrator.service.js\",\"url\":\"blob:file:///dc30214a-cd6b-4573-b2cd-99575e072d14\",\"moduleSequenceNumber\":51805}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,1,1],\"sigma-cosmetics\":[0,0,1,1],\"joesguns\":[0,0,1,0],\"computek\":[0,0,2,0],\"rothman-uni\":[0,0,0,1],\"catalyst\":[0,0,0,2],\"millenium-fitness\":[0,0,1,0],\"summit-uni\":[0,0,3,1],\"alpha-ent\":[0,0,1,2]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1028.7782875022165,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.770000000004,\"onlineExpGained\":844.7672855933478,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":3,\"ramUsage\":3.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///44e3e8f7-387a-452e-8961-4e5db10ea7e2\",\"moduleSequenceNumber\":50628}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var discoveredHosts = ['home'];\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar availableHosts = ns.scan('home');\\n\\t\\n\\tfor (var i = 0; i < availableHosts.length; i++) {\\n\\t\\tvar current = availableHosts[i];\\n\\t\\tdiscoveredHosts.push(current);\\n\\n\\t\\tdepthFirstSearch(ns, current);\\n\\n\\t\\tns.print(\\\"Discovered hosts so far (\\\" + (i + 1) + \\\"/\\\" + availableHosts.length + \\\" root nodes done): \\\" + discoveredHosts);\\n\\t}\\n\\n\\tdiscoveredHosts.splice(0, 1); //Need to remove home from the discovery results\\n\\tdiscoveredHosts = [...new Set(discoveredHosts)]\\n\\tns.write('host-names.db.txt', JSON.stringify(discoveredHosts), 'w');\\n}\\n\\nfunction depthFirstSearch(ns, rootNode) {\\n\\tvar hostsToExplore = [rootNode];\\n\\n\\twhile (hostsToExplore.length > 0) {\\n\\t\\tvar host = hostsToExplore.pop();\\n\\t\\tvar scanResults = ns.scan(host);\\n\\n\\t\\t\\n\\n\\t\\tscanResults = removeAlreadyDiscovered(scanResults);\\n\\n\\t\\tns.print(\\\"Scan results (unexplored only) for \\\" + host + \\\": \\\" + scanResults);\\n\\n\\t\\thostsToExplore = hostsToExplore.concat(scanResults);\\n\\t\\tdiscoveredHosts = discoveredHosts.concat(scanResults);\\n\\n\\t\\tns.print(\\\"Hosts to explore: \\\" + hostsToExplore);\\n\\t}\\n}\\n\\nfunction removeAlreadyDiscovered(scanResults) {\\n\\tfor (var i = 0; i < scanResults.length; i++) {\\n\\t\\tvar result = scanResults[i];\\n\\t\\tif (discoveredHosts.indexOf(result) > -1) {\\n\\t\\t\\tscanResults.splice(i, 1);\\n\\t\\t}\\n\\t}\\n\\n\\treturn scanResults;\\n}\",\"filename\":\"discovery.run-dfs.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"discovery.run-dfs.js\",\"url\":\"blob:file:///8d068814-7b44-4294-a725-0b375a0e15a3\",\"moduleSequenceNumber\":48735}],\"dependents\":[],\"ramUsage\":1.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":181,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var TWO_DECIMAL_PLACES = 2;\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar hosts = JSON.parse(ns.read(\\\"host-names.db.txt\\\"));\\t\\n\\n\\tvar result = [];\\n\\n\\tfor (var serverCount = 0; serverCount < hosts.length; serverCount++) {\\n\\t\\tvar target = hosts[serverCount];\\n\\t\\tns.print('=========' + target + ' (' + calculateProgress(serverCount, hosts) + '% done)' + '=========')\\n\\t\\t\\n\\t\\tvar serverDetails = ns.getServer(target);\\n\\t\\tserverDetails[\\\"hackChance\\\"] = ns.hackAnalyzeChance(target);\\n\\n\\t\\tresult.push(serverDetails);\\n\\t}\\n\\t\\n\\tns.write('hosts-info.db.txt', JSON.stringify(result), 'w');\\n}\\n\\nfunction calculateProgress(currentIndex, hosts) {\\n\\treturn (((currentIndex + 1) / hosts.length) * 100).toFixed(TWO_DECIMAL_PLACES);\\n}\",\"filename\":\"discovery.enrich.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"discovery.enrich.js\",\"url\":\"blob:file:///ca1a0565-11a3-4a00-af8f-379779fde744\",\"moduleSequenceNumber\":5791}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":5791,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\tvar hackCommands = createHackCommands(ns);\\n\\n\\tvar maxNumberOfHackeablePorts = getMaximumNumberOfHackeablePorts(ns);\\n\\tvar eligibleHosts = getEligibleHosts(ns, hosts, maxNumberOfHackeablePorts);\\n\\n\\tfor (var i = 0; i < eligibleHosts.length; i++) {\\n\\t\\tvar target = eligibleHosts[i];\\n\\t\\tns.print('Rooting ' + target.hostname + ' - ' + target.numOpenPortsRequired + ' ports required');\\n\\t\\trootTheirAss(hackCommands, target);\\n\\t}\\n}\\n\\nfunction rootTheirAss(hackCommands, target) {\\n  for (var i = target.numOpenPortsRequired; i > -1; i--) {\\n    hackCommands[i](target.hostname);\\n  }\\n}\\n\\nfunction createHackCommands(ns) {\\n  var nukeDelegate = function (target) { ns.nuke(target); };\\n  var sshDelegate = function (target) { ns.brutessh(target); };\\n  var ftpDelegate = function (target) { ns.ftpcrack(target); };\\n  var smtpDelegate = function (target) { ns.relaysmtp(target); };\\n  var httpDelegate = function (target) { ns.httpworm(target); };\\n  var sqliDelegate = function (target) { ns.sqlinject(target); };\\n\\n  return [nukeDelegate, sshDelegate, ftpDelegate, smtpDelegate, httpDelegate, sqliDelegate];\\n}\\n\\nfunction getMaximumNumberOfHackeablePorts(ns) {\\n  var numberOfPorts = 0;\\n\\n  if (ns.fileExists('BruteSSH.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('FTPCrack.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('relaySMTP.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('HTTPWorm.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('SQLInject.exe')) { numberOfPorts++; }\\n\\n  return numberOfPorts;\\n}\\n\\nfunction getEligibleHosts(ns, hosts, maxNumberOfHackeablePorts) {\\n  var result = [];\\n\\n  ns.print('Finding eligible hosts...');\\n\\n  for (var i = 0; i < hosts.length; i++) {\\n    var host = hosts[i];\\n\\n    if (!host.hasAdminRights && maxNumberOfHackeablePorts >= host.numOpenPortsRequired) {\\n      result.push(host);\\n    }\\n  }\\n\\n  ns.print('Rooting ' + result.length + ' hosts, ' + maxNumberOfHackeablePorts + ' maximum hackable ports');\\n\\n  return result;\\n}\",\"filename\":\"hack.rootkit.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.rootkit.js\",\"url\":\"blob:file:///31006ae1-ebee-4188-92c0-9e9e46152f11\",\"moduleSequenceNumber\":48737}],\"dependents\":[],\"ramUsage\":2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":183,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.getHostname();\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.self.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.45,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":184,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///159e2d60-94d0-4281-9205-7e01027444cc\",\"moduleSequenceNumber\":49182}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":185,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar targetScript = ns.args[0] || \\\"self-hack.js\\\";\\n\\tvar possibleHosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\n\\tfor (var i = 0; i < possibleHosts.length; i++) {\\n\\t\\tvar target = possibleHosts[i];\\n\\n\\t\\tif (target.hasAdminRights) {\\n\\t\\t\\tns.print('Infecting ' + target.hostname + ' with ' + targetScript);\\n\\t\\t\\tns.scp(targetScript, target.hostname);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.infect.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.infect.js\",\"url\":\"blob:file:///19bfca20-d22c-429f-88e6-c5e8ab072663\",\"moduleSequenceNumber\":48760}],\"dependents\":[],\"ramUsage\":2.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":186,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar targetScript = ns.args[0] || \\\"self-hack.js\\\";\\n\\tvar targetMachine = ns.args[1] || 'self';\\n\\tvar possibleHosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\tvar scriptRAM = ns.getScriptRam(targetScript);\\n\\n\\tfor (var i = 0; i < possibleHosts.length; i++) {\\n\\t\\tvar target = possibleHosts[i];\\n\\n\\t\\tif (target.hasAdminRights) {\\n\\n\\t\\t\\tif (target.maxRam == 0) { continue; }\\n\\n\\t\\t\\tvar maxPossibleThreads = Math.floor(target.maxRam / scriptRAM);\\n\\n\\t\\t\\tns.print('Executing ' + targetScript + ' targetting ' + targetMachine + ' on host ' + target.hostname + ' using ' + maxPossibleThreads + ' threads');\\n\\n\\t\\t\\tns.killall(target.hostname);\\n\\t\\t\\tns.exec(targetScript, target.hostname, maxPossibleThreads, targetMachine);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.orchestrator.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.orchestrator.js\",\"url\":\"blob:file:///4660564c-5e25-4aed-a92c-21d96e3d2a5c\",\"moduleSequenceNumber\":564}],\"dependents\":[],\"ramUsage\":3.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":187,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet amountOfNodes = ns.hacknet.numNodes();\\n\\tlet higherLevelNodeValue = 0;\\n\\tlet higherLevelNodeIndex = 0;\\n\\tlet nodes = [];\\n\\n\\t//Get the stats for each node\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tnodes.push(ns.hacknet.getNodeStats(i));\\n\\t}\\n\\n\\t//Get the highest level node information\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tlet target = nodes[i];\\n\\t\\tif (target.level > higherLevelNodeValue) {\\n\\t\\t\\thigherLevelNodeValue = target.level;\\n\\t\\t\\thigherLevelNodeIndex = i;\\n\\t\\t}\\n\\t}\\n\\n\\t//Equalize levels\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tlet target = nodes[i];\\n\\t\\tequalizeLevels(ns, i, target.level, higherLevelNodeValue);\\n\\t}\\n\\n\\t//Buy as many nodes as possible and equalize them\\n\\twhile (ns.getPlayer().money > ns.hacknet.getPurchaseNodeCost()) {\\n\\t\\tlet newNodeIndex = ns.hacknet.purchaseNode();\\n\\t\\tamountOfNodes++;\\n\\t\\tlet node = ns.hacknet.getNodeStats(newNodeIndex);\\n\\t\\tequalizeLevels(ns, newNodeIndex, node.level, higherLevelNodeValue);\\n\\t}\\n\\n\\t//Buy as many levels as possible with the remaining money\\n\\twhile(ns.getPlayer().money > ns.hacknet.getLevelUpgradeCost(higherLevelNodeIndex, 1)) {\\n\\t\\tfor(let i = 0; i < amountOfNodes; i++) {\\n\\t\\t\\tns.hacknet.upgradeLevel(i, 1);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction equalizeLevels(ns, targetNodeIndex, targetNodeLevel, levelToEqualize) {\\n\\tif (targetNodeLevel < levelToEqualize) {\\n\\t\\tlet levelsToUpgrade = levelToEqualize - targetNodeLevel;\\n\\t\\tns.hacknet.upgradeLevel(targetNodeIndex, levelsToUpgrade);\\n\\t}\\n}\",\"filename\":\"hacknet.spend-all.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hacknet.spend-all.js\",\"url\":\"blob:file:///74b45fda-2f0a-49dd-a76e-2d4f989130a0\",\"moduleSequenceNumber\":530}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":188,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet targetProperty = ns.args[0] || \\\"level\\\";\\n\\tlet amountOfNodes = ns.hacknet.numNodes();\\n\\n\\tlet lastUpgradedNodeIndex = 0;\\n\\n\\twhile (true) {\\n\\t\\twhile (ns.getPlayer().money > getUpgradeCost(ns, targetProperty, lastUpgradedNodeIndex)) {\\n\\t\\t\\tupgradeNode(ns, targetProperty, lastUpgradedNodeIndex);\\n\\t\\t\\tlastUpgradedNodeIndex++;\\n\\n\\t\\t\\tif (lastUpgradedNodeIndex >= amountOfNodes) {\\n\\t\\t\\t\\tlastUpgradedNodeIndex = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(5000);\\n\\t}\\n}\\n\\nfunction getUpgradeCost(ns, targetProperty, nodeIndex){\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\treturn ns.hacknet.getLevelUpgradeCost(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\treturn ns.hacknet.getRamUpgradeCost(nodeIndex, 1);\\n\\t} else {\\n\\t\\treturn ns.hacknet.getCoreUpgradeCost(nodeIndex, 1);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction upgradeNode(ns, targetProperty, nodeIndex) {\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\tns.hacknet.upgradeLevel(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\tns.hacknet.upgradeRam(nodeIndex, 1);\\n\\t} else {\\n\\t\\tns.hacknet.upgradeCore(nodeIndex, 1);\\n\\t}\\n}\",\"filename\":\"hacknet.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hacknet.service.js\",\"url\":\"blob:file:///56f35edc-25f6-4e4a-bb78-e8e43f4ba5af\",\"moduleSequenceNumber\":48712}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":189,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar ram = ns.args[0] || 8;\\n\\tvar scriptName = ns.args[1] || 'hack.target.js';\\n\\tvar scriptTarget = ns.args[2] || 'n00dles';\\n\\tvar scriptRAM =  ns.getScriptRam(scriptName);\\n\\n\\tvar serverCount = 0;\\n\\n\\t// Continuously try to purchase servers until we've reached the maximum amount of servers\\n\\twhile (serverCount < ns.getPurchasedServerLimit()) {    \\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {        \\n\\t\\t\\tvar hostname = ns.purchaseServer(\\\"pserv\\\" , ram);\\n\\t\\t\\tvar maxPossibleThreads = Math.floor(ram/scriptRAM);\\n\\n\\t\\t\\tns.scp(scriptName, hostname);\\n\\t\\t\\tns.exec(scriptName, hostname, maxPossibleThreads, scriptTarget);\\n\\t\\t\\tserverCount++;\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\",\"filename\":\"servers.purchase.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"servers.purchase.js\",\"url\":\"blob:file:///410289d6-f528-424b-8e35-d3f9d2f55742\",\"moduleSequenceNumber\":49589}],\"dependents\":[],\"ramUsage\":6.25,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":190,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet targetProperty = ns.args[0] || \\\"level\\\";\\n\\tlet amountOfNodes = ns.hacknet.numNodes();\\n\\tlet highestNodeLevels = {\\n\\t\\tlevel: 0,\\n\\t\\tram: 0,\\n\\t\\tcores: 0\\n\\t};\\n\\tlet nodes = [];\\n\\n\\t//Get the stats for each node\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tnodes.push(ns.hacknet.getNodeStats(i));\\n\\t}\\n\\n\\thighestNodeLevels = getHighestNodeLevels(nodes);\\n\\n\\t//Equalize levels\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tlet target = nodes[i];\\n\\n\\t\\twhile(isNotEqualized(ns, target, highestNodeLevels, targetProperty)){\\n\\t\\t\\tif(ns.getPlayer().money > getUpgradeCost(ns, targetProperty, i)){\\n\\t\\t\\t\\tupgradeNode(ns, targetProperty, i);\\n\\t\\t\\t\\ttarget = ns.hacknet.getNodeStats(i);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tawait ns.sleep(5000);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction isNotEqualized(ns, target, highestNodeLevels, targetProperty) {\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\treturn target.level < highestNodeLevels.level; \\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\treturn target.ram < highestNodeLevels.ram;\\n\\t} else {\\n\\t\\treturn target.cores < highestNodeLevels.cores;\\n\\t}\\n}\\n\\nfunction getUpgradeCost(ns, targetProperty, nodeIndex){\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\treturn ns.hacknet.getLevelUpgradeCost(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\treturn ns.hacknet.getRamUpgradeCost(nodeIndex, 1);\\n\\t} else {\\n\\t\\treturn ns.hacknet.getCoreUpgradeCost(nodeIndex, 1);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction upgradeNode(ns, targetProperty, nodeIndex) {\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\tns.hacknet.upgradeLevel(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\tns.hacknet.upgradeRam(nodeIndex, 1);\\n\\t} else {\\n\\t\\tns.hacknet.upgradeCore(nodeIndex, 1);\\n\\t}\\n}\\n\\nfunction getHighestNodeLevels(nodes){\\n\\tlet highestNodeLevels = {\\n\\t\\tlevel: 0,\\n\\t\\tram: 0,\\n\\t\\tcores: 0\\n\\t};\\n\\n\\tfor (let i = 0; i < nodes.length; i++) {\\n\\t\\tlet target = nodes[i];\\n\\t\\tif (target.level > highestNodeLevels.level) {\\n\\t\\t\\thighestNodeLevels.level = target.level;\\n\\t\\t}\\n\\n\\t\\tif (target.ram > highestNodeLevels.ram) {\\n\\t\\t\\thighestNodeLevels.ram = target.ram;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif (target.cores > highestNodeLevels.cores) {\\n\\t\\t\\thighestNodeLevels.cores = target.cores;\\n\\t\\t}\\n\\t}\\n\\n\\treturn highestNodeLevels;\\n}\",\"filename\":\"hacknet.equalize.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hacknet.equalize.js\",\"url\":\"blob:file:///41f2a78d-79dc-42bc-88e1-03629063e1de\",\"moduleSequenceNumber\":54853}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":191,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (ns.getPlayer().money > ns.hacknet.getPurchaseNodeCost()) {\\n\\t\\tns.hacknet.purchaseNode();\\n\\t}\\n}\",\"filename\":\"hacknet.purchase-nodes.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hacknet.purchase-nodes.js\",\"url\":\"blob:file:///ae641d9d-4d3a-4b65-bdc2-a305a1407b86\",\"moduleSequenceNumber\":48689}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":192,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(ns, hosts);\\t\\t\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\t\\t\\t\\n\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t} else if (ns.getServerMoneyAvailable(host.hostname) < moneyThreshold) {\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif(ns.fileExists('ramped-up-hosts.db.txt')){\\n\\t\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read('ramped-up-hosts.db.txt'));\\n\\t\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\t\\tns.write('ramped-up-hosts.db.txt', JSON.stringify(rampedHosts), 'w');\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tns.write('ramped-up-hosts.db.txt', JSON.stringify([host.hostname]), 'w');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction selectHosts(ns, hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\tvar privateServers = ns.getPurchasedServers();\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\tprivateServers.includes(host)\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.js\",\"url\":\"blob:file:///05c031eb-2023-457a-90db-d1980588e91d\",\"moduleSequenceNumber\":1398}],\"dependents\":[],\"ramUsage\":4.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":193,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9be6a930-cab0-4c04-9729-8c8f991c7da9\",\"moduleSequenceNumber\":363}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":363,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar rampedServers = JSON.parse(ns.read('ramped-up-hosts.db.txt'));\\n\\t\\tvar resourceServers = selectResourceServers(ns, hosts);\\n\\n\\t\\tvar availableRam = resourceServers\\n\\t\\t\\t.map(server => server.maxRam)\\n\\t\\t\\t.reduce((prev, next) => prev + next);\\n\\n\\t\\tvar scriptRam = ns.getScriptRam('hack.target.js');\\n\\t\\tvar maxThreads = Math.floor(availableRam / scriptRam);\\n\\t\\tvar maxThreadsPerTarget = Math.floor(maxThreads / rampedServers.length);\\n\\t\\tvar serverIndex = 0;\\n\\n\\t\\tfor (let server of resourceServers) {\\n\\t\\t\\tns.killall(server.hostname);\\n\\t\\t}\\n\\n\\t\\tlog(ns, '==============================');\\n\\t\\tlog(ns, 'Starting to hack ' + rampedServers.length + ' servers with a max of ' + maxThreadsPerTarget + ' threads each')\\n\\t\\tlog(ns, '==============================');\\n\\n\\t\\tfor (let target of rampedServers) {\\n\\t\\t\\tvar targetHackThreadsLeft = getIdealHackThreadsForTarget(ns, target, maxThreadsPerTarget);\\n\\n\\t\\t\\tlog(ns, 'Starting threads for ' + target);\\n\\n\\t\\t\\twhile (targetHackThreadsLeft > 0 && serverIndex < resourceServers.length) {\\n\\t\\t\\t\\tvar server = resourceServers[serverIndex];\\n\\t\\t\\t\\tvar server = ns.getServer(server.hostname);\\n\\t\\t\\t\\tvar availableRam = server.maxRam - server.ramUsed;\\n\\t\\t\\t\\tvar maxThreadsInThisServer = Math.floor(availableRam / scriptRam);\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer <= 0) {\\n\\t\\t\\t\\t\\tlog(ns, 'No more threads possible on server ' + serverIndex + ' - ' + server.hostname);\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer >= targetHackThreadsLeft) {\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' has capacity for all threads. Starting ' + targetHackThreadsLeft + '.ThreadsLeft: 0');\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\ttargetHackThreadsLeft,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = 0;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = targetHackThreadsLeft - maxThreadsInThisServer;\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' does not have capacity for all threads. Starting ' + maxThreadsInThisServer + '.Threads left: ' + targetHackThreadsLeft);\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\tmaxThreadsInThisServer,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t}\\t\\t\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\n\\t\\tawait ns.sleep(1800000);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction getIdealHackThreadsForTarget(ns, targetHostname, maxThreadsPerTarget) {\\n\\tvar hackChanceForTarget = ns.hackAnalyzeChance(targetHostname);\\n\\n\\tif (hackChanceForTarget > 0.9) {\\n\\t\\treturn Math.min(10, maxThreadsPerTarget);\\n\\t} else if (hackChanceForTarget > 0.8) {\\n\\t\\treturn Math.min(20, maxThreadsPerTarget);\\n\\t}\\n\\n\\treturn Math.min(30, maxThreadsPerTarget);\\n}\\n\\n/** @param {NS} ns */\\nfunction selectResourceServers(ns, hosts) {\\n\\tvar selectedHosts = [];\\n\\tvar privateServers = ns.getPurchasedServers();\\n\\t\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\t!host.hasAdminRights \\n\\t\\t\\t|| host.hostname == 'home' \\n\\t\\t\\t|| privateServers.includes(host.hostname)\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\n/** @param {NS} ns */\\nfunction log(ns, info) {\\n\\tvar date = new Date();\\n\\tvar info = '[' + date.toISOString() + '] ' + info + '\\\\n'\\n\\tns.write('/logs/hack.orchestrator.service.log.txt', info, 'a');\\n}\",\"filename\":\"hack.orchestrator.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.orchestrator.service.js\",\"url\":\"blob:file:///e7939393-42c6-4269-9fb7-d65241aacd2c\",\"moduleSequenceNumber\":362}],\"dependents\":[],\"ramUsage\":8.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":362,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.run('discovery.run-dfs.js');\\n\\tns.run('discovery.enrich.js');\\n\\tns.run('hack.rootkit.js');\\n\\tns.run('discovery.enrich.js');\\n\\tns.run('hack.infect.js', 1, 'hack.target.js');\\n\\t\\n\\tns.kill('hack.orchestrator.service.js');\\n\\tns.kill('hack.ramp-up.orchestrator.service.js');\\n\\t\\n\\tns.run('hack.ramp-up.orchestrator.service.js');\\n\\tns.run('hack.orchestrator.service.js');\\n}\",\"filename\":\"routine.new-script.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"routine.new-script.js\",\"url\":\"blob:file:///b210ae93-398e-4a8d-84a6-eabae5f7aae5\",\"moduleSequenceNumber\":56470}],\"dependents\":[],\"ramUsage\":3.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":196,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar ram = ns.args[0] || 8;\\n\\tvar scriptName = ns.args[1] || 'hack.target.js';\\n\\n\\tvar serverCount = 0;\\n\\n\\t// Continuously try to purchase servers until we've reached the maximum amount of servers\\n\\twhile (serverCount < ns.getPurchasedServerLimit()) {    \\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {        \\n\\t\\t\\tvar hostname = ns.purchaseServer(\\\"pserv\\\" , ram);\\n\\n\\t\\t\\tns.scp(scriptName, hostname);\\n\\t\\t\\tserverCount++;\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\",\"filename\":\"server.purchase.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"server.purchase.js\",\"url\":\"blob:file:///748ad3ac-cdbe-47e7-9913-9e2009ef6fe2\",\"moduleSequenceNumber\":8414}],\"dependents\":[],\"ramUsage\":4.85,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":197,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet purchasedServers = ns.getPurchasedServers();\\n\\tlet ram = ns.getServerMaxRam('pserv') * 2;\\n\\tlet waitTimeInSeconds = ns.args[0] || 0;\\n\\t\\n\\twhile (ram < Math.pow(2, 20)) {\\n\\t\\tfor (let server of purchasedServers) {\\n\\t\\t\\tns.print('Started upgrade process for ' + server + ' (to ' + ram + 'GB of RAM)');\\n\\t\\t\\t// Wait until we have money available to purchase next upgrade\\n\\t\\t\\twhile (ns.getServerMoneyAvailable('home') < ns.getPurchasedServerUpgradeCost(server, ram)) {\\n\\t\\t\\t\\tns.print('Current money: ' + ns.getServerMoneyAvailable('home'));\\n\\t\\t\\t\\tns.print('Cost of next upgrade: ' + ns.getPurchasedServerUpgradeCost(server, ram));\\n\\t\\t\\t\\tawait ns.sleep(60000);\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.upgradePurchasedServer(server, ram);\\n\\t\\t\\tns.print('Server ' + server + ' upgraded to ' + ram + 'GB of RAM');\\n\\t\\t}\\n\\n\\t\\tram = ram * 2;\\n\\n\\t\\tns.print('Waiting '+ waitTimeInSeconds +' seconds before triggering upgrades again');\\n\\t\\tawait ns.sleep(waitTimeInSeconds * 1000);\\n\\t}\\n}\",\"filename\":\"servers.upgrade.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"servers.upgrade.js\",\"url\":\"blob:file:///ab91f90e-687d-4908-8b28-2227d2190a17\",\"moduleSequenceNumber\":49748}],\"dependents\":[],\"ramUsage\":4.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":198,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerUpgradeCost\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"upgradePurchasedServer\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar reservedServers = ns.getPurchasedServers().slice(0, 14);\\n\\tns.run('discovery.run-dfs.js');\\n\\tns.run('discovery.enrich.js');\\n\\n\\tfor(let server of reservedServers) {\\n\\t\\tns.scp('hosts-info.db.txt', server);\\n\\t\\tns.scp('hack.ramp-up.service.js', server);\\n\\t\\tns.killall(server);\\n\\n\\t\\tns.exec('hack.ramp-up.service.js', server, getMaxThreads(ns, server, 'hack.ramp-up.service.js'));\\n\\t}\\n\\n\\tns.scriptKill('hack.ramp-up.service.js', 'home');\\n\\tns.exec('hack.ramp-up.service.js', 'home', 1);\\n}\\n\\nfunction getMaxThreads(ns, server, script) {\\n\\tvar serverMaxRam = ns.getServerMaxRam(server);\\n\\tvar scriptRam = ns.getScriptRam(script);\\n\\treturn Math.floor(serverMaxRam / scriptRam);\\n}\",\"filename\":\"routine.ramp-up.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"routine.ramp-up.js\",\"url\":\"blob:file:///f14ab997-cf74-4e6a-98e1-4b79f3ccb4ff\",\"moduleSequenceNumber\":50165}],\"dependents\":[],\"ramUsage\":8.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":199,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///18148411-4832-4a29-915d-6ede8b207a0b\",\"moduleSequenceNumber\":48891}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":200,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\t\\t\\n\\t\\tvar rampedServers = JSON.parse(ns.read('ramped-up-hosts.db.txt'));\\n\\t\\tvar resourceServers = selectResourceServers(ns);\\n\\n\\t\\tvar availableRam = resourceServers\\n\\t\\t\\t.map(server => server.maxRam)\\n\\t\\t\\t.reduce((prev, next) => prev + next);\\n\\n\\t\\tvar scriptRam = ns.getScriptRam('hack.ramp-up.target.js');\\n\\t\\tvar maxThreads = Math.floor(availableRam / scriptRam);\\n\\t\\tvar maxThreadsPerTarget = Math.floor(maxThreads / rampedServers.length);\\n\\t\\tvar serverIndex = 0;\\n\\n\\t\\tfor (let server of resourceServers) {\\n\\t\\t\\tns.killall(server.hostname);\\n\\t\\t}\\n\\n\\t\\tlog(ns, '==============================');\\n\\t\\tlog(ns, 'Starting to ramp up ' + rampedServers.length + ' servers with a max of ' + maxThreadsPerTarget + ' threads each')\\n\\t\\tlog(ns, '==============================');\\n\\n\\t\\tfor (let target of rampedServers) {\\n\\t\\t\\tvar targetHackThreadsLeft = getIdealRampUpThreadsForTarget(ns, target, maxThreadsPerTarget);\\n\\n\\t\\t\\tlog(ns, 'Starting threads for ' + target);\\n\\n\\t\\t\\twhile (targetHackThreadsLeft > 0 && serverIndex < resourceServers.length) {\\n\\t\\t\\t\\tvar server = resourceServers[serverIndex];\\n\\t\\t\\t\\tvar server = ns.getServer(server.hostname);\\n\\t\\t\\t\\tvar availableRam = server.maxRam - server.ramUsed;\\n\\t\\t\\t\\tvar maxThreadsInThisServer = Math.floor(availableRam / scriptRam);\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer <= 0) {\\n\\t\\t\\t\\t\\tlog(ns, 'No more threads possible on server ' + serverIndex + ' - ' + server.hostname);\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer >= targetHackThreadsLeft) {\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' has capacity for all threads. Starting ' + targetHackThreadsLeft + '.ThreadsLeft: 0');\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.ramp-up.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\ttargetHackThreadsLeft,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = 0;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = targetHackThreadsLeft - maxThreadsInThisServer;\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' does not have capacity for all threads. Starting ' + maxThreadsInThisServer + '.Threads left: ' + targetHackThreadsLeft);\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.ramp-up.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\tmaxThreadsInThisServer,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t}\\t\\t\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\n\\t\\tawait ns.sleep(60000 * 10);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction getIdealRampUpThreadsForTarget(ns, targetHostname, maxThreadsPerTarget) {\\n\\tvar hackChanceForTarget = ns.hackAnalyzeChance(targetHostname);\\n\\n\\tif(hackChanceForTarget > 0.8){\\n\\t\\treturn Math.min(1000, maxThreadsPerTarget);\\n\\t} else if(hackChanceForTarget > 0.6) {\\n\\t\\treturn Math.min(2000, maxThreadsPerTarget);\\n\\t} \\n\\n\\treturn Math.min(3000, maxThreadsPerTarget);\\n}\\n\\n/** @param {NS} ns */\\nfunction selectResourceServers(ns) {\\n\\tvar rampUpPrivateServers = ns.getPurchasedServers().slice(14);\\t\\t\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let server of rampUpPrivateServers) {\\n\\t\\tselectedHosts.push(ns.getServer(server));\\t\\t\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\n/** @param {NS} ns */\\nfunction log(ns, info) {\\n\\tvar date = new Date();\\n\\tvar info = '[' + date.toISOString() + '] ' + info + '\\\\n';\\t\\n\\tns.write('/logs/hack.ramp-up.orchestrator.service.log.txt', info, 'a');\\n}\",\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"url\":\"blob:file:///607858e3-e4d4-454f-aa74-6839f01ef0e4\",\"moduleSequenceNumber\":361}],\"dependents\":[],\"ramUsage\":8.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":361,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar servers = ns.getPurchasedServers();\\n\\t\\n\\tvar ramValues = servers\\n\\t\\t.map(server => ns.getServer(server))\\n\\t\\t.map(server => server.maxRam);\\n\\t\\n\\tvar targetRam = Math.max(... ramValues);\\t\\n\\n\\tfor(let server of servers){\\t\\t\\n\\t\\tvar serverInfo = ns.getServer(server);\\n\\t\\tif(serverInfo.maxRam < targetRam){\\t\\n\\t\\t\\tns.print('Started upgrade process for ' + server + ' (to ' + targetRam + 'GB of RAM)');\\n\\n\\t\\t\\twhile (ns.getPlayer().money < ns.getPurchasedServerUpgradeCost(serverInfo.hostname, targetRam)) {\\n\\t\\t\\t\\tns.print('Current money: ' + ns.getPlayer().money);\\n\\t\\t\\t\\tns.print('Cost of next upgrade for ' + serverInfo.hostname + ': ' + ns.getPurchasedServerUpgradeCost(serverInfo.hostname, targetRam));\\n\\t\\t\\t\\tawait ns.sleep(60000);\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.upgradePurchasedServer(serverInfo.hostname, targetRam);\\n\\t\\t\\tns.print('Server ' + server + ' upgraded to ' + targetRam + 'GB of RAM');\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"servers.equalize.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"servers.equalize.js\",\"url\":\"blob:file:///b4c2f3e3-750d-464e-b57a-603bb995c1ff\",\"moduleSequenceNumber\":49915}],\"dependents\":[],\"ramUsage\":6.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":202,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPurchasedServerUpgradeCost\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"upgradePurchasedServer\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\n\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\tvar selectedHosts = selectHosts(hosts);\\n\\tvar rampedUpHosts = [];\\n\\n\\tfor (let host of selectedHosts) {\\n\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\t\\tif (\\n\\t\\t\\tns.getServerSecurityLevel(host.hostname) <= securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) > moneyThreshold\\n\\t\\t) {\\n\\t\\t\\trampedUpHosts.push(host.hostname);\\n\\t\\t}\\n\\t}\\n\\t\\n\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedUpHosts), \\\"w\\\");\\n}\\n\\nfunction selectHosts(hosts) {\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\",\"filename\":\"routine.update-ramped-up-servers-list.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"routine.update-ramped-up-servers-list.js\",\"url\":\"blob:file:///a57f3daf-a026-4b0b-9526-099000b39f28\",\"moduleSequenceNumber\":51705}],\"dependents\":[],\"ramUsage\":2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":203,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.print(ns.hacknet.maxNumNodes());\\t\\n}\",\"filename\":\"test.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"test.js\",\"url\":\"blob:file:///7f2eddcd-4755-4957-b904-159d640a68ff\",\"moduleSequenceNumber\":153518}],\"dependents\":[],\"ramUsage\":5.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"pserv\",\"pserv-0\",\"pserv-1\",\"pserv-2\",\"pserv-3\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-7\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-14\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-20\",\"pserv-21\",\"pserv-22\",\"pserv-23\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.19196332058927357},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.3035077376982637},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":20.879999999999992,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":5470317784,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.9028628028410187},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":20.046,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":3660375185,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8512710180747635},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":22.096000000000004,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":7673939481,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.8527703810076536},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":17.078,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":9059226127,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.8410554200319583},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.31424733014834344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.33019519157091237},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":28.799999999999997,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.18018365022033064},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.160735375044315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.30654326813949134},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":21.758,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":4868562330,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.8071504084763841},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1503779324356358},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.09579944967438138},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2083287890550224},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.11006506385697079},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.1984185011576725},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.09429251859875575},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.10870390127754946},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.17837139324049328},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.21215816684720046},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.25825449900499864},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.032112405744900895},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.005596328347519535},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.1218545834486302},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.00318523862651851},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0053047913551109134},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.002413059565544326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.11702452462845495},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.05809071558196096},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.26010615287570205},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.6858663826203429},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.34088553790740955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.196245762626411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9877489985703829},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.10683254896141303},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.10081861357071359},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2808151285594306},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.33210200108882826},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.0307886702118023},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.006234557979549219},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.03633378260119599},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.0888084713902044},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.2077654135156381},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6026942075,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.9420032987412924},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.560000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13862195547,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.8063643735288922},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":15.392000000000003,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":11250000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.7094912325083608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.1440000000000001,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":262141.3,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62100,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":262144,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.08,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":47403053.545277104,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.7719999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.823999999999997,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":56846470,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.006,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":65519253,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.039999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":68909390,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"host-names.db.txt\",\"text\":\"[\\\"zb-institute\\\",\\\"silver-helix\\\",\\\"phantasy\\\",\\\"the-hub\\\",\\\"syscore\\\",\\\"computek\\\",\\\"crush-fitness\\\",\\\"avmnite-02h\\\",\\\"summit-uni\\\",\\\"catalyst\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\",\\\"aevum-police\\\",\\\"galactic-cyber\\\",\\\"global-pharm\\\",\\\"deltaone\\\",\\\"lexo-corp\\\",\\\"millenium-fitness\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"unitalife\\\",\\\"defcomm\\\",\\\"solaris\\\",\\\"zeus-med\\\",\\\"infocomm\\\",\\\"titan-labs\\\",\\\"microdyne\\\",\\\"applied-energetics\\\",\\\"fulcrumtech\\\",\\\"kuai-gong\\\",\\\"b-and-a\\\",\\\"ecorp\\\",\\\"megacorp\\\",\\\"fulcrumassets\\\",\\\"vitalife\\\",\\\"omnitek\\\",\\\"powerhouse-fitness\\\",\\\"The-Cave\\\",\\\"zb-def\\\",\\\"nova-med\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"helios\\\",\\\"4sigma\\\",\\\"clarkinc\\\",\\\".\\\",\\\"blade\\\",\\\"nwo\\\",\\\"icarus\\\",\\\"univ-energy\\\",\\\"taiyang-digital\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\",\\\"iron-gym\\\",\\\"max-hardware\\\",\\\"CSEC\\\",\\\"omega-net\\\",\\\"n00dles\\\",\\\"home\\\",\\\"darkweb\\\",\\\"pserv\\\",\\\"pserv-0\\\",\\\"pserv-1\\\",\\\"pserv-2\\\",\\\"pserv-3\\\",\\\"pserv-4\\\",\\\"pserv-5\\\",\\\"pserv-6\\\",\\\"pserv-7\\\",\\\"pserv-8\\\",\\\"pserv-9\\\",\\\"pserv-10\\\",\\\"pserv-11\\\",\\\"pserv-12\\\",\\\"pserv-13\\\",\\\"pserv-14\\\",\\\"pserv-15\\\",\\\"pserv-16\\\",\\\"pserv-17\\\",\\\"pserv-18\\\",\\\"pserv-19\\\",\\\"pserv-20\\\",\\\"pserv-21\\\",\\\"pserv-22\\\",\\\"pserv-23\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"nectar-net\\\",\\\"neo-net\\\"]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"/logs/hack.ramp-up.orchestrator.service.log.txt\",\"text\":\"[2023-04-29T13:21:22.317Z] ==============================\\n[2023-04-29T13:21:22.322Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:21:22.322Z] ==============================\\n[2023-04-29T13:21:22.322Z] Starting threads for n00dles\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for foodnstuff\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for joesguns\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for nectar-net\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for max-hardware\\n[2023-04-29T13:21:22.322Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for neo-net\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for zer0\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for iron-gym\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for phantasy\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for omega-net\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for crush-fitness\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for the-hub\\n[2023-04-29T13:21:22.322Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:21:22.322Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for rothman-uni\\n[2023-04-29T13:21:22.323Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for johnson-ortho\\n[2023-04-29T13:21:22.323Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for rho-construction\\n[2023-04-29T13:21:22.323Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for computek\\n[2023-04-29T13:21:22.323Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:21:22.323Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for millenium-fitness\\n[2023-04-29T13:21:22.323Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] ==============================\\n[2023-04-29T13:27:21.154Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:27:21.154Z] ==============================\\n[2023-04-29T13:27:21.154Z] Starting threads for n00dles\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for foodnstuff\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for joesguns\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for nectar-net\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for max-hardware\\n[2023-04-29T13:27:21.155Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for neo-net\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for zer0\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for iron-gym\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for phantasy\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for omega-net\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for crush-fitness\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for the-hub\\n[2023-04-29T13:27:21.155Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for rothman-uni\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for johnson-ortho\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for rho-construction\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for computek\\n[2023-04-29T13:27:21.155Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:27:21.155Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for millenium-fitness\\n[2023-04-29T13:27:21.155Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] ==============================\\n[2023-04-29T13:37:21.165Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:37:21.165Z] ==============================\\n[2023-04-29T13:37:21.165Z] Starting threads for n00dles\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for foodnstuff\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for joesguns\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for nectar-net\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for max-hardware\\n[2023-04-29T13:37:21.165Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for neo-net\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for zer0\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for iron-gym\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for phantasy\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for omega-net\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for crush-fitness\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for the-hub\\n[2023-04-29T13:37:21.166Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for rothman-uni\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for johnson-ortho\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for rho-construction\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for computek\\n[2023-04-29T13:37:21.166Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:37:21.166Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for millenium-fitness\\n[2023-04-29T13:37:21.166Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.174Z] ==============================\\n[2023-04-29T13:47:21.174Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:47:21.174Z] ==============================\\n[2023-04-29T13:47:21.174Z] Starting threads for n00dles\\n[2023-04-29T13:47:21.174Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.174Z] Starting threads for foodnstuff\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for joesguns\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for nectar-net\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for max-hardware\\n[2023-04-29T13:47:21.175Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for neo-net\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for zer0\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for iron-gym\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for phantasy\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for omega-net\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for crush-fitness\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for the-hub\\n[2023-04-29T13:47:21.175Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for rothman-uni\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for johnson-ortho\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for rho-construction\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for computek\\n[2023-04-29T13:47:21.175Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:47:21.175Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for millenium-fitness\\n[2023-04-29T13:47:21.175Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] ==============================\\n[2023-04-29T13:57:21.193Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:57:21.193Z] ==============================\\n[2023-04-29T13:57:21.193Z] Starting threads for n00dles\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for foodnstuff\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for joesguns\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for nectar-net\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for max-hardware\\n[2023-04-29T13:57:21.193Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for neo-net\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for zer0\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for iron-gym\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for phantasy\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for omega-net\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for crush-fitness\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for the-hub\\n[2023-04-29T13:57:21.193Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for rothman-uni\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for johnson-ortho\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for rho-construction\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for computek\\n[2023-04-29T13:57:21.194Z] Server pserv-15 does not have capacity for all threads. Starting 1369.Threads left: 631\\n[2023-04-29T13:57:21.194Z] Server pserv-16 has capacity for all threads. Starting 631.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for millenium-fitness\\n[2023-04-29T13:57:21.194Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] ==============================\\n[2023-04-29T14:07:21.204Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:07:21.204Z] ==============================\\n[2023-04-29T14:07:21.204Z] Starting threads for n00dles\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for foodnstuff\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for joesguns\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for nectar-net\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for max-hardware\\n[2023-04-29T14:07:21.204Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for neo-net\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for zer0\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for iron-gym\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for phantasy\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for omega-net\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for crush-fitness\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for the-hub\\n[2023-04-29T14:07:21.204Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for rothman-uni\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for johnson-ortho\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for rho-construction\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for computek\\n[2023-04-29T14:07:21.204Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:07:21.205Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:07:21.205Z] Starting threads for millenium-fitness\\n[2023-04-29T14:07:21.205Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] ==============================\\n[2023-04-29T14:17:21.217Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:17:21.217Z] ==============================\\n[2023-04-29T14:17:21.217Z] Starting threads for n00dles\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for foodnstuff\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for joesguns\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for nectar-net\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for max-hardware\\n[2023-04-29T14:17:21.217Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for neo-net\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for zer0\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for iron-gym\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for phantasy\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for omega-net\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for crush-fitness\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for the-hub\\n[2023-04-29T14:17:21.217Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:17:21.217Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for rothman-uni\\n[2023-04-29T14:17:21.218Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for johnson-ortho\\n[2023-04-29T14:17:21.218Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for rho-construction\\n[2023-04-29T14:17:21.218Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for computek\\n[2023-04-29T14:17:21.218Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:17:21.218Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for millenium-fitness\\n[2023-04-29T14:17:21.218Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.220Z] ==============================\\n[2023-04-29T14:27:21.220Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:27:21.220Z] ==============================\\n[2023-04-29T14:27:21.220Z] Starting threads for n00dles\\n[2023-04-29T14:27:21.220Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for foodnstuff\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for joesguns\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for nectar-net\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for max-hardware\\n[2023-04-29T14:27:21.222Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for neo-net\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for zer0\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for iron-gym\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for phantasy\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for omega-net\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for crush-fitness\\n[2023-04-29T14:27:21.223Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for the-hub\\n[2023-04-29T14:27:21.223Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for rothman-uni\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for johnson-ortho\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for rho-construction\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for computek\\n[2023-04-29T14:27:21.223Z] Server pserv-15 does not have capacity for all threads. Starting 1369.Threads left: 631\\n[2023-04-29T14:27:21.224Z] Server pserv-16 has capacity for all threads. Starting 631.ThreadsLeft: 0\\n[2023-04-29T14:27:21.224Z] Starting threads for millenium-fitness\\n[2023-04-29T14:27:21.224Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] ==============================\\n[2023-04-29T14:37:21.230Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:37:21.230Z] ==============================\\n[2023-04-29T14:37:21.230Z] Starting threads for n00dles\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for foodnstuff\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for joesguns\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for nectar-net\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for max-hardware\\n[2023-04-29T14:37:21.230Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for neo-net\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for zer0\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for iron-gym\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for phantasy\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for omega-net\\n[2023-04-29T14:37:21.231Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for crush-fitness\\n[2023-04-29T14:37:21.231Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for the-hub\\n[2023-04-29T14:37:21.231Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for rothman-uni\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for johnson-ortho\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for rho-construction\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for computek\\n[2023-04-29T14:37:21.231Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:37:21.231Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for millenium-fitness\\n[2023-04-29T14:37:21.231Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] ==============================\\n[2023-04-29T14:47:21.233Z] Starting to ramp up 21 servers with a max of 3731 threads each\\n[2023-04-29T14:47:21.233Z] ==============================\\n[2023-04-29T14:47:21.233Z] Starting threads for n00dles\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for foodnstuff\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for joesguns\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for nectar-net\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for max-hardware\\n[2023-04-29T14:47:21.233Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for neo-net\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for zer0\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for iron-gym\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for phantasy\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for omega-net\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for crush-fitness\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for the-hub\\n[2023-04-29T14:47:21.233Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for rothman-uni\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for johnson-ortho\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for rho-construction\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for computek\\n[2023-04-29T14:47:21.233Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:47:21.233Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for millenium-fitness\\n[2023-04-29T14:47:21.233Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for silver-helix\\n[2023-04-29T14:47:21.233Z] Server pserv-16 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] ==============================\\n[2023-04-29T14:57:21.253Z] Starting to ramp up 22 servers with a max of 3561 threads each\\n[2023-04-29T14:57:21.253Z] ==============================\\n[2023-04-29T14:57:21.253Z] Starting threads for n00dles\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for foodnstuff\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for joesguns\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for nectar-net\\n[2023-04-29T14:57:21.254Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for max-hardware\\n[2023-04-29T14:57:21.254Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for neo-net\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for zer0\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for iron-gym\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for phantasy\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for omega-net\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for crush-fitness\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for the-hub\\n[2023-04-29T14:57:21.254Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for rothman-uni\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for johnson-ortho\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for rho-construction\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for computek\\n[2023-04-29T14:57:21.254Z] Server pserv-15 does not have capacity for all threads. Starting 1369.Threads left: 631\\n[2023-04-29T14:57:21.254Z] Server pserv-16 has capacity for all threads. Starting 631.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for millenium-fitness\\n[2023-04-29T14:57:21.255Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.255Z] Starting threads for silver-helix\\n[2023-04-29T14:57:21.255Z] Server pserv-16 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.255Z] Starting threads for summit-uni\\n[2023-04-29T14:57:21.255Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.274Z] ==============================\\n[2023-04-29T15:07:21.274Z] Starting to ramp up 22 servers with a max of 3561 threads each\\n[2023-04-29T15:07:21.274Z] ==============================\\n[2023-04-29T15:07:21.274Z] Starting threads for n00dles\\n[2023-04-29T15:07:21.274Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for foodnstuff\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for joesguns\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for nectar-net\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for max-hardware\\n[2023-04-29T15:07:21.275Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T15:07:21.275Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for neo-net\\n[2023-04-29T15:07:21.275Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for zer0\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for iron-gym\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for phantasy\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for omega-net\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for crush-fitness\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for the-hub\\n[2023-04-29T15:07:21.276Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for rothman-uni\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for johnson-ortho\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for rho-construction\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for computek\\n[2023-04-29T15:07:21.276Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for millenium-fitness\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for silver-helix\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for summit-uni\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] ==============================\\n[2023-04-29T15:17:21.283Z] Starting to ramp up 22 servers with a max of 7123 threads each\\n[2023-04-29T15:17:21.283Z] ==============================\\n[2023-04-29T15:17:21.283Z] Starting threads for n00dles\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for foodnstuff\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for joesguns\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for nectar-net\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for max-hardware\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for neo-net\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for zer0\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for iron-gym\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for phantasy\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for omega-net\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for crush-fitness\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for the-hub\\n[2023-04-29T15:17:21.283Z] Server pserv-13 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for rothman-uni\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for johnson-ortho\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for rho-construction\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for computek\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for millenium-fitness\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for silver-helix\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for summit-uni\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] ==============================\\n[2023-04-29T15:27:21.295Z] Starting to ramp up 22 servers with a max of 14246 threads each\\n[2023-04-29T15:27:21.295Z] ==============================\\n[2023-04-29T15:27:21.295Z] Starting threads for n00dles\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for foodnstuff\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for joesguns\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for nectar-net\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for max-hardware\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for neo-net\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for zer0\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for iron-gym\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for phantasy\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for omega-net\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for crush-fitness\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for the-hub\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for rothman-uni\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for johnson-ortho\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for rho-construction\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for computek\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for millenium-fitness\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for silver-helix\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for summit-uni\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.282Z] ==============================\\n[2023-04-29T15:32:25.282Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T15:32:25.282Z] ==============================\\n[2023-04-29T15:32:25.282Z] Starting threads for n00dles\\n[2023-04-29T15:32:25.282Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.282Z] Starting threads for foodnstuff\\n[2023-04-29T15:32:25.282Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.282Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for joesguns\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for nectar-net\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for max-hardware\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for neo-net\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for zer0\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for iron-gym\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for phantasy\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for omega-net\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for crush-fitness\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for the-hub\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for rothman-uni\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for johnson-ortho\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for rho-construction\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for computek\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for millenium-fitness\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for silver-helix\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for summit-uni\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] ==============================\\n[2023-04-29T15:42:25.291Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T15:42:25.291Z] ==============================\\n[2023-04-29T15:42:25.291Z] Starting threads for n00dles\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for foodnstuff\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for joesguns\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for nectar-net\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for max-hardware\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for neo-net\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for zer0\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for iron-gym\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for phantasy\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for omega-net\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for crush-fitness\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for the-hub\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for rothman-uni\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for johnson-ortho\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for rho-construction\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for computek\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for millenium-fitness\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for silver-helix\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for summit-uni\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] ==============================\\n[2023-04-29T15:52:25.304Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T15:52:25.304Z] ==============================\\n[2023-04-29T15:52:25.304Z] Starting threads for n00dles\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for foodnstuff\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for joesguns\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for nectar-net\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for max-hardware\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for neo-net\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for zer0\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for iron-gym\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for phantasy\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for omega-net\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for crush-fitness\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for the-hub\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for rothman-uni\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for johnson-ortho\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for rho-construction\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for computek\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for millenium-fitness\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for silver-helix\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.305Z] Starting threads for summit-uni\\n[2023-04-29T15:52:25.305Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] ==============================\\n[2023-04-29T16:02:25.311Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:02:25.311Z] ==============================\\n[2023-04-29T16:02:25.311Z] Starting threads for n00dles\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for foodnstuff\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for joesguns\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for nectar-net\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for max-hardware\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for neo-net\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for zer0\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for iron-gym\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for phantasy\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for omega-net\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for crush-fitness\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for the-hub\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for rothman-uni\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for johnson-ortho\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for rho-construction\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for computek\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for millenium-fitness\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for silver-helix\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for summit-uni\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.318Z] ==============================\\n[2023-04-29T16:12:25.318Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:12:25.318Z] ==============================\\n[2023-04-29T16:12:25.319Z] Starting threads for n00dles\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for foodnstuff\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for joesguns\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for nectar-net\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for max-hardware\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for neo-net\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for zer0\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for iron-gym\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for phantasy\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for omega-net\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for crush-fitness\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for the-hub\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for rothman-uni\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for johnson-ortho\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for rho-construction\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for computek\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for millenium-fitness\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for silver-helix\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for summit-uni\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] ==============================\\n[2023-04-29T16:22:25.335Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:22:25.335Z] ==============================\\n[2023-04-29T16:22:25.335Z] Starting threads for n00dles\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for foodnstuff\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for joesguns\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for nectar-net\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for max-hardware\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for neo-net\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for zer0\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for iron-gym\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for phantasy\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for omega-net\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for crush-fitness\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for the-hub\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for rothman-uni\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for johnson-ortho\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for rho-construction\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for computek\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for millenium-fitness\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for silver-helix\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for summit-uni\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] ==============================\\n[2023-04-29T16:32:25.354Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:32:25.354Z] ==============================\\n[2023-04-29T16:32:25.354Z] Starting threads for n00dles\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for foodnstuff\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for joesguns\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for nectar-net\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for max-hardware\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for neo-net\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for zer0\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for iron-gym\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for phantasy\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for omega-net\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for crush-fitness\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for the-hub\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for rothman-uni\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for johnson-ortho\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for rho-construction\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for computek\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for millenium-fitness\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for silver-helix\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for summit-uni\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] ==============================\\n[2023-04-29T16:42:25.361Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:42:25.361Z] ==============================\\n[2023-04-29T16:42:25.361Z] Starting threads for n00dles\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for foodnstuff\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for joesguns\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for nectar-net\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for max-hardware\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for neo-net\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for zer0\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for iron-gym\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for phantasy\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for omega-net\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for crush-fitness\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for the-hub\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for rothman-uni\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for johnson-ortho\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for rho-construction\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for computek\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for millenium-fitness\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for silver-helix\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for summit-uni\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.368Z] ==============================\\n[2023-04-29T16:52:25.368Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:52:25.368Z] ==============================\\n[2023-04-29T16:52:25.369Z] Starting threads for n00dles\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for foodnstuff\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for joesguns\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for nectar-net\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for max-hardware\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for neo-net\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for zer0\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for iron-gym\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for phantasy\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for omega-net\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for crush-fitness\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for the-hub\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for rothman-uni\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for johnson-ortho\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for rho-construction\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for computek\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for millenium-fitness\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for silver-helix\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for summit-uni\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] ==============================\\n[2023-04-29T17:02:25.377Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:02:25.377Z] ==============================\\n[2023-04-29T17:02:25.377Z] Starting threads for n00dles\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for foodnstuff\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for joesguns\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for nectar-net\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for max-hardware\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for neo-net\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for zer0\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for iron-gym\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for phantasy\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for omega-net\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for crush-fitness\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for the-hub\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for rothman-uni\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for johnson-ortho\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for rho-construction\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for computek\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for millenium-fitness\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for silver-helix\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for summit-uni\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] ==============================\\n[2023-04-29T17:12:25.389Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:12:25.389Z] ==============================\\n[2023-04-29T17:12:25.389Z] Starting threads for n00dles\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for foodnstuff\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for joesguns\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for nectar-net\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for max-hardware\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for neo-net\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for zer0\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for iron-gym\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for phantasy\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for omega-net\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for crush-fitness\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for the-hub\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for rothman-uni\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for johnson-ortho\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for rho-construction\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for computek\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for millenium-fitness\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for silver-helix\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for summit-uni\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] ==============================\\n[2023-04-29T17:22:25.398Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:22:25.398Z] ==============================\\n[2023-04-29T17:22:25.398Z] Starting threads for n00dles\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for foodnstuff\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for joesguns\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for nectar-net\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for max-hardware\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for neo-net\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for zer0\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for iron-gym\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for phantasy\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for omega-net\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for crush-fitness\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for the-hub\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for rothman-uni\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for johnson-ortho\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for rho-construction\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for computek\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for millenium-fitness\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for silver-helix\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for summit-uni\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] ==============================\\n[2023-04-29T17:32:25.407Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:32:25.407Z] ==============================\\n[2023-04-29T17:32:25.407Z] Starting threads for n00dles\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for foodnstuff\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for joesguns\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for nectar-net\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for max-hardware\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for neo-net\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for zer0\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for iron-gym\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for phantasy\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for omega-net\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for crush-fitness\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for the-hub\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for rothman-uni\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for johnson-ortho\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for rho-construction\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for computek\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for millenium-fitness\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for silver-helix\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for summit-uni\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] ==============================\\n[2023-04-29T17:42:25.426Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:42:25.426Z] ==============================\\n[2023-04-29T17:42:25.426Z] Starting threads for n00dles\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for foodnstuff\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for joesguns\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for nectar-net\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for max-hardware\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for neo-net\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for zer0\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for iron-gym\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for phantasy\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for omega-net\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for crush-fitness\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for the-hub\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for rothman-uni\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for johnson-ortho\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for rho-construction\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for computek\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for millenium-fitness\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for silver-helix\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for summit-uni\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] ==============================\\n[2023-04-29T17:52:25.430Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:52:25.430Z] ==============================\\n[2023-04-29T17:52:25.430Z] Starting threads for n00dles\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for foodnstuff\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for joesguns\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for nectar-net\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for max-hardware\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for neo-net\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for zer0\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for iron-gym\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for phantasy\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for omega-net\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for crush-fitness\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for the-hub\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for rothman-uni\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for johnson-ortho\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for rho-construction\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for computek\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for millenium-fitness\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for silver-helix\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for summit-uni\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.443Z] ==============================\\n[2023-04-29T18:02:25.443Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T18:02:25.443Z] ==============================\\n[2023-04-29T18:02:25.443Z] Starting threads for n00dles\\n[2023-04-29T18:02:25.443Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.443Z] Starting threads for foodnstuff\\n[2023-04-29T18:02:25.443Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.443Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:02:25.443Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for joesguns\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for nectar-net\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for max-hardware\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for neo-net\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for zer0\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for iron-gym\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for phantasy\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for omega-net\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for crush-fitness\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for the-hub\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for rothman-uni\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for johnson-ortho\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for rho-construction\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for computek\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for millenium-fitness\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for silver-helix\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for summit-uni\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:42:34.119Z] ==============================\\n[2023-04-29T18:42:34.119Z] Starting to ramp up 6 servers with a max of 102 threads each\\n[2023-04-29T18:42:34.119Z] ==============================\\n[2023-04-29T18:42:34.119Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:42:34.119Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-14 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for n00dles\\n[2023-04-29T18:42:34.124Z] Server pserv-14 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-15 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for foodnstuff\\n[2023-04-29T18:42:34.124Z] Server pserv-15 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-16 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:42:34.124Z] Server pserv-16 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-17 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for joesguns\\n[2023-04-29T18:42:34.124Z] Server pserv-17 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-18 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:42:34.124Z] Server pserv-18 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-19 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] ==============================\\n[2023-04-29T18:44:02.569Z] Starting to ramp up 7 servers with a max of 87 threads each\\n[2023-04-29T18:44:02.569Z] ==============================\\n[2023-04-29T18:44:02.569Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:44:02.569Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-14 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for n00dles\\n[2023-04-29T18:44:02.569Z] Server pserv-14 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-15 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for foodnstuff\\n[2023-04-29T18:44:02.569Z] Server pserv-15 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-16 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:44:02.569Z] Server pserv-16 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-17 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for joesguns\\n[2023-04-29T18:44:02.569Z] Server pserv-17 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-18 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:44:02.569Z] Server pserv-18 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-19 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for nectar-net\\n[2023-04-29T18:44:02.569Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-20 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] ==============================\\n[2023-04-29T18:48:50.449Z] Starting to ramp up 7 servers with a max of 349 threads each\\n[2023-04-29T18:48:50.449Z] ==============================\\n[2023-04-29T18:48:50.449Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:48:50.449Z] Server pserv-13 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-14 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for n00dles\\n[2023-04-29T18:48:50.449Z] Server pserv-14 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-15 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for foodnstuff\\n[2023-04-29T18:48:50.449Z] Server pserv-15 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-16 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:48:50.449Z] Server pserv-16 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-17 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for joesguns\\n[2023-04-29T18:48:50.449Z] Server pserv-17 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-18 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:48:50.449Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-19 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for nectar-net\\n[2023-04-29T18:48:50.449Z] Server pserv-19 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-20 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:52:29.139Z] ==============================\\n[2023-04-29T18:52:29.139Z] Starting to ramp up 8 servers with a max of 306 threads each\\n[2023-04-29T18:52:29.139Z] ==============================\\n[2023-04-29T18:52:29.139Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:52:29.139Z] Server pserv-13 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.139Z] Server pserv-14 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for n00dles\\n[2023-04-29T18:52:29.140Z] Server pserv-14 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-15 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for foodnstuff\\n[2023-04-29T18:52:29.140Z] Server pserv-15 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-16 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:52:29.140Z] Server pserv-16 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for joesguns\\n[2023-04-29T18:52:29.140Z] Server pserv-17 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-18 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:52:29.140Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-19 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for nectar-net\\n[2023-04-29T18:52:29.140Z] Server pserv-19 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-20 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for neo-net\\n[2023-04-29T18:52:29.140Z] Server pserv-20 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-21 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:54:10.915Z] ==============================\\n[2023-04-29T18:54:10.915Z] Starting to ramp up 8 servers with a max of 306 threads each\\n[2023-04-29T18:54:10.915Z] ==============================\\n[2023-04-29T18:54:10.915Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:54:10.915Z] Server pserv-13 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:54:10.915Z] Server pserv-14 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for n00dles\\n[2023-04-29T18:54:10.916Z] Server pserv-14 does not have capacity for all threads. Starting 138.Threads left: 168\\n[2023-04-29T18:54:10.916Z] Server pserv-15 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for foodnstuff\\n[2023-04-29T18:54:10.916Z] Server pserv-15 does not have capacity for all threads. Starting 54.Threads left: 252\\n[2023-04-29T18:54:10.916Z] Server pserv-16 does not have capacity for all threads. Starting 222.Threads left: 30\\n[2023-04-29T18:54:10.916Z] Server pserv-17 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:54:10.916Z] Server pserv-17 does not have capacity for all threads. Starting 192.Threads left: 114\\n[2023-04-29T18:54:10.916Z] Server pserv-18 has capacity for all threads. Starting 114.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for joesguns\\n[2023-04-29T18:54:10.916Z] Server pserv-18 does not have capacity for all threads. Starting 108.Threads left: 198\\n[2023-04-29T18:54:10.916Z] Server pserv-19 has capacity for all threads. Starting 198.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:54:10.916Z] Server pserv-19 does not have capacity for all threads. Starting 24.Threads left: 282\\n[2023-04-29T18:54:10.916Z] Server pserv-20 does not have capacity for all threads. Starting 222.Threads left: 60\\n[2023-04-29T18:54:10.916Z] Server pserv-21 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for nectar-net\\n[2023-04-29T18:54:10.916Z] Server pserv-21 does not have capacity for all threads. Starting 162.Threads left: 144\\n[2023-04-29T18:54:10.916Z] Server pserv-22 has capacity for all threads. Starting 144.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for neo-net\\n[2023-04-29T18:54:10.916Z] Server pserv-22 does not have capacity for all threads. Starting 78.Threads left: 228\\n[2023-04-29T18:54:10.916Z] Server pserv-23 does not have capacity for all threads. Starting 222.Threads left: 6\\n[2023-04-29T19:04:10.922Z] ==============================\\n[2023-04-29T19:04:10.922Z] Starting to ramp up 10 servers with a max of 489 threads each\\n[2023-04-29T19:04:10.922Z] ==============================\\n[2023-04-29T19:04:10.922Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:04:10.922Z] Server pserv-13 does not have capacity for all threads. Starting 445.Threads left: 44\\n[2023-04-29T19:04:10.922Z] Server pserv-14 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for n00dles\\n[2023-04-29T19:04:10.922Z] Server pserv-14 does not have capacity for all threads. Starting 401.Threads left: 88\\n[2023-04-29T19:04:10.922Z] Server pserv-15 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for foodnstuff\\n[2023-04-29T19:04:10.922Z] Server pserv-15 does not have capacity for all threads. Starting 357.Threads left: 132\\n[2023-04-29T19:04:10.922Z] Server pserv-16 has capacity for all threads. Starting 132.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:04:10.922Z] Server pserv-16 does not have capacity for all threads. Starting 313.Threads left: 176\\n[2023-04-29T19:04:10.922Z] Server pserv-17 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for joesguns\\n[2023-04-29T19:04:10.922Z] Server pserv-17 does not have capacity for all threads. Starting 269.Threads left: 220\\n[2023-04-29T19:04:10.922Z] Server pserv-18 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:04:10.922Z] Server pserv-18 does not have capacity for all threads. Starting 225.Threads left: 264\\n[2023-04-29T19:04:10.922Z] Server pserv-19 has capacity for all threads. Starting 264.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for nectar-net\\n[2023-04-29T19:04:10.922Z] Server pserv-19 does not have capacity for all threads. Starting 181.Threads left: 308\\n[2023-04-29T19:04:10.922Z] Server pserv-20 has capacity for all threads. Starting 308.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for neo-net\\n[2023-04-29T19:04:10.922Z] Server pserv-20 does not have capacity for all threads. Starting 137.Threads left: 352\\n[2023-04-29T19:04:10.922Z] Server pserv-21 has capacity for all threads. Starting 352.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for phantasy\\n[2023-04-29T19:04:10.922Z] Server pserv-21 does not have capacity for all threads. Starting 93.Threads left: 396\\n[2023-04-29T19:04:10.922Z] Server pserv-22 has capacity for all threads. Starting 396.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for max-hardware\\n[2023-04-29T19:04:10.922Z] Server pserv-22 does not have capacity for all threads. Starting 49.Threads left: 440\\n[2023-04-29T19:04:10.922Z] Server pserv-23 has capacity for all threads. Starting 440.ThreadsLeft: 0\\n[2023-04-29T19:07:20.117Z] ==============================\\n[2023-04-29T19:07:20.117Z] Starting to ramp up 11 servers with a max of 445 threads each\\n[2023-04-29T19:07:20.117Z] ==============================\\n[2023-04-29T19:07:20.117Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:07:20.117Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.135Z] Starting threads for n00dles\\n[2023-04-29T19:07:20.135Z] No more threads possible on server 0 - pserv-13\\n[2023-04-29T19:07:20.135Z] Server pserv-14 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.153Z] Starting threads for foodnstuff\\n[2023-04-29T19:07:20.153Z] No more threads possible on server 1 - pserv-14\\n[2023-04-29T19:07:20.153Z] Server pserv-15 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.170Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:07:20.170Z] No more threads possible on server 2 - pserv-15\\n[2023-04-29T19:07:20.170Z] Server pserv-16 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.189Z] Starting threads for joesguns\\n[2023-04-29T19:07:20.189Z] No more threads possible on server 3 - pserv-16\\n[2023-04-29T19:07:20.189Z] Server pserv-17 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.207Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:07:20.207Z] No more threads possible on server 4 - pserv-17\\n[2023-04-29T19:07:20.207Z] Server pserv-18 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.226Z] Starting threads for nectar-net\\n[2023-04-29T19:07:20.226Z] No more threads possible on server 5 - pserv-18\\n[2023-04-29T19:07:20.226Z] Server pserv-19 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.244Z] Starting threads for neo-net\\n[2023-04-29T19:07:20.244Z] No more threads possible on server 6 - pserv-19\\n[2023-04-29T19:07:20.244Z] Server pserv-20 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.264Z] Starting threads for phantasy\\n[2023-04-29T19:07:20.264Z] No more threads possible on server 7 - pserv-20\\n[2023-04-29T19:07:20.264Z] Server pserv-21 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.283Z] Starting threads for max-hardware\\n[2023-04-29T19:07:20.283Z] No more threads possible on server 8 - pserv-21\\n[2023-04-29T19:07:20.283Z] Server pserv-22 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.303Z] Starting threads for zer0\\n[2023-04-29T19:07:20.303Z] No more threads possible on server 9 - pserv-22\\n[2023-04-29T19:07:20.303Z] Server pserv-23 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] ==============================\\n[2023-04-29T19:10:44.416Z] Starting to ramp up 11 servers with a max of 445 threads each\\n[2023-04-29T19:10:44.416Z] ==============================\\n[2023-04-29T19:10:44.416Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:10:44.416Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for n00dles\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 0 - pserv-13\\n[2023-04-29T19:10:44.416Z] Server pserv-14 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for foodnstuff\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 1 - pserv-14\\n[2023-04-29T19:10:44.416Z] Server pserv-15 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 2 - pserv-15\\n[2023-04-29T19:10:44.416Z] Server pserv-16 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for joesguns\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 3 - pserv-16\\n[2023-04-29T19:10:44.416Z] Server pserv-17 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 4 - pserv-17\\n[2023-04-29T19:10:44.416Z] Server pserv-18 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for nectar-net\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 5 - pserv-18\\n[2023-04-29T19:10:44.416Z] Server pserv-19 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for neo-net\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 6 - pserv-19\\n[2023-04-29T19:10:44.416Z] Server pserv-20 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for phantasy\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 7 - pserv-20\\n[2023-04-29T19:10:44.416Z] Server pserv-21 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for max-hardware\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 8 - pserv-21\\n[2023-04-29T19:10:44.416Z] Server pserv-22 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for zer0\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 9 - pserv-22\\n[2023-04-29T19:10:44.416Z] Server pserv-23 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:20:45.012Z] ==============================\\n[2023-04-29T19:20:45.012Z] Starting to ramp up 12 servers with a max of 408 threads each\\n[2023-04-29T19:20:45.012Z] ==============================\\n[2023-04-29T19:20:45.012Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:20:45.012Z] Server pserv-13 has capacity for all threads. Starting 408.ThreadsLeft: 0\\n[2023-04-29T19:20:45.031Z] Starting threads for n00dles\\n[2023-04-29T19:20:45.031Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 371\\n[2023-04-29T19:20:45.052Z] Server pserv-14 has capacity for all threads. Starting 371.ThreadsLeft: 0\\n[2023-04-29T19:20:45.072Z] Starting threads for foodnstuff\\n[2023-04-29T19:20:45.072Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 334\\n[2023-04-29T19:20:45.093Z] Server pserv-15 has capacity for all threads. Starting 334.ThreadsLeft: 0\\n[2023-04-29T19:20:45.113Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:20:45.113Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 297\\n[2023-04-29T19:20:45.151Z] Server pserv-16 has capacity for all threads. Starting 297.ThreadsLeft: 0\\n[2023-04-29T19:20:45.191Z] Starting threads for joesguns\\n[2023-04-29T19:20:45.191Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 260\\n[2023-04-29T19:20:45.211Z] Server pserv-17 has capacity for all threads. Starting 260.ThreadsLeft: 0\\n[2023-04-29T19:20:45.233Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:20:45.234Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 223\\n[2023-04-29T19:20:45.253Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T19:20:45.275Z] Starting threads for nectar-net\\n[2023-04-29T19:20:45.275Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 186\\n[2023-04-29T19:20:45.298Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T19:20:45.321Z] Starting threads for neo-net\\n[2023-04-29T19:20:45.321Z] Server pserv-19 does not have capacity for all threads. Starting 259.Threads left: 149\\n[2023-04-29T19:20:45.345Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T19:20:45.367Z] Starting threads for phantasy\\n[2023-04-29T19:20:45.367Z] Server pserv-20 does not have capacity for all threads. Starting 296.Threads left: 112\\n[2023-04-29T19:20:45.390Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T19:20:45.411Z] Starting threads for max-hardware\\n[2023-04-29T19:20:45.411Z] Server pserv-21 does not have capacity for all threads. Starting 333.Threads left: 75\\n[2023-04-29T19:20:45.434Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T19:20:45.456Z] Starting threads for zer0\\n[2023-04-29T19:20:45.456Z] Server pserv-22 does not have capacity for all threads. Starting 370.Threads left: 38\\n[2023-04-29T19:20:45.478Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T19:20:45.503Z] Starting threads for iron-gym\\n[2023-04-29T19:20:45.503Z] Server pserv-23 does not have capacity for all threads. Starting 407.Threads left: 1\\n[2023-04-29T19:30:45.532Z] ==============================\\n[2023-04-29T19:30:45.532Z] Starting to ramp up 12 servers with a max of 408 threads each\\n[2023-04-29T19:30:45.532Z] ==============================\\n[2023-04-29T19:30:45.532Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:30:45.532Z] Server pserv-13 has capacity for all threads. Starting 408.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for n00dles\\n[2023-04-29T19:30:45.532Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 371\\n[2023-04-29T19:30:45.532Z] Server pserv-14 has capacity for all threads. Starting 371.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for foodnstuff\\n[2023-04-29T19:30:45.532Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 334\\n[2023-04-29T19:30:45.532Z] Server pserv-15 has capacity for all threads. Starting 334.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:30:45.532Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 297\\n[2023-04-29T19:30:45.532Z] Server pserv-16 has capacity for all threads. Starting 297.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for joesguns\\n[2023-04-29T19:30:45.532Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 260\\n[2023-04-29T19:30:45.532Z] Server pserv-17 has capacity for all threads. Starting 260.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:30:45.532Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 223\\n[2023-04-29T19:30:45.532Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for nectar-net\\n[2023-04-29T19:30:45.533Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 186\\n[2023-04-29T19:30:45.533Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for neo-net\\n[2023-04-29T19:30:45.533Z] Server pserv-19 does not have capacity for all threads. Starting 259.Threads left: 149\\n[2023-04-29T19:30:45.533Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for phantasy\\n[2023-04-29T19:30:45.533Z] Server pserv-20 does not have capacity for all threads. Starting 296.Threads left: 112\\n[2023-04-29T19:30:45.533Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for max-hardware\\n[2023-04-29T19:30:45.533Z] Server pserv-21 does not have capacity for all threads. Starting 333.Threads left: 75\\n[2023-04-29T19:30:45.533Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for zer0\\n[2023-04-29T19:30:45.533Z] Server pserv-22 does not have capacity for all threads. Starting 370.Threads left: 38\\n[2023-04-29T19:30:45.533Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for iron-gym\\n[2023-04-29T19:30:45.533Z] Server pserv-23 does not have capacity for all threads. Starting 407.Threads left: 1\\n[2023-04-29T19:40:45.533Z] ==============================\\n[2023-04-29T19:40:45.533Z] Starting to ramp up 12 servers with a max of 408 threads each\\n[2023-04-29T19:40:45.533Z] ==============================\\n[2023-04-29T19:40:45.533Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:40:45.533Z] Server pserv-13 has capacity for all threads. Starting 408.ThreadsLeft: 0\\n[2023-04-29T19:40:45.533Z] Starting threads for n00dles\\n[2023-04-29T19:40:45.533Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 371\\n[2023-04-29T19:40:45.533Z] Server pserv-14 has capacity for all threads. Starting 371.ThreadsLeft: 0\\n[2023-04-29T19:40:45.533Z] Starting threads for foodnstuff\\n[2023-04-29T19:40:45.533Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 334\\n[2023-04-29T19:40:45.533Z] Server pserv-15 has capacity for all threads. Starting 334.ThreadsLeft: 0\\n[2023-04-29T19:40:45.533Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:40:45.533Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 297\\n[2023-04-29T19:40:45.533Z] Server pserv-16 has capacity for all threads. Starting 297.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for joesguns\\n[2023-04-29T19:40:45.534Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 260\\n[2023-04-29T19:40:45.534Z] Server pserv-17 has capacity for all threads. Starting 260.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:40:45.534Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 223\\n[2023-04-29T19:40:45.534Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for nectar-net\\n[2023-04-29T19:40:45.534Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 186\\n[2023-04-29T19:40:45.534Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for neo-net\\n[2023-04-29T19:40:45.534Z] Server pserv-19 does not have capacity for all threads. Starting 259.Threads left: 149\\n[2023-04-29T19:40:45.534Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for phantasy\\n[2023-04-29T19:40:45.534Z] Server pserv-20 does not have capacity for all threads. Starting 296.Threads left: 112\\n[2023-04-29T19:40:45.534Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for max-hardware\\n[2023-04-29T19:40:45.534Z] Server pserv-21 does not have capacity for all threads. Starting 333.Threads left: 75\\n[2023-04-29T19:40:45.534Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for zer0\\n[2023-04-29T19:40:45.534Z] Server pserv-22 does not have capacity for all threads. Starting 370.Threads left: 38\\n[2023-04-29T19:40:45.534Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for iron-gym\\n[2023-04-29T19:40:45.534Z] Server pserv-23 does not have capacity for all threads. Starting 407.Threads left: 1\\n[2023-04-29T19:50:45.541Z] ==============================\\n[2023-04-29T19:50:45.541Z] Starting to ramp up 15 servers with a max of 326 threads each\\n[2023-04-29T19:50:45.541Z] ==============================\\n[2023-04-29T19:50:45.541Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:50:45.541Z] Server pserv-13 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for n00dles\\n[2023-04-29T19:50:45.541Z] Server pserv-13 does not have capacity for all threads. Starting 119.Threads left: 207\\n[2023-04-29T19:50:45.541Z] Server pserv-14 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for foodnstuff\\n[2023-04-29T19:50:45.541Z] Server pserv-14 does not have capacity for all threads. Starting 238.Threads left: 88\\n[2023-04-29T19:50:45.541Z] Server pserv-15 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:50:45.541Z] Server pserv-15 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for joesguns\\n[2023-04-29T19:50:45.541Z] Server pserv-15 does not have capacity for all threads. Starting 31.Threads left: 295\\n[2023-04-29T19:50:45.541Z] Server pserv-16 has capacity for all threads. Starting 295.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:50:45.541Z] Server pserv-16 does not have capacity for all threads. Starting 150.Threads left: 176\\n[2023-04-29T19:50:45.541Z] Server pserv-17 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for nectar-net\\n[2023-04-29T19:50:45.541Z] Server pserv-17 does not have capacity for all threads. Starting 269.Threads left: 57\\n[2023-04-29T19:50:45.541Z] Server pserv-18 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for neo-net\\n[2023-04-29T19:50:45.541Z] Server pserv-18 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for phantasy\\n[2023-04-29T19:50:45.541Z] Server pserv-18 does not have capacity for all threads. Starting 62.Threads left: 264\\n[2023-04-29T19:50:45.541Z] Server pserv-19 has capacity for all threads. Starting 264.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for max-hardware\\n[2023-04-29T19:50:45.541Z] Server pserv-19 does not have capacity for all threads. Starting 181.Threads left: 145\\n[2023-04-29T19:50:45.541Z] Server pserv-20 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for zer0\\n[2023-04-29T19:50:45.541Z] Server pserv-20 does not have capacity for all threads. Starting 300.Threads left: 26\\n[2023-04-29T19:50:45.541Z] Server pserv-21 has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for iron-gym\\n[2023-04-29T19:50:45.542Z] Server pserv-21 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.542Z] Starting threads for silver-helix\\n[2023-04-29T19:50:45.542Z] Server pserv-21 does not have capacity for all threads. Starting 93.Threads left: 233\\n[2023-04-29T19:50:45.542Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T19:50:45.542Z] Starting threads for omega-net\\n[2023-04-29T19:50:45.542Z] Server pserv-22 does not have capacity for all threads. Starting 212.Threads left: 114\\n[2023-04-29T19:50:45.542Z] Server pserv-23 has capacity for all threads. Starting 114.ThreadsLeft: 0\\n[2023-04-29T19:50:45.542Z] Starting threads for the-hub\\n[2023-04-29T19:50:45.542Z] Server pserv-23 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] ==============================\\n[2023-04-29T20:00:45.548Z] Starting to ramp up 15 servers with a max of 326 threads each\\n[2023-04-29T20:00:45.548Z] ==============================\\n[2023-04-29T20:00:45.548Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:00:45.548Z] Server pserv-13 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for n00dles\\n[2023-04-29T20:00:45.548Z] Server pserv-13 does not have capacity for all threads. Starting 119.Threads left: 207\\n[2023-04-29T20:00:45.548Z] Server pserv-14 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for foodnstuff\\n[2023-04-29T20:00:45.548Z] Server pserv-14 does not have capacity for all threads. Starting 238.Threads left: 88\\n[2023-04-29T20:00:45.548Z] Server pserv-15 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:00:45.548Z] Server pserv-15 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for joesguns\\n[2023-04-29T20:00:45.548Z] Server pserv-15 does not have capacity for all threads. Starting 31.Threads left: 295\\n[2023-04-29T20:00:45.548Z] Server pserv-16 has capacity for all threads. Starting 295.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:00:45.548Z] Server pserv-16 does not have capacity for all threads. Starting 150.Threads left: 176\\n[2023-04-29T20:00:45.548Z] Server pserv-17 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for nectar-net\\n[2023-04-29T20:00:45.548Z] Server pserv-17 does not have capacity for all threads. Starting 269.Threads left: 57\\n[2023-04-29T20:00:45.548Z] Server pserv-18 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for neo-net\\n[2023-04-29T20:00:45.548Z] Server pserv-18 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for phantasy\\n[2023-04-29T20:00:45.548Z] Server pserv-18 does not have capacity for all threads. Starting 62.Threads left: 264\\n[2023-04-29T20:00:45.548Z] Server pserv-19 has capacity for all threads. Starting 264.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for max-hardware\\n[2023-04-29T20:00:45.548Z] Server pserv-19 does not have capacity for all threads. Starting 181.Threads left: 145\\n[2023-04-29T20:00:45.548Z] Server pserv-20 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for zer0\\n[2023-04-29T20:00:45.548Z] Server pserv-20 does not have capacity for all threads. Starting 300.Threads left: 26\\n[2023-04-29T20:00:45.549Z] Server pserv-21 has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for iron-gym\\n[2023-04-29T20:00:45.549Z] Server pserv-21 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for silver-helix\\n[2023-04-29T20:00:45.549Z] Server pserv-21 does not have capacity for all threads. Starting 93.Threads left: 233\\n[2023-04-29T20:00:45.549Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for omega-net\\n[2023-04-29T20:00:45.549Z] Server pserv-22 does not have capacity for all threads. Starting 212.Threads left: 114\\n[2023-04-29T20:00:45.549Z] Server pserv-23 has capacity for all threads. Starting 114.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for the-hub\\n[2023-04-29T20:00:45.549Z] Server pserv-23 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] ==============================\\n[2023-04-29T20:10:45.549Z] Starting to ramp up 16 servers with a max of 306 threads each\\n[2023-04-29T20:10:45.549Z] ==============================\\n[2023-04-29T20:10:45.549Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:10:45.549Z] Server pserv-13 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for n00dles\\n[2023-04-29T20:10:45.549Z] Server pserv-13 does not have capacity for all threads. Starting 139.Threads left: 167\\n[2023-04-29T20:10:45.549Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for foodnstuff\\n[2023-04-29T20:10:45.549Z] Server pserv-14 does not have capacity for all threads. Starting 278.Threads left: 28\\n[2023-04-29T20:10:45.549Z] Server pserv-15 has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:10:45.549Z] Server pserv-15 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for joesguns\\n[2023-04-29T20:10:45.549Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 195\\n[2023-04-29T20:10:45.549Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:10:45.549Z] Server pserv-16 does not have capacity for all threads. Starting 250.Threads left: 56\\n[2023-04-29T20:10:45.549Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for nectar-net\\n[2023-04-29T20:10:45.549Z] Server pserv-17 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for neo-net\\n[2023-04-29T20:10:45.549Z] Server pserv-17 does not have capacity for all threads. Starting 83.Threads left: 223\\n[2023-04-29T20:10:45.549Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for phantasy\\n[2023-04-29T20:10:45.549Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T20:10:45.550Z] Server pserv-19 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for max-hardware\\n[2023-04-29T20:10:45.550Z] Server pserv-19 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for zer0\\n[2023-04-29T20:10:45.550Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 251\\n[2023-04-29T20:10:45.550Z] Server pserv-20 has capacity for all threads. Starting 251.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for iron-gym\\n[2023-04-29T20:10:45.550Z] Server pserv-20 does not have capacity for all threads. Starting 194.Threads left: 112\\n[2023-04-29T20:10:45.550Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for silver-helix\\n[2023-04-29T20:10:45.550Z] Server pserv-21 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for omega-net\\n[2023-04-29T20:10:45.550Z] Server pserv-21 does not have capacity for all threads. Starting 27.Threads left: 279\\n[2023-04-29T20:10:45.550Z] Server pserv-22 has capacity for all threads. Starting 279.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for the-hub\\n[2023-04-29T20:10:45.550Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 140\\n[2023-04-29T20:10:45.550Z] Server pserv-23 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for crush-fitness\\n[2023-04-29T20:10:45.550Z] Server pserv-23 does not have capacity for all threads. Starting 305.Threads left: 1\\n[2023-04-29T20:20:45.556Z] ==============================\\n[2023-04-29T20:20:45.556Z] Starting to ramp up 17 servers with a max of 288 threads each\\n[2023-04-29T20:20:45.556Z] ==============================\\n[2023-04-29T20:20:45.557Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:20:45.557Z] Server pserv-13 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for n00dles\\n[2023-04-29T20:20:45.557Z] Server pserv-13 does not have capacity for all threads. Starting 157.Threads left: 131\\n[2023-04-29T20:20:45.557Z] Server pserv-14 has capacity for all threads. Starting 131.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for foodnstuff\\n[2023-04-29T20:20:45.557Z] Server pserv-14 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:20:45.557Z] Server pserv-14 does not have capacity for all threads. Starting 26.Threads left: 262\\n[2023-04-29T20:20:45.557Z] Server pserv-15 has capacity for all threads. Starting 262.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for joesguns\\n[2023-04-29T20:20:45.557Z] Server pserv-15 does not have capacity for all threads. Starting 183.Threads left: 105\\n[2023-04-29T20:20:45.557Z] Server pserv-16 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:20:45.557Z] Server pserv-16 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for nectar-net\\n[2023-04-29T20:20:45.557Z] Server pserv-16 does not have capacity for all threads. Starting 52.Threads left: 236\\n[2023-04-29T20:20:45.557Z] Server pserv-17 has capacity for all threads. Starting 236.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for neo-net\\n[2023-04-29T20:20:45.557Z] Server pserv-17 does not have capacity for all threads. Starting 209.Threads left: 79\\n[2023-04-29T20:20:45.557Z] Server pserv-18 has capacity for all threads. Starting 79.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for phantasy\\n[2023-04-29T20:20:45.557Z] Server pserv-18 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for max-hardware\\n[2023-04-29T20:20:45.557Z] Server pserv-18 does not have capacity for all threads. Starting 78.Threads left: 210\\n[2023-04-29T20:20:45.557Z] Server pserv-19 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for zer0\\n[2023-04-29T20:20:45.557Z] Server pserv-19 does not have capacity for all threads. Starting 235.Threads left: 53\\n[2023-04-29T20:20:45.557Z] Server pserv-20 has capacity for all threads. Starting 53.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for iron-gym\\n[2023-04-29T20:20:45.557Z] Server pserv-20 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for silver-helix\\n[2023-04-29T20:20:45.557Z] Server pserv-20 does not have capacity for all threads. Starting 104.Threads left: 184\\n[2023-04-29T20:20:45.557Z] Server pserv-21 has capacity for all threads. Starting 184.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for omega-net\\n[2023-04-29T20:20:45.557Z] Server pserv-21 does not have capacity for all threads. Starting 261.Threads left: 27\\n[2023-04-29T20:20:45.557Z] Server pserv-22 has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for the-hub\\n[2023-04-29T20:20:45.557Z] Server pserv-22 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for crush-fitness\\n[2023-04-29T20:20:45.557Z] Server pserv-22 does not have capacity for all threads. Starting 130.Threads left: 158\\n[2023-04-29T20:20:45.557Z] Server pserv-23 has capacity for all threads. Starting 158.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for johnson-ortho\\n[2023-04-29T20:20:45.557Z] Server pserv-23 does not have capacity for all threads. Starting 287.Threads left: 1\\n[2023-04-29T20:30:45.564Z] ==============================\\n[2023-04-29T20:30:45.564Z] Starting to ramp up 17 servers with a max of 288 threads each\\n[2023-04-29T20:30:45.564Z] ==============================\\n[2023-04-29T20:30:45.564Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:30:45.564Z] Server pserv-13 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for n00dles\\n[2023-04-29T20:30:45.564Z] Server pserv-13 does not have capacity for all threads. Starting 157.Threads left: 131\\n[2023-04-29T20:30:45.564Z] Server pserv-14 has capacity for all threads. Starting 131.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for foodnstuff\\n[2023-04-29T20:30:45.564Z] Server pserv-14 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:30:45.564Z] Server pserv-14 does not have capacity for all threads. Starting 26.Threads left: 262\\n[2023-04-29T20:30:45.564Z] Server pserv-15 has capacity for all threads. Starting 262.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for joesguns\\n[2023-04-29T20:30:45.564Z] Server pserv-15 does not have capacity for all threads. Starting 183.Threads left: 105\\n[2023-04-29T20:30:45.564Z] Server pserv-16 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:30:45.565Z] Server pserv-16 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for nectar-net\\n[2023-04-29T20:30:45.565Z] Server pserv-16 does not have capacity for all threads. Starting 52.Threads left: 236\\n[2023-04-29T20:30:45.565Z] Server pserv-17 has capacity for all threads. Starting 236.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for neo-net\\n[2023-04-29T20:30:45.565Z] Server pserv-17 does not have capacity for all threads. Starting 209.Threads left: 79\\n[2023-04-29T20:30:45.565Z] Server pserv-18 has capacity for all threads. Starting 79.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for phantasy\\n[2023-04-29T20:30:45.565Z] Server pserv-18 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for max-hardware\\n[2023-04-29T20:30:45.565Z] Server pserv-18 does not have capacity for all threads. Starting 78.Threads left: 210\\n[2023-04-29T20:30:45.565Z] Server pserv-19 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for zer0\\n[2023-04-29T20:30:45.565Z] Server pserv-19 does not have capacity for all threads. Starting 235.Threads left: 53\\n[2023-04-29T20:30:45.565Z] Server pserv-20 has capacity for all threads. Starting 53.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for iron-gym\\n[2023-04-29T20:30:45.565Z] Server pserv-20 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for silver-helix\\n[2023-04-29T20:30:45.565Z] Server pserv-20 does not have capacity for all threads. Starting 104.Threads left: 184\\n[2023-04-29T20:30:45.565Z] Server pserv-21 has capacity for all threads. Starting 184.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for omega-net\\n[2023-04-29T20:30:45.565Z] Server pserv-21 does not have capacity for all threads. Starting 261.Threads left: 27\\n[2023-04-29T20:30:45.565Z] Server pserv-22 has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for the-hub\\n[2023-04-29T20:30:45.565Z] Server pserv-22 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for crush-fitness\\n[2023-04-29T20:30:45.565Z] Server pserv-22 does not have capacity for all threads. Starting 130.Threads left: 158\\n[2023-04-29T20:30:45.565Z] Server pserv-23 has capacity for all threads. Starting 158.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for johnson-ortho\\n[2023-04-29T20:30:45.565Z] Server pserv-23 does not have capacity for all threads. Starting 287.Threads left: 1\\n[2023-04-29T20:40:45.566Z] ==============================\\n[2023-04-29T20:40:45.566Z] Starting to ramp up 17 servers with a max of 288 threads each\\n[2023-04-29T20:40:45.566Z] ==============================\\n[2023-04-29T20:40:45.566Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:40:45.566Z] Server pserv-13 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.566Z] Starting threads for n00dles\\n[2023-04-29T20:40:45.566Z] Server pserv-13 does not have capacity for all threads. Starting 157.Threads left: 131\\n[2023-04-29T20:40:45.566Z] Server pserv-14 has capacity for all threads. Starting 131.ThreadsLeft: 0\\n[2023-04-29T20:40:45.566Z] Starting threads for foodnstuff\\n[2023-04-29T20:40:45.566Z] Server pserv-14 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:40:45.567Z] Server pserv-14 does not have capacity for all threads. Starting 26.Threads left: 262\\n[2023-04-29T20:40:45.567Z] Server pserv-15 has capacity for all threads. Starting 262.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for joesguns\\n[2023-04-29T20:40:45.567Z] Server pserv-15 does not have capacity for all threads. Starting 183.Threads left: 105\\n[2023-04-29T20:40:45.567Z] Server pserv-16 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:40:45.567Z] Server pserv-16 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for nectar-net\\n[2023-04-29T20:40:45.567Z] Server pserv-16 does not have capacity for all threads. Starting 52.Threads left: 236\\n[2023-04-29T20:40:45.567Z] Server pserv-17 has capacity for all threads. Starting 236.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for neo-net\\n[2023-04-29T20:40:45.567Z] Server pserv-17 does not have capacity for all threads. Starting 209.Threads left: 79\\n[2023-04-29T20:40:45.567Z] Server pserv-18 has capacity for all threads. Starting 79.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for phantasy\\n[2023-04-29T20:40:45.567Z] Server pserv-18 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for max-hardware\\n[2023-04-29T20:40:45.567Z] Server pserv-18 does not have capacity for all threads. Starting 78.Threads left: 210\\n[2023-04-29T20:40:45.567Z] Server pserv-19 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for zer0\\n[2023-04-29T20:40:45.567Z] Server pserv-19 does not have capacity for all threads. Starting 235.Threads left: 53\\n[2023-04-29T20:40:45.567Z] Server pserv-20 has capacity for all threads. Starting 53.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for iron-gym\\n[2023-04-29T20:40:45.567Z] Server pserv-20 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for silver-helix\\n[2023-04-29T20:40:45.567Z] Server pserv-20 does not have capacity for all threads. Starting 104.Threads left: 184\\n[2023-04-29T20:40:45.567Z] Server pserv-21 has capacity for all threads. Starting 184.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for omega-net\\n[2023-04-29T20:40:45.567Z] Server pserv-21 does not have capacity for all threads. Starting 261.Threads left: 27\\n[2023-04-29T20:40:45.567Z] Server pserv-22 has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for the-hub\\n[2023-04-29T20:40:45.567Z] Server pserv-22 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for crush-fitness\\n[2023-04-29T20:40:45.567Z] Server pserv-22 does not have capacity for all threads. Starting 130.Threads left: 158\\n[2023-04-29T20:40:45.567Z] Server pserv-23 has capacity for all threads. Starting 158.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for johnson-ortho\\n[2023-04-29T20:40:45.567Z] Server pserv-23 does not have capacity for all threads. Starting 287.Threads left: 1\\n[2023-04-29T20:50:45.574Z] ==============================\\n[2023-04-29T20:50:45.574Z] Starting to ramp up 18 servers with a max of 272 threads each\\n[2023-04-29T20:50:45.574Z] ==============================\\n[2023-04-29T20:50:45.574Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:50:45.574Z] Server pserv-13 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.574Z] Starting threads for n00dles\\n[2023-04-29T20:50:45.574Z] Server pserv-13 does not have capacity for all threads. Starting 173.Threads left: 99\\n[2023-04-29T20:50:45.574Z] Server pserv-14 has capacity for all threads. Starting 99.ThreadsLeft: 0\\n[2023-04-29T20:50:45.574Z] Starting threads for foodnstuff\\n[2023-04-29T20:50:45.574Z] Server pserv-14 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:50:45.575Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 198\\n[2023-04-29T20:50:45.575Z] Server pserv-15 has capacity for all threads. Starting 198.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for joesguns\\n[2023-04-29T20:50:45.575Z] Server pserv-15 does not have capacity for all threads. Starting 247.Threads left: 25\\n[2023-04-29T20:50:45.575Z] Server pserv-16 has capacity for all threads. Starting 25.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:50:45.575Z] Server pserv-16 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for nectar-net\\n[2023-04-29T20:50:45.575Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 124\\n[2023-04-29T20:50:45.575Z] Server pserv-17 has capacity for all threads. Starting 124.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for neo-net\\n[2023-04-29T20:50:45.575Z] Server pserv-17 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for phantasy\\n[2023-04-29T20:50:45.575Z] Server pserv-17 does not have capacity for all threads. Starting 49.Threads left: 223\\n[2023-04-29T20:50:45.575Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for max-hardware\\n[2023-04-29T20:50:45.575Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 50\\n[2023-04-29T20:50:45.575Z] Server pserv-19 has capacity for all threads. Starting 50.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for zer0\\n[2023-04-29T20:50:45.575Z] Server pserv-19 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for iron-gym\\n[2023-04-29T20:50:45.575Z] Server pserv-19 does not have capacity for all threads. Starting 123.Threads left: 149\\n[2023-04-29T20:50:45.575Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for silver-helix\\n[2023-04-29T20:50:45.575Z] Server pserv-20 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for omega-net\\n[2023-04-29T20:50:45.575Z] Server pserv-20 does not have capacity for all threads. Starting 24.Threads left: 248\\n[2023-04-29T20:50:45.575Z] Server pserv-21 has capacity for all threads. Starting 248.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for the-hub\\n[2023-04-29T20:50:45.575Z] Server pserv-21 does not have capacity for all threads. Starting 197.Threads left: 75\\n[2023-04-29T20:50:45.575Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for crush-fitness\\n[2023-04-29T20:50:45.575Z] Server pserv-22 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for johnson-ortho\\n[2023-04-29T20:50:45.575Z] Server pserv-22 does not have capacity for all threads. Starting 98.Threads left: 174\\n[2023-04-29T20:50:45.575Z] Server pserv-23 has capacity for all threads. Starting 174.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for rothman-uni\\n[2023-04-29T20:50:45.575Z] Server pserv-23 does not have capacity for all threads. Starting 271.Threads left: 1\\n[2023-04-29T21:00:45.581Z] ==============================\\n[2023-04-29T21:00:45.581Z] Starting to ramp up 18 servers with a max of 272 threads each\\n[2023-04-29T21:00:45.581Z] ==============================\\n[2023-04-29T21:00:45.581Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:00:45.581Z] Server pserv-13 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for n00dles\\n[2023-04-29T21:00:45.581Z] Server pserv-13 does not have capacity for all threads. Starting 173.Threads left: 99\\n[2023-04-29T21:00:45.581Z] Server pserv-14 has capacity for all threads. Starting 99.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for foodnstuff\\n[2023-04-29T21:00:45.581Z] Server pserv-14 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:00:45.581Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 198\\n[2023-04-29T21:00:45.581Z] Server pserv-15 has capacity for all threads. Starting 198.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for joesguns\\n[2023-04-29T21:00:45.581Z] Server pserv-15 does not have capacity for all threads. Starting 247.Threads left: 25\\n[2023-04-29T21:00:45.581Z] Server pserv-16 has capacity for all threads. Starting 25.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:00:45.581Z] Server pserv-16 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for nectar-net\\n[2023-04-29T21:00:45.581Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 124\\n[2023-04-29T21:00:45.581Z] Server pserv-17 has capacity for all threads. Starting 124.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for neo-net\\n[2023-04-29T21:00:45.581Z] Server pserv-17 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for phantasy\\n[2023-04-29T21:00:45.581Z] Server pserv-17 does not have capacity for all threads. Starting 49.Threads left: 223\\n[2023-04-29T21:00:45.581Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for max-hardware\\n[2023-04-29T21:00:45.581Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 50\\n[2023-04-29T21:00:45.581Z] Server pserv-19 has capacity for all threads. Starting 50.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for zer0\\n[2023-04-29T21:00:45.581Z] Server pserv-19 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for iron-gym\\n[2023-04-29T21:00:45.581Z] Server pserv-19 does not have capacity for all threads. Starting 123.Threads left: 149\\n[2023-04-29T21:00:45.581Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for silver-helix\\n[2023-04-29T21:00:45.581Z] Server pserv-20 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for omega-net\\n[2023-04-29T21:00:45.581Z] Server pserv-20 does not have capacity for all threads. Starting 24.Threads left: 248\\n[2023-04-29T21:00:45.581Z] Server pserv-21 has capacity for all threads. Starting 248.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for the-hub\\n[2023-04-29T21:00:45.581Z] Server pserv-21 does not have capacity for all threads. Starting 197.Threads left: 75\\n[2023-04-29T21:00:45.581Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for crush-fitness\\n[2023-04-29T21:00:45.581Z] Server pserv-22 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for johnson-ortho\\n[2023-04-29T21:00:45.582Z] Server pserv-22 does not have capacity for all threads. Starting 98.Threads left: 174\\n[2023-04-29T21:00:45.582Z] Server pserv-23 has capacity for all threads. Starting 174.ThreadsLeft: 0\\n[2023-04-29T21:00:45.582Z] Starting threads for rothman-uni\\n[2023-04-29T21:00:45.582Z] Server pserv-23 does not have capacity for all threads. Starting 271.Threads left: 1\\n[2023-04-29T21:10:45.583Z] ==============================\\n[2023-04-29T21:10:45.583Z] Starting to ramp up 19 servers with a max of 257 threads each\\n[2023-04-29T21:10:45.583Z] ==============================\\n[2023-04-29T21:10:45.583Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:10:45.583Z] Server pserv-13 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.583Z] Starting threads for n00dles\\n[2023-04-29T21:10:45.583Z] Server pserv-13 does not have capacity for all threads. Starting 188.Threads left: 69\\n[2023-04-29T21:10:45.583Z] Server pserv-14 has capacity for all threads. Starting 69.ThreadsLeft: 0\\n[2023-04-29T21:10:45.583Z] Starting threads for foodnstuff\\n[2023-04-29T21:10:45.583Z] Server pserv-14 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.583Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:10:45.583Z] Server pserv-14 does not have capacity for all threads. Starting 119.Threads left: 138\\n[2023-04-29T21:10:45.583Z] Server pserv-15 has capacity for all threads. Starting 138.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for joesguns\\n[2023-04-29T21:10:45.584Z] Server pserv-15 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:10:45.584Z] Server pserv-15 does not have capacity for all threads. Starting 50.Threads left: 207\\n[2023-04-29T21:10:45.584Z] Server pserv-16 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for nectar-net\\n[2023-04-29T21:10:45.584Z] Server pserv-16 does not have capacity for all threads. Starting 238.Threads left: 19\\n[2023-04-29T21:10:45.584Z] Server pserv-17 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for neo-net\\n[2023-04-29T21:10:45.584Z] Server pserv-17 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for phantasy\\n[2023-04-29T21:10:45.584Z] Server pserv-17 does not have capacity for all threads. Starting 169.Threads left: 88\\n[2023-04-29T21:10:45.584Z] Server pserv-18 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for max-hardware\\n[2023-04-29T21:10:45.584Z] Server pserv-18 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for zer0\\n[2023-04-29T21:10:45.584Z] Server pserv-18 does not have capacity for all threads. Starting 100.Threads left: 157\\n[2023-04-29T21:10:45.584Z] Server pserv-19 has capacity for all threads. Starting 157.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for iron-gym\\n[2023-04-29T21:10:45.584Z] Server pserv-19 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for silver-helix\\n[2023-04-29T21:10:45.584Z] Server pserv-19 does not have capacity for all threads. Starting 31.Threads left: 226\\n[2023-04-29T21:10:45.584Z] Server pserv-20 has capacity for all threads. Starting 226.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for omega-net\\n[2023-04-29T21:10:45.584Z] Server pserv-20 does not have capacity for all threads. Starting 219.Threads left: 38\\n[2023-04-29T21:10:45.584Z] Server pserv-21 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for the-hub\\n[2023-04-29T21:10:45.584Z] Server pserv-21 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for crush-fitness\\n[2023-04-29T21:10:45.584Z] Server pserv-21 does not have capacity for all threads. Starting 150.Threads left: 107\\n[2023-04-29T21:10:45.584Z] Server pserv-22 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for johnson-ortho\\n[2023-04-29T21:10:45.584Z] Server pserv-22 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for rothman-uni\\n[2023-04-29T21:10:45.584Z] Server pserv-22 does not have capacity for all threads. Starting 81.Threads left: 176\\n[2023-04-29T21:10:45.584Z] Server pserv-23 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for computek\\n[2023-04-29T21:10:45.584Z] Server pserv-23 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] ==============================\\n[2023-04-29T21:20:45.592Z] Starting to ramp up 19 servers with a max of 257 threads each\\n[2023-04-29T21:20:45.592Z] ==============================\\n[2023-04-29T21:20:45.592Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:20:45.592Z] Server pserv-13 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for n00dles\\n[2023-04-29T21:20:45.592Z] Server pserv-13 does not have capacity for all threads. Starting 188.Threads left: 69\\n[2023-04-29T21:20:45.592Z] Server pserv-14 has capacity for all threads. Starting 69.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for foodnstuff\\n[2023-04-29T21:20:45.592Z] Server pserv-14 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:20:45.592Z] Server pserv-14 does not have capacity for all threads. Starting 119.Threads left: 138\\n[2023-04-29T21:20:45.592Z] Server pserv-15 has capacity for all threads. Starting 138.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for joesguns\\n[2023-04-29T21:20:45.592Z] Server pserv-15 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:20:45.592Z] Server pserv-15 does not have capacity for all threads. Starting 50.Threads left: 207\\n[2023-04-29T21:20:45.592Z] Server pserv-16 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for nectar-net\\n[2023-04-29T21:20:45.592Z] Server pserv-16 does not have capacity for all threads. Starting 238.Threads left: 19\\n[2023-04-29T21:20:45.592Z] Server pserv-17 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for neo-net\\n[2023-04-29T21:20:45.592Z] Server pserv-17 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for phantasy\\n[2023-04-29T21:20:45.592Z] Server pserv-17 does not have capacity for all threads. Starting 169.Threads left: 88\\n[2023-04-29T21:20:45.592Z] Server pserv-18 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for max-hardware\\n[2023-04-29T21:20:45.592Z] Server pserv-18 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for zer0\\n[2023-04-29T21:20:45.592Z] Server pserv-18 does not have capacity for all threads. Starting 100.Threads left: 157\\n[2023-04-29T21:20:45.592Z] Server pserv-19 has capacity for all threads. Starting 157.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for iron-gym\\n[2023-04-29T21:20:45.592Z] Server pserv-19 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for silver-helix\\n[2023-04-29T21:20:45.592Z] Server pserv-19 does not have capacity for all threads. Starting 31.Threads left: 226\\n[2023-04-29T21:20:45.592Z] Server pserv-20 has capacity for all threads. Starting 226.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for omega-net\\n[2023-04-29T21:20:45.592Z] Server pserv-20 does not have capacity for all threads. Starting 219.Threads left: 38\\n[2023-04-29T21:20:45.592Z] Server pserv-21 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for the-hub\\n[2023-04-29T21:20:45.592Z] Server pserv-21 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for crush-fitness\\n[2023-04-29T21:20:45.592Z] Server pserv-21 does not have capacity for all threads. Starting 150.Threads left: 107\\n[2023-04-29T21:20:45.592Z] Server pserv-22 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for johnson-ortho\\n[2023-04-29T21:20:45.592Z] Server pserv-22 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for rothman-uni\\n[2023-04-29T21:20:45.593Z] Server pserv-22 does not have capacity for all threads. Starting 81.Threads left: 176\\n[2023-04-29T21:20:45.593Z] Server pserv-23 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T21:20:45.593Z] Starting threads for computek\\n[2023-04-29T21:20:45.593Z] Server pserv-23 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.600Z] ==============================\\n[2023-04-29T21:30:45.600Z] Starting to ramp up 19 servers with a max of 257 threads each\\n[2023-04-29T21:30:45.600Z] ==============================\\n[2023-04-29T21:30:45.600Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:30:45.600Z] Server pserv-13 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for n00dles\\n[2023-04-29T21:30:45.601Z] Server pserv-13 does not have capacity for all threads. Starting 188.Threads left: 69\\n[2023-04-29T21:30:45.601Z] Server pserv-14 has capacity for all threads. Starting 69.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for foodnstuff\\n[2023-04-29T21:30:45.601Z] Server pserv-14 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:30:45.601Z] Server pserv-14 does not have capacity for all threads. Starting 119.Threads left: 138\\n[2023-04-29T21:30:45.601Z] Server pserv-15 has capacity for all threads. Starting 138.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for joesguns\\n[2023-04-29T21:30:45.601Z] Server pserv-15 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:30:45.601Z] Server pserv-15 does not have capacity for all threads. Starting 50.Threads left: 207\\n[2023-04-29T21:30:45.601Z] Server pserv-16 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for nectar-net\\n[2023-04-29T21:30:45.601Z] Server pserv-16 does not have capacity for all threads. Starting 238.Threads left: 19\\n[2023-04-29T21:30:45.601Z] Server pserv-17 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for neo-net\\n[2023-04-29T21:30:45.601Z] Server pserv-17 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for phantasy\\n[2023-04-29T21:30:45.601Z] Server pserv-17 does not have capacity for all threads. Starting 169.Threads left: 88\\n[2023-04-29T21:30:45.601Z] Server pserv-18 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for max-hardware\\n[2023-04-29T21:30:45.601Z] Server pserv-18 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for zer0\\n[2023-04-29T21:30:45.601Z] Server pserv-18 does not have capacity for all threads. Starting 100.Threads left: 157\\n[2023-04-29T21:30:45.601Z] Server pserv-19 has capacity for all threads. Starting 157.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for iron-gym\\n[2023-04-29T21:30:45.601Z] Server pserv-19 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for silver-helix\\n[2023-04-29T21:30:45.601Z] Server pserv-19 does not have capacity for all threads. Starting 31.Threads left: 226\\n[2023-04-29T21:30:45.601Z] Server pserv-20 has capacity for all threads. Starting 226.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for omega-net\\n[2023-04-29T21:30:45.601Z] Server pserv-20 does not have capacity for all threads. Starting 219.Threads left: 38\\n[2023-04-29T21:30:45.601Z] Server pserv-21 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for the-hub\\n[2023-04-29T21:30:45.601Z] Server pserv-21 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for crush-fitness\\n[2023-04-29T21:30:45.601Z] Server pserv-21 does not have capacity for all threads. Starting 150.Threads left: 107\\n[2023-04-29T21:30:45.601Z] Server pserv-22 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for johnson-ortho\\n[2023-04-29T21:30:45.601Z] Server pserv-22 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for rothman-uni\\n[2023-04-29T21:30:45.601Z] Server pserv-22 does not have capacity for all threads. Starting 81.Threads left: 176\\n[2023-04-29T21:30:45.601Z] Server pserv-23 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T21:30:45.602Z] Starting threads for computek\\n[2023-04-29T21:30:45.602Z] Server pserv-23 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:40:45.603Z] ==============================\\n[2023-04-29T21:40:45.604Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T21:40:45.604Z] ==============================\\n[2023-04-29T21:40:45.604Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:40:45.604Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for n00dles\\n[2023-04-29T21:40:45.604Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T21:40:45.604Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for foodnstuff\\n[2023-04-29T21:40:45.604Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:40:45.604Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T21:40:45.604Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for joesguns\\n[2023-04-29T21:40:45.604Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:40:45.604Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T21:40:45.604Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for nectar-net\\n[2023-04-29T21:40:45.604Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for neo-net\\n[2023-04-29T21:40:45.604Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T21:40:45.604Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for phantasy\\n[2023-04-29T21:40:45.604Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for max-hardware\\n[2023-04-29T21:40:45.604Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T21:40:45.604Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for zer0\\n[2023-04-29T21:40:45.604Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T21:40:45.604Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for iron-gym\\n[2023-04-29T21:40:45.604Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for silver-helix\\n[2023-04-29T21:40:45.604Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T21:40:45.604Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for omega-net\\n[2023-04-29T21:40:45.604Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for the-hub\\n[2023-04-29T21:40:45.604Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T21:40:45.604Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for crush-fitness\\n[2023-04-29T21:40:45.604Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for johnson-ortho\\n[2023-04-29T21:40:45.604Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T21:40:45.604Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for rothman-uni\\n[2023-04-29T21:40:45.604Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for computek\\n[2023-04-29T21:40:45.604Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T21:40:45.604Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for rho-construction\\n[2023-04-29T21:40:45.604Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] ==============================\\n[2023-04-29T21:50:45.611Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T21:50:45.611Z] ==============================\\n[2023-04-29T21:50:45.611Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:50:45.611Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for n00dles\\n[2023-04-29T21:50:45.611Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T21:50:45.611Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for foodnstuff\\n[2023-04-29T21:50:45.611Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:50:45.611Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T21:50:45.611Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for joesguns\\n[2023-04-29T21:50:45.611Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:50:45.611Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T21:50:45.611Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for nectar-net\\n[2023-04-29T21:50:45.611Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for neo-net\\n[2023-04-29T21:50:45.611Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T21:50:45.612Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for phantasy\\n[2023-04-29T21:50:45.612Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for max-hardware\\n[2023-04-29T21:50:45.612Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T21:50:45.612Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for zer0\\n[2023-04-29T21:50:45.612Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T21:50:45.612Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for iron-gym\\n[2023-04-29T21:50:45.612Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for silver-helix\\n[2023-04-29T21:50:45.612Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T21:50:45.612Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for omega-net\\n[2023-04-29T21:50:45.612Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for the-hub\\n[2023-04-29T21:50:45.612Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T21:50:45.612Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for crush-fitness\\n[2023-04-29T21:50:45.612Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for johnson-ortho\\n[2023-04-29T21:50:45.612Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T21:50:45.612Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for rothman-uni\\n[2023-04-29T21:50:45.612Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for computek\\n[2023-04-29T21:50:45.612Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T21:50:45.612Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for rho-construction\\n[2023-04-29T21:50:45.612Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] ==============================\\n[2023-04-29T22:00:45.619Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T22:00:45.619Z] ==============================\\n[2023-04-29T22:00:45.619Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:00:45.619Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for n00dles\\n[2023-04-29T22:00:45.619Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T22:00:45.619Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for foodnstuff\\n[2023-04-29T22:00:45.619Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:00:45.619Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T22:00:45.619Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for joesguns\\n[2023-04-29T22:00:45.619Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:00:45.619Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T22:00:45.619Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for nectar-net\\n[2023-04-29T22:00:45.619Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for neo-net\\n[2023-04-29T22:00:45.619Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T22:00:45.619Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for phantasy\\n[2023-04-29T22:00:45.619Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for max-hardware\\n[2023-04-29T22:00:45.619Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T22:00:45.619Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for zer0\\n[2023-04-29T22:00:45.619Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T22:00:45.619Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for iron-gym\\n[2023-04-29T22:00:45.619Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for silver-helix\\n[2023-04-29T22:00:45.619Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T22:00:45.619Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for omega-net\\n[2023-04-29T22:00:45.619Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for the-hub\\n[2023-04-29T22:00:45.619Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T22:00:45.619Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for crush-fitness\\n[2023-04-29T22:00:45.619Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for johnson-ortho\\n[2023-04-29T22:00:45.619Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T22:00:45.619Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for rothman-uni\\n[2023-04-29T22:00:45.619Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for computek\\n[2023-04-29T22:00:45.619Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T22:00:45.619Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for rho-construction\\n[2023-04-29T22:00:45.619Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.630Z] ==============================\\n[2023-04-29T22:10:45.630Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T22:10:45.630Z] ==============================\\n[2023-04-29T22:10:45.630Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:10:45.630Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for n00dles\\n[2023-04-29T22:10:45.631Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T22:10:45.631Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for foodnstuff\\n[2023-04-29T22:10:45.631Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:10:45.631Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T22:10:45.631Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for joesguns\\n[2023-04-29T22:10:45.631Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:10:45.631Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T22:10:45.631Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for nectar-net\\n[2023-04-29T22:10:45.631Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for neo-net\\n[2023-04-29T22:10:45.631Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T22:10:45.631Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for phantasy\\n[2023-04-29T22:10:45.631Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for max-hardware\\n[2023-04-29T22:10:45.631Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T22:10:45.631Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for zer0\\n[2023-04-29T22:10:45.631Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T22:10:45.631Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for iron-gym\\n[2023-04-29T22:10:45.631Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for silver-helix\\n[2023-04-29T22:10:45.631Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T22:10:45.631Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for omega-net\\n[2023-04-29T22:10:45.631Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for the-hub\\n[2023-04-29T22:10:45.631Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T22:10:45.631Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for crush-fitness\\n[2023-04-29T22:10:45.631Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for johnson-ortho\\n[2023-04-29T22:10:45.631Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T22:10:45.631Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for rothman-uni\\n[2023-04-29T22:10:45.631Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for computek\\n[2023-04-29T22:10:45.631Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T22:10:45.631Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for rho-construction\\n[2023-04-29T22:10:45.631Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:20:45.637Z] ==============================\\n[2023-04-29T22:20:45.637Z] Starting to ramp up 21 servers with a max of 233 threads each\\n[2023-04-29T22:20:45.637Z] ==============================\\n[2023-04-29T22:20:45.637Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:20:45.637Z] Server pserv-13 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.637Z] Starting threads for n00dles\\n[2023-04-29T22:20:45.637Z] Server pserv-13 does not have capacity for all threads. Starting 212.Threads left: 21\\n[2023-04-29T22:20:45.637Z] Server pserv-14 has capacity for all threads. Starting 21.ThreadsLeft: 0\\n[2023-04-29T22:20:45.637Z] Starting threads for foodnstuff\\n[2023-04-29T22:20:45.637Z] Server pserv-14 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:20:45.638Z] Server pserv-14 does not have capacity for all threads. Starting 191.Threads left: 42\\n[2023-04-29T22:20:45.638Z] Server pserv-15 has capacity for all threads. Starting 42.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for joesguns\\n[2023-04-29T22:20:45.638Z] Server pserv-15 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:20:45.638Z] Server pserv-15 does not have capacity for all threads. Starting 170.Threads left: 63\\n[2023-04-29T22:20:45.638Z] Server pserv-16 has capacity for all threads. Starting 63.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for nectar-net\\n[2023-04-29T22:20:45.638Z] Server pserv-16 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for neo-net\\n[2023-04-29T22:20:45.638Z] Server pserv-16 does not have capacity for all threads. Starting 149.Threads left: 84\\n[2023-04-29T22:20:45.638Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for phantasy\\n[2023-04-29T22:20:45.638Z] Server pserv-17 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for max-hardware\\n[2023-04-29T22:20:45.638Z] Server pserv-17 does not have capacity for all threads. Starting 128.Threads left: 105\\n[2023-04-29T22:20:45.638Z] Server pserv-18 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for zer0\\n[2023-04-29T22:20:45.638Z] Server pserv-18 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for iron-gym\\n[2023-04-29T22:20:45.638Z] Server pserv-18 does not have capacity for all threads. Starting 107.Threads left: 126\\n[2023-04-29T22:20:45.638Z] Server pserv-19 has capacity for all threads. Starting 126.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for silver-helix\\n[2023-04-29T22:20:45.638Z] Server pserv-19 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for omega-net\\n[2023-04-29T22:20:45.638Z] Server pserv-19 does not have capacity for all threads. Starting 86.Threads left: 147\\n[2023-04-29T22:20:45.638Z] Server pserv-20 has capacity for all threads. Starting 147.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for the-hub\\n[2023-04-29T22:20:45.638Z] Server pserv-20 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for crush-fitness\\n[2023-04-29T22:20:45.638Z] Server pserv-20 does not have capacity for all threads. Starting 65.Threads left: 168\\n[2023-04-29T22:20:45.638Z] Server pserv-21 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for johnson-ortho\\n[2023-04-29T22:20:45.638Z] Server pserv-21 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for rothman-uni\\n[2023-04-29T22:20:45.638Z] Server pserv-21 does not have capacity for all threads. Starting 44.Threads left: 189\\n[2023-04-29T22:20:45.638Z] Server pserv-22 has capacity for all threads. Starting 189.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for computek\\n[2023-04-29T22:20:45.638Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for rho-construction\\n[2023-04-29T22:20:45.638Z] Server pserv-22 does not have capacity for all threads. Starting 23.Threads left: 210\\n[2023-04-29T22:20:45.638Z] Server pserv-23 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for alpha-ent\\n[2023-04-29T22:20:45.638Z] Server pserv-23 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.645Z] ==============================\\n[2023-04-29T22:30:45.645Z] Starting to ramp up 21 servers with a max of 233 threads each\\n[2023-04-29T22:30:45.645Z] ==============================\\n[2023-04-29T22:30:45.645Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:30:45.646Z] Server pserv-13 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for n00dles\\n[2023-04-29T22:30:45.646Z] Server pserv-13 does not have capacity for all threads. Starting 212.Threads left: 21\\n[2023-04-29T22:30:45.646Z] Server pserv-14 has capacity for all threads. Starting 21.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for foodnstuff\\n[2023-04-29T22:30:45.646Z] Server pserv-14 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:30:45.646Z] Server pserv-14 does not have capacity for all threads. Starting 191.Threads left: 42\\n[2023-04-29T22:30:45.646Z] Server pserv-15 has capacity for all threads. Starting 42.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for joesguns\\n[2023-04-29T22:30:45.646Z] Server pserv-15 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:30:45.646Z] Server pserv-15 does not have capacity for all threads. Starting 170.Threads left: 63\\n[2023-04-29T22:30:45.646Z] Server pserv-16 has capacity for all threads. Starting 63.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for nectar-net\\n[2023-04-29T22:30:45.646Z] Server pserv-16 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for neo-net\\n[2023-04-29T22:30:45.646Z] Server pserv-16 does not have capacity for all threads. Starting 149.Threads left: 84\\n[2023-04-29T22:30:45.646Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for phantasy\\n[2023-04-29T22:30:45.646Z] Server pserv-17 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for max-hardware\\n[2023-04-29T22:30:45.646Z] Server pserv-17 does not have capacity for all threads. Starting 128.Threads left: 105\\n[2023-04-29T22:30:45.646Z] Server pserv-18 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for zer0\\n[2023-04-29T22:30:45.646Z] Server pserv-18 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for iron-gym\\n[2023-04-29T22:30:45.646Z] Server pserv-18 does not have capacity for all threads. Starting 107.Threads left: 126\\n[2023-04-29T22:30:45.646Z] Server pserv-19 has capacity for all threads. Starting 126.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for silver-helix\\n[2023-04-29T22:30:45.646Z] Server pserv-19 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for omega-net\\n[2023-04-29T22:30:45.646Z] Server pserv-19 does not have capacity for all threads. Starting 86.Threads left: 147\\n[2023-04-29T22:30:45.646Z] Server pserv-20 has capacity for all threads. Starting 147.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for the-hub\\n[2023-04-29T22:30:45.646Z] Server pserv-20 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for crush-fitness\\n[2023-04-29T22:30:45.646Z] Server pserv-20 does not have capacity for all threads. Starting 65.Threads left: 168\\n[2023-04-29T22:30:45.646Z] Server pserv-21 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for johnson-ortho\\n[2023-04-29T22:30:45.646Z] Server pserv-21 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for rothman-uni\\n[2023-04-29T22:30:45.646Z] Server pserv-21 does not have capacity for all threads. Starting 44.Threads left: 189\\n[2023-04-29T22:30:45.646Z] Server pserv-22 has capacity for all threads. Starting 189.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for computek\\n[2023-04-29T22:30:45.646Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for rho-construction\\n[2023-04-29T22:30:45.646Z] Server pserv-22 does not have capacity for all threads. Starting 23.Threads left: 210\\n[2023-04-29T22:30:45.646Z] Server pserv-23 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for alpha-ent\\n[2023-04-29T22:30:45.646Z] Server pserv-23 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] ==============================\\n[2023-04-29T22:40:45.647Z] Starting to ramp up 21 servers with a max of 233 threads each\\n[2023-04-29T22:40:45.647Z] ==============================\\n[2023-04-29T22:40:45.647Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:40:45.647Z] Server pserv-13 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for n00dles\\n[2023-04-29T22:40:45.647Z] Server pserv-13 does not have capacity for all threads. Starting 212.Threads left: 21\\n[2023-04-29T22:40:45.647Z] Server pserv-14 has capacity for all threads. Starting 21.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for foodnstuff\\n[2023-04-29T22:40:45.647Z] Server pserv-14 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:40:45.647Z] Server pserv-14 does not have capacity for all threads. Starting 191.Threads left: 42\\n[2023-04-29T22:40:45.647Z] Server pserv-15 has capacity for all threads. Starting 42.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for joesguns\\n[2023-04-29T22:40:45.647Z] Server pserv-15 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:40:45.648Z] Server pserv-15 does not have capacity for all threads. Starting 170.Threads left: 63\\n[2023-04-29T22:40:45.648Z] Server pserv-16 has capacity for all threads. Starting 63.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for nectar-net\\n[2023-04-29T22:40:45.648Z] Server pserv-16 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for neo-net\\n[2023-04-29T22:40:45.648Z] Server pserv-16 does not have capacity for all threads. Starting 149.Threads left: 84\\n[2023-04-29T22:40:45.648Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for phantasy\\n[2023-04-29T22:40:45.648Z] Server pserv-17 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for max-hardware\\n[2023-04-29T22:40:45.648Z] Server pserv-17 does not have capacity for all threads. Starting 128.Threads left: 105\\n[2023-04-29T22:40:45.648Z] Server pserv-18 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for zer0\\n[2023-04-29T22:40:45.648Z] Server pserv-18 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for iron-gym\\n[2023-04-29T22:40:45.648Z] Server pserv-18 does not have capacity for all threads. Starting 107.Threads left: 126\\n[2023-04-29T22:40:45.648Z] Server pserv-19 has capacity for all threads. Starting 126.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for silver-helix\\n[2023-04-29T22:40:45.648Z] Server pserv-19 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for omega-net\\n[2023-04-29T22:40:45.648Z] Server pserv-19 does not have capacity for all threads. Starting 86.Threads left: 147\\n[2023-04-29T22:40:45.648Z] Server pserv-20 has capacity for all threads. Starting 147.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for the-hub\\n[2023-04-29T22:40:45.648Z] Server pserv-20 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for crush-fitness\\n[2023-04-29T22:40:45.648Z] Server pserv-20 does not have capacity for all threads. Starting 65.Threads left: 168\\n[2023-04-29T22:40:45.648Z] Server pserv-21 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for johnson-ortho\\n[2023-04-29T22:40:45.648Z] Server pserv-21 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for rothman-uni\\n[2023-04-29T22:40:45.648Z] Server pserv-21 does not have capacity for all threads. Starting 44.Threads left: 189\\n[2023-04-29T22:40:45.648Z] Server pserv-22 has capacity for all threads. Starting 189.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for computek\\n[2023-04-29T22:40:45.648Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for rho-construction\\n[2023-04-29T22:40:45.648Z] Server pserv-22 does not have capacity for all threads. Starting 23.Threads left: 210\\n[2023-04-29T22:40:45.648Z] Server pserv-23 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for alpha-ent\\n[2023-04-29T22:40:45.648Z] Server pserv-23 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] ==============================\\n[2023-04-29T22:50:45.655Z] Starting to ramp up 22 servers with a max of 222 threads each\\n[2023-04-29T22:50:45.655Z] ==============================\\n[2023-04-29T22:50:45.655Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:50:45.655Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for n00dles\\n[2023-04-29T22:50:45.655Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for foodnstuff\\n[2023-04-29T22:50:45.655Z] Server pserv-13 does not have capacity for all threads. Starting 1.Threads left: 221\\n[2023-04-29T22:50:45.655Z] Server pserv-14 has capacity for all threads. Starting 221.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:50:45.655Z] Server pserv-14 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for joesguns\\n[2023-04-29T22:50:45.655Z] Server pserv-14 does not have capacity for all threads. Starting 2.Threads left: 220\\n[2023-04-29T22:50:45.655Z] Server pserv-15 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:50:45.655Z] Server pserv-15 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for nectar-net\\n[2023-04-29T22:50:45.655Z] Server pserv-15 does not have capacity for all threads. Starting 3.Threads left: 219\\n[2023-04-29T22:50:45.655Z] Server pserv-16 has capacity for all threads. Starting 219.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for neo-net\\n[2023-04-29T22:50:45.655Z] Server pserv-16 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for phantasy\\n[2023-04-29T22:50:45.655Z] Server pserv-16 does not have capacity for all threads. Starting 4.Threads left: 218\\n[2023-04-29T22:50:45.655Z] Server pserv-17 has capacity for all threads. Starting 218.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for max-hardware\\n[2023-04-29T22:50:45.655Z] Server pserv-17 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for zer0\\n[2023-04-29T22:50:45.655Z] Server pserv-17 does not have capacity for all threads. Starting 5.Threads left: 217\\n[2023-04-29T22:50:45.655Z] Server pserv-18 has capacity for all threads. Starting 217.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for iron-gym\\n[2023-04-29T22:50:45.655Z] Server pserv-18 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for silver-helix\\n[2023-04-29T22:50:45.655Z] Server pserv-18 does not have capacity for all threads. Starting 6.Threads left: 216\\n[2023-04-29T22:50:45.655Z] Server pserv-19 has capacity for all threads. Starting 216.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for omega-net\\n[2023-04-29T22:50:45.655Z] Server pserv-19 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for the-hub\\n[2023-04-29T22:50:45.655Z] Server pserv-19 does not have capacity for all threads. Starting 7.Threads left: 215\\n[2023-04-29T22:50:45.655Z] Server pserv-20 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for crush-fitness\\n[2023-04-29T22:50:45.655Z] Server pserv-20 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for johnson-ortho\\n[2023-04-29T22:50:45.656Z] Server pserv-20 does not have capacity for all threads. Starting 8.Threads left: 214\\n[2023-04-29T22:50:45.656Z] Server pserv-21 has capacity for all threads. Starting 214.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for rothman-uni\\n[2023-04-29T22:50:45.656Z] Server pserv-21 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for computek\\n[2023-04-29T22:50:45.656Z] Server pserv-21 does not have capacity for all threads. Starting 9.Threads left: 213\\n[2023-04-29T22:50:45.656Z] Server pserv-22 has capacity for all threads. Starting 213.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for rho-construction\\n[2023-04-29T22:50:45.656Z] Server pserv-22 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for alpha-ent\\n[2023-04-29T22:50:45.656Z] Server pserv-22 does not have capacity for all threads. Starting 10.Threads left: 212\\n[2023-04-29T22:50:45.656Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for millenium-fitness\\n[2023-04-29T22:50:45.656Z] Server pserv-23 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] ==============================\\n[2023-04-29T23:00:45.662Z] Starting to ramp up 22 servers with a max of 222 threads each\\n[2023-04-29T23:00:45.662Z] ==============================\\n[2023-04-29T23:00:45.662Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:00:45.662Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for n00dles\\n[2023-04-29T23:00:45.662Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for foodnstuff\\n[2023-04-29T23:00:45.662Z] Server pserv-13 does not have capacity for all threads. Starting 1.Threads left: 221\\n[2023-04-29T23:00:45.662Z] Server pserv-14 has capacity for all threads. Starting 221.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:00:45.662Z] Server pserv-14 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for joesguns\\n[2023-04-29T23:00:45.662Z] Server pserv-14 does not have capacity for all threads. Starting 2.Threads left: 220\\n[2023-04-29T23:00:45.662Z] Server pserv-15 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:00:45.662Z] Server pserv-15 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for nectar-net\\n[2023-04-29T23:00:45.662Z] Server pserv-15 does not have capacity for all threads. Starting 3.Threads left: 219\\n[2023-04-29T23:00:45.663Z] Server pserv-16 has capacity for all threads. Starting 219.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for neo-net\\n[2023-04-29T23:00:45.663Z] Server pserv-16 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for phantasy\\n[2023-04-29T23:00:45.663Z] Server pserv-16 does not have capacity for all threads. Starting 4.Threads left: 218\\n[2023-04-29T23:00:45.663Z] Server pserv-17 has capacity for all threads. Starting 218.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for max-hardware\\n[2023-04-29T23:00:45.663Z] Server pserv-17 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for zer0\\n[2023-04-29T23:00:45.663Z] Server pserv-17 does not have capacity for all threads. Starting 5.Threads left: 217\\n[2023-04-29T23:00:45.663Z] Server pserv-18 has capacity for all threads. Starting 217.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for iron-gym\\n[2023-04-29T23:00:45.663Z] Server pserv-18 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for silver-helix\\n[2023-04-29T23:00:45.663Z] Server pserv-18 does not have capacity for all threads. Starting 6.Threads left: 216\\n[2023-04-29T23:00:45.663Z] Server pserv-19 has capacity for all threads. Starting 216.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for omega-net\\n[2023-04-29T23:00:45.663Z] Server pserv-19 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for the-hub\\n[2023-04-29T23:00:45.663Z] Server pserv-19 does not have capacity for all threads. Starting 7.Threads left: 215\\n[2023-04-29T23:00:45.663Z] Server pserv-20 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for crush-fitness\\n[2023-04-29T23:00:45.663Z] Server pserv-20 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for johnson-ortho\\n[2023-04-29T23:00:45.663Z] Server pserv-20 does not have capacity for all threads. Starting 8.Threads left: 214\\n[2023-04-29T23:00:45.663Z] Server pserv-21 has capacity for all threads. Starting 214.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for rothman-uni\\n[2023-04-29T23:00:45.663Z] Server pserv-21 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for computek\\n[2023-04-29T23:00:45.663Z] Server pserv-21 does not have capacity for all threads. Starting 9.Threads left: 213\\n[2023-04-29T23:00:45.663Z] Server pserv-22 has capacity for all threads. Starting 213.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for rho-construction\\n[2023-04-29T23:00:45.663Z] Server pserv-22 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for alpha-ent\\n[2023-04-29T23:00:45.663Z] Server pserv-22 does not have capacity for all threads. Starting 10.Threads left: 212\\n[2023-04-29T23:00:45.663Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for millenium-fitness\\n[2023-04-29T23:00:45.663Z] Server pserv-23 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] ==============================\\n[2023-04-29T23:10:45.664Z] Starting to ramp up 22 servers with a max of 222 threads each\\n[2023-04-29T23:10:45.664Z] ==============================\\n[2023-04-29T23:10:45.664Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:10:45.664Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for n00dles\\n[2023-04-29T23:10:45.664Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for foodnstuff\\n[2023-04-29T23:10:45.664Z] Server pserv-13 does not have capacity for all threads. Starting 1.Threads left: 221\\n[2023-04-29T23:10:45.664Z] Server pserv-14 has capacity for all threads. Starting 221.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:10:45.664Z] Server pserv-14 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for joesguns\\n[2023-04-29T23:10:45.664Z] Server pserv-14 does not have capacity for all threads. Starting 2.Threads left: 220\\n[2023-04-29T23:10:45.664Z] Server pserv-15 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:10:45.664Z] Server pserv-15 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for nectar-net\\n[2023-04-29T23:10:45.664Z] Server pserv-15 does not have capacity for all threads. Starting 3.Threads left: 219\\n[2023-04-29T23:10:45.664Z] Server pserv-16 has capacity for all threads. Starting 219.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for neo-net\\n[2023-04-29T23:10:45.664Z] Server pserv-16 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for phantasy\\n[2023-04-29T23:10:45.664Z] Server pserv-16 does not have capacity for all threads. Starting 4.Threads left: 218\\n[2023-04-29T23:10:45.664Z] Server pserv-17 has capacity for all threads. Starting 218.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for max-hardware\\n[2023-04-29T23:10:45.664Z] Server pserv-17 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for zer0\\n[2023-04-29T23:10:45.664Z] Server pserv-17 does not have capacity for all threads. Starting 5.Threads left: 217\\n[2023-04-29T23:10:45.664Z] Server pserv-18 has capacity for all threads. Starting 217.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for iron-gym\\n[2023-04-29T23:10:45.664Z] Server pserv-18 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for silver-helix\\n[2023-04-29T23:10:45.664Z] Server pserv-18 does not have capacity for all threads. Starting 6.Threads left: 216\\n[2023-04-29T23:10:45.664Z] Server pserv-19 has capacity for all threads. Starting 216.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for omega-net\\n[2023-04-29T23:10:45.664Z] Server pserv-19 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for the-hub\\n[2023-04-29T23:10:45.664Z] Server pserv-19 does not have capacity for all threads. Starting 7.Threads left: 215\\n[2023-04-29T23:10:45.664Z] Server pserv-20 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for crush-fitness\\n[2023-04-29T23:10:45.664Z] Server pserv-20 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for johnson-ortho\\n[2023-04-29T23:10:45.664Z] Server pserv-20 does not have capacity for all threads. Starting 8.Threads left: 214\\n[2023-04-29T23:10:45.664Z] Server pserv-21 has capacity for all threads. Starting 214.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for rothman-uni\\n[2023-04-29T23:10:45.664Z] Server pserv-21 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for computek\\n[2023-04-29T23:10:45.664Z] Server pserv-21 does not have capacity for all threads. Starting 9.Threads left: 213\\n[2023-04-29T23:10:45.664Z] Server pserv-22 has capacity for all threads. Starting 213.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for rho-construction\\n[2023-04-29T23:10:45.664Z] Server pserv-22 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for alpha-ent\\n[2023-04-29T23:10:45.664Z] Server pserv-22 does not have capacity for all threads. Starting 10.Threads left: 212\\n[2023-04-29T23:10:45.664Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for millenium-fitness\\n[2023-04-29T23:10:45.664Z] Server pserv-23 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] ==============================\\n[2023-04-29T23:20:45.670Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:20:45.670Z] ==============================\\n[2023-04-29T23:20:45.670Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:20:45.670Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for n00dles\\n[2023-04-29T23:20:45.670Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for foodnstuff\\n[2023-04-29T23:20:45.670Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:20:45.670Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:20:45.670Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for joesguns\\n[2023-04-29T23:20:45.670Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:20:45.670Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:20:45.670Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for nectar-net\\n[2023-04-29T23:20:45.670Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:20:45.670Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for neo-net\\n[2023-04-29T23:20:45.670Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for phantasy\\n[2023-04-29T23:20:45.670Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:20:45.670Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for max-hardware\\n[2023-04-29T23:20:45.670Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for zer0\\n[2023-04-29T23:20:45.670Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:20:45.670Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for iron-gym\\n[2023-04-29T23:20:45.670Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for silver-helix\\n[2023-04-29T23:20:45.670Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:20:45.670Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for omega-net\\n[2023-04-29T23:20:45.670Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for the-hub\\n[2023-04-29T23:20:45.670Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:20:45.670Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for crush-fitness\\n[2023-04-29T23:20:45.670Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for johnson-ortho\\n[2023-04-29T23:20:45.670Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:20:45.671Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for rothman-uni\\n[2023-04-29T23:20:45.671Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for computek\\n[2023-04-29T23:20:45.671Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:20:45.671Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for rho-construction\\n[2023-04-29T23:20:45.671Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for alpha-ent\\n[2023-04-29T23:20:45.671Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:20:45.671Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for millenium-fitness\\n[2023-04-29T23:20:45.671Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for summit-uni\\n[2023-04-29T23:20:45.671Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] ==============================\\n[2023-04-29T23:30:45.691Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:30:45.691Z] ==============================\\n[2023-04-29T23:30:45.691Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:30:45.691Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for n00dles\\n[2023-04-29T23:30:45.691Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for foodnstuff\\n[2023-04-29T23:30:45.691Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:30:45.691Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:30:45.691Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for joesguns\\n[2023-04-29T23:30:45.691Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:30:45.691Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:30:45.691Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for nectar-net\\n[2023-04-29T23:30:45.691Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:30:45.691Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for neo-net\\n[2023-04-29T23:30:45.691Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for phantasy\\n[2023-04-29T23:30:45.691Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:30:45.691Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for max-hardware\\n[2023-04-29T23:30:45.691Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for zer0\\n[2023-04-29T23:30:45.691Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:30:45.691Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for iron-gym\\n[2023-04-29T23:30:45.691Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for silver-helix\\n[2023-04-29T23:30:45.691Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:30:45.691Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for omega-net\\n[2023-04-29T23:30:45.691Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for the-hub\\n[2023-04-29T23:30:45.691Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:30:45.691Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for crush-fitness\\n[2023-04-29T23:30:45.691Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for johnson-ortho\\n[2023-04-29T23:30:45.691Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:30:45.691Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for rothman-uni\\n[2023-04-29T23:30:45.691Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for computek\\n[2023-04-29T23:30:45.691Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:30:45.691Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for rho-construction\\n[2023-04-29T23:30:45.691Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for alpha-ent\\n[2023-04-29T23:30:45.691Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:30:45.691Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for millenium-fitness\\n[2023-04-29T23:30:45.691Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for summit-uni\\n[2023-04-29T23:30:45.691Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.693Z] ==============================\\n[2023-04-29T23:40:45.693Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:40:45.693Z] ==============================\\n[2023-04-29T23:40:45.694Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:40:45.694Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for n00dles\\n[2023-04-29T23:40:45.694Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for foodnstuff\\n[2023-04-29T23:40:45.694Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:40:45.694Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:40:45.694Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for joesguns\\n[2023-04-29T23:40:45.694Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:40:45.694Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:40:45.694Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for nectar-net\\n[2023-04-29T23:40:45.694Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:40:45.694Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for neo-net\\n[2023-04-29T23:40:45.694Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for phantasy\\n[2023-04-29T23:40:45.694Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:40:45.695Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for max-hardware\\n[2023-04-29T23:40:45.695Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for zer0\\n[2023-04-29T23:40:45.695Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:40:45.695Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for iron-gym\\n[2023-04-29T23:40:45.695Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for silver-helix\\n[2023-04-29T23:40:45.695Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:40:45.695Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for omega-net\\n[2023-04-29T23:40:45.695Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for the-hub\\n[2023-04-29T23:40:45.695Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:40:45.695Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for crush-fitness\\n[2023-04-29T23:40:45.695Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for johnson-ortho\\n[2023-04-29T23:40:45.695Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:40:45.695Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for rothman-uni\\n[2023-04-29T23:40:45.696Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for computek\\n[2023-04-29T23:40:45.696Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:40:45.696Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for rho-construction\\n[2023-04-29T23:40:45.696Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for alpha-ent\\n[2023-04-29T23:40:45.696Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:40:45.696Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for millenium-fitness\\n[2023-04-29T23:40:45.696Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for summit-uni\\n[2023-04-29T23:40:45.696Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] ==============================\\n[2023-04-29T23:50:45.705Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:50:45.705Z] ==============================\\n[2023-04-29T23:50:45.705Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:50:45.705Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for n00dles\\n[2023-04-29T23:50:45.705Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for foodnstuff\\n[2023-04-29T23:50:45.705Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:50:45.705Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:50:45.705Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for joesguns\\n[2023-04-29T23:50:45.705Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:50:45.706Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:50:45.706Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for nectar-net\\n[2023-04-29T23:50:45.706Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:50:45.706Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for neo-net\\n[2023-04-29T23:50:45.706Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for phantasy\\n[2023-04-29T23:50:45.706Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:50:45.706Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for max-hardware\\n[2023-04-29T23:50:45.706Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for zer0\\n[2023-04-29T23:50:45.706Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:50:45.706Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for iron-gym\\n[2023-04-29T23:50:45.706Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for silver-helix\\n[2023-04-29T23:50:45.706Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:50:45.706Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for omega-net\\n[2023-04-29T23:50:45.706Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for the-hub\\n[2023-04-29T23:50:45.706Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:50:45.706Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for crush-fitness\\n[2023-04-29T23:50:45.706Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for johnson-ortho\\n[2023-04-29T23:50:45.706Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:50:45.706Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for rothman-uni\\n[2023-04-29T23:50:45.706Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for computek\\n[2023-04-29T23:50:45.706Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:50:45.706Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for rho-construction\\n[2023-04-29T23:50:45.706Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for alpha-ent\\n[2023-04-29T23:50:45.706Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:50:45.706Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for millenium-fitness\\n[2023-04-29T23:50:45.706Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for summit-uni\\n[2023-04-29T23:50:45.706Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-30T00:00:45.731Z] ==============================\\n[2023-04-30T00:00:45.731Z] Starting to ramp up 24 servers with a max of 204 threads each\\n[2023-04-30T00:00:45.731Z] ==============================\\n[2023-04-30T00:00:45.731Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:00:45.731Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.731Z] Starting threads for n00dles\\n[2023-04-30T00:00:45.731Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.731Z] Starting threads for foodnstuff\\n[2023-04-30T00:00:45.731Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 167\\n[2023-04-30T00:00:45.732Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:00:45.732Z] Server pserv-14 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for joesguns\\n[2023-04-30T00:00:45.732Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 130\\n[2023-04-30T00:00:45.732Z] Server pserv-15 has capacity for all threads. Starting 130.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:00:45.732Z] Server pserv-15 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for nectar-net\\n[2023-04-30T00:00:45.732Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 93\\n[2023-04-30T00:00:45.732Z] Server pserv-16 has capacity for all threads. Starting 93.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for neo-net\\n[2023-04-30T00:00:45.732Z] Server pserv-16 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for phantasy\\n[2023-04-30T00:00:45.732Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 56\\n[2023-04-30T00:00:45.732Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for max-hardware\\n[2023-04-30T00:00:45.732Z] Server pserv-17 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for zer0\\n[2023-04-30T00:00:45.732Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 19\\n[2023-04-30T00:00:45.732Z] Server pserv-18 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for iron-gym\\n[2023-04-30T00:00:45.732Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for silver-helix\\n[2023-04-30T00:00:45.733Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for omega-net\\n[2023-04-30T00:00:45.733Z] Server pserv-18 does not have capacity for all threads. Starting 18.Threads left: 186\\n[2023-04-30T00:00:45.733Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for the-hub\\n[2023-04-30T00:00:45.733Z] Server pserv-19 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for crush-fitness\\n[2023-04-30T00:00:45.733Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 149\\n[2023-04-30T00:00:45.733Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for johnson-ortho\\n[2023-04-30T00:00:45.733Z] Server pserv-20 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for rothman-uni\\n[2023-04-30T00:00:45.733Z] Server pserv-20 does not have capacity for all threads. Starting 92.Threads left: 112\\n[2023-04-30T00:00:45.733Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for computek\\n[2023-04-30T00:00:45.733Z] Server pserv-21 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for rho-construction\\n[2023-04-30T00:00:45.733Z] Server pserv-21 does not have capacity for all threads. Starting 129.Threads left: 75\\n[2023-04-30T00:00:45.733Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for alpha-ent\\n[2023-04-30T00:00:45.733Z] Server pserv-22 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for millenium-fitness\\n[2023-04-30T00:00:45.733Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 38\\n[2023-04-30T00:00:45.733Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-30T00:00:45.734Z] Starting threads for summit-uni\\n[2023-04-30T00:00:45.734Z] Server pserv-23 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.734Z] Starting threads for snap-fitness\\n[2023-04-30T00:00:45.734Z] Server pserv-23 does not have capacity for all threads. Starting 203.Threads left: 1\\n[2023-04-30T00:10:45.735Z] ==============================\\n[2023-04-30T00:10:45.735Z] Starting to ramp up 24 servers with a max of 204 threads each\\n[2023-04-30T00:10:45.735Z] ==============================\\n[2023-04-30T00:10:45.735Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:10:45.735Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for n00dles\\n[2023-04-30T00:10:45.735Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for foodnstuff\\n[2023-04-30T00:10:45.735Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 167\\n[2023-04-30T00:10:45.735Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:10:45.735Z] Server pserv-14 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for joesguns\\n[2023-04-30T00:10:45.735Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 130\\n[2023-04-30T00:10:45.735Z] Server pserv-15 has capacity for all threads. Starting 130.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:10:45.735Z] Server pserv-15 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for nectar-net\\n[2023-04-30T00:10:45.735Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 93\\n[2023-04-30T00:10:45.735Z] Server pserv-16 has capacity for all threads. Starting 93.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for neo-net\\n[2023-04-30T00:10:45.735Z] Server pserv-16 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for phantasy\\n[2023-04-30T00:10:45.735Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 56\\n[2023-04-30T00:10:45.735Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for max-hardware\\n[2023-04-30T00:10:45.735Z] Server pserv-17 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for zer0\\n[2023-04-30T00:10:45.735Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 19\\n[2023-04-30T00:10:45.735Z] Server pserv-18 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for iron-gym\\n[2023-04-30T00:10:45.735Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for silver-helix\\n[2023-04-30T00:10:45.735Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for omega-net\\n[2023-04-30T00:10:45.735Z] Server pserv-18 does not have capacity for all threads. Starting 18.Threads left: 186\\n[2023-04-30T00:10:45.735Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for the-hub\\n[2023-04-30T00:10:45.735Z] Server pserv-19 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for crush-fitness\\n[2023-04-30T00:10:45.735Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 149\\n[2023-04-30T00:10:45.735Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for johnson-ortho\\n[2023-04-30T00:10:45.735Z] Server pserv-20 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for rothman-uni\\n[2023-04-30T00:10:45.735Z] Server pserv-20 does not have capacity for all threads. Starting 92.Threads left: 112\\n[2023-04-30T00:10:45.735Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for computek\\n[2023-04-30T00:10:45.735Z] Server pserv-21 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for rho-construction\\n[2023-04-30T00:10:45.735Z] Server pserv-21 does not have capacity for all threads. Starting 129.Threads left: 75\\n[2023-04-30T00:10:45.735Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for alpha-ent\\n[2023-04-30T00:10:45.735Z] Server pserv-22 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for millenium-fitness\\n[2023-04-30T00:10:45.735Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 38\\n[2023-04-30T00:10:45.735Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for summit-uni\\n[2023-04-30T00:10:45.735Z] Server pserv-23 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for snap-fitness\\n[2023-04-30T00:10:45.735Z] Server pserv-23 does not have capacity for all threads. Starting 203.Threads left: 1\\n[2023-04-30T00:20:45.744Z] ==============================\\n[2023-04-30T00:20:45.744Z] Starting to ramp up 24 servers with a max of 204 threads each\\n[2023-04-30T00:20:45.744Z] ==============================\\n[2023-04-30T00:20:45.744Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:20:45.744Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for n00dles\\n[2023-04-30T00:20:45.744Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for foodnstuff\\n[2023-04-30T00:20:45.744Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 167\\n[2023-04-30T00:20:45.744Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:20:45.744Z] Server pserv-14 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for joesguns\\n[2023-04-30T00:20:45.744Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 130\\n[2023-04-30T00:20:45.744Z] Server pserv-15 has capacity for all threads. Starting 130.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:20:45.744Z] Server pserv-15 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for nectar-net\\n[2023-04-30T00:20:45.744Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 93\\n[2023-04-30T00:20:45.744Z] Server pserv-16 has capacity for all threads. Starting 93.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for neo-net\\n[2023-04-30T00:20:45.744Z] Server pserv-16 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for phantasy\\n[2023-04-30T00:20:45.744Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 56\\n[2023-04-30T00:20:45.744Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for max-hardware\\n[2023-04-30T00:20:45.744Z] Server pserv-17 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for zer0\\n[2023-04-30T00:20:45.744Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 19\\n[2023-04-30T00:20:45.744Z] Server pserv-18 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for iron-gym\\n[2023-04-30T00:20:45.744Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for silver-helix\\n[2023-04-30T00:20:45.744Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for omega-net\\n[2023-04-30T00:20:45.744Z] Server pserv-18 does not have capacity for all threads. Starting 18.Threads left: 186\\n[2023-04-30T00:20:45.744Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for the-hub\\n[2023-04-30T00:20:45.744Z] Server pserv-19 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for crush-fitness\\n[2023-04-30T00:20:45.744Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 149\\n[2023-04-30T00:20:45.744Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for johnson-ortho\\n[2023-04-30T00:20:45.744Z] Server pserv-20 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for rothman-uni\\n[2023-04-30T00:20:45.744Z] Server pserv-20 does not have capacity for all threads. Starting 92.Threads left: 112\\n[2023-04-30T00:20:45.744Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for computek\\n[2023-04-30T00:20:45.744Z] Server pserv-21 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for rho-construction\\n[2023-04-30T00:20:45.744Z] Server pserv-21 does not have capacity for all threads. Starting 129.Threads left: 75\\n[2023-04-30T00:20:45.744Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for alpha-ent\\n[2023-04-30T00:20:45.745Z] Server pserv-22 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.745Z] Starting threads for millenium-fitness\\n[2023-04-30T00:20:45.745Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 38\\n[2023-04-30T00:20:45.745Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-30T00:20:45.745Z] Starting threads for summit-uni\\n[2023-04-30T00:20:45.745Z] Server pserv-23 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.745Z] Starting threads for snap-fitness\\n[2023-04-30T00:20:45.745Z] Server pserv-23 does not have capacity for all threads. Starting 203.Threads left: 1\\n[2023-04-30T00:30:45.750Z] ==============================\\n[2023-04-30T00:30:45.750Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T00:30:45.750Z] ==============================\\n[2023-04-30T00:30:45.750Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:30:45.750Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for n00dles\\n[2023-04-30T00:30:45.750Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for foodnstuff\\n[2023-04-30T00:30:45.750Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T00:30:45.750Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:30:45.750Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for joesguns\\n[2023-04-30T00:30:45.750Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T00:30:45.750Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:30:45.750Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for nectar-net\\n[2023-04-30T00:30:45.750Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T00:30:45.750Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for neo-net\\n[2023-04-30T00:30:45.750Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for phantasy\\n[2023-04-30T00:30:45.750Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for max-hardware\\n[2023-04-30T00:30:45.750Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T00:30:45.750Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for zer0\\n[2023-04-30T00:30:45.750Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for iron-gym\\n[2023-04-30T00:30:45.750Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T00:30:45.750Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for silver-helix\\n[2023-04-30T00:30:45.750Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for omega-net\\n[2023-04-30T00:30:45.750Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T00:30:45.750Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for the-hub\\n[2023-04-30T00:30:45.750Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for crush-fitness\\n[2023-04-30T00:30:45.750Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T00:30:45.750Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for johnson-ortho\\n[2023-04-30T00:30:45.750Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for rothman-uni\\n[2023-04-30T00:30:45.750Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for computek\\n[2023-04-30T00:30:45.750Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T00:30:45.750Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for rho-construction\\n[2023-04-30T00:30:45.751Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for alpha-ent\\n[2023-04-30T00:30:45.751Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T00:30:45.751Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for millenium-fitness\\n[2023-04-30T00:30:45.751Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for summit-uni\\n[2023-04-30T00:30:45.751Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T00:30:45.751Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for snap-fitness\\n[2023-04-30T00:30:45.751Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for catalyst\\n[2023-04-30T00:30:45.751Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] ==============================\\n[2023-04-30T00:40:45.752Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T00:40:45.752Z] ==============================\\n[2023-04-30T00:40:45.752Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:40:45.752Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for n00dles\\n[2023-04-30T00:40:45.752Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for foodnstuff\\n[2023-04-30T00:40:45.752Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T00:40:45.752Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:40:45.752Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for joesguns\\n[2023-04-30T00:40:45.752Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T00:40:45.752Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:40:45.752Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for nectar-net\\n[2023-04-30T00:40:45.752Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T00:40:45.752Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for neo-net\\n[2023-04-30T00:40:45.752Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for phantasy\\n[2023-04-30T00:40:45.752Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for max-hardware\\n[2023-04-30T00:40:45.752Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T00:40:45.752Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for zer0\\n[2023-04-30T00:40:45.752Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for iron-gym\\n[2023-04-30T00:40:45.752Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T00:40:45.752Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for silver-helix\\n[2023-04-30T00:40:45.752Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for omega-net\\n[2023-04-30T00:40:45.752Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T00:40:45.752Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for the-hub\\n[2023-04-30T00:40:45.752Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for crush-fitness\\n[2023-04-30T00:40:45.752Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T00:40:45.752Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for johnson-ortho\\n[2023-04-30T00:40:45.752Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for rothman-uni\\n[2023-04-30T00:40:45.752Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for computek\\n[2023-04-30T00:40:45.752Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T00:40:45.752Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for rho-construction\\n[2023-04-30T00:40:45.752Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for alpha-ent\\n[2023-04-30T00:40:45.752Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T00:40:45.752Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for millenium-fitness\\n[2023-04-30T00:40:45.752Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for summit-uni\\n[2023-04-30T00:40:45.752Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T00:40:45.752Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T00:40:45.753Z] Starting threads for snap-fitness\\n[2023-04-30T00:40:45.753Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.753Z] Starting threads for catalyst\\n[2023-04-30T00:40:45.753Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] ==============================\\n[2023-04-30T00:50:45.759Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T00:50:45.759Z] ==============================\\n[2023-04-30T00:50:45.759Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:50:45.759Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for n00dles\\n[2023-04-30T00:50:45.759Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for foodnstuff\\n[2023-04-30T00:50:45.759Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T00:50:45.759Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:50:45.759Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for joesguns\\n[2023-04-30T00:50:45.759Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T00:50:45.759Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:50:45.759Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for nectar-net\\n[2023-04-30T00:50:45.759Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T00:50:45.759Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for neo-net\\n[2023-04-30T00:50:45.759Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for phantasy\\n[2023-04-30T00:50:45.759Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for max-hardware\\n[2023-04-30T00:50:45.759Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T00:50:45.759Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for zer0\\n[2023-04-30T00:50:45.759Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for iron-gym\\n[2023-04-30T00:50:45.759Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T00:50:45.759Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for silver-helix\\n[2023-04-30T00:50:45.759Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for omega-net\\n[2023-04-30T00:50:45.759Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T00:50:45.759Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for the-hub\\n[2023-04-30T00:50:45.759Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for crush-fitness\\n[2023-04-30T00:50:45.759Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T00:50:45.759Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for johnson-ortho\\n[2023-04-30T00:50:45.759Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for rothman-uni\\n[2023-04-30T00:50:45.759Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for computek\\n[2023-04-30T00:50:45.759Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T00:50:45.759Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for rho-construction\\n[2023-04-30T00:50:45.759Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for alpha-ent\\n[2023-04-30T00:50:45.759Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T00:50:45.760Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for millenium-fitness\\n[2023-04-30T00:50:45.760Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for summit-uni\\n[2023-04-30T00:50:45.760Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T00:50:45.760Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for snap-fitness\\n[2023-04-30T00:50:45.760Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for catalyst\\n[2023-04-30T00:50:45.760Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.765Z] ==============================\\n[2023-04-30T01:00:45.765Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:00:45.765Z] ==============================\\n[2023-04-30T01:00:45.765Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:00:45.765Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.765Z] Starting threads for n00dles\\n[2023-04-30T01:00:45.765Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.765Z] Starting threads for foodnstuff\\n[2023-04-30T01:00:45.765Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:00:45.766Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:00:45.766Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for joesguns\\n[2023-04-30T01:00:45.766Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:00:45.766Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:00:45.766Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for nectar-net\\n[2023-04-30T01:00:45.766Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:00:45.766Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for neo-net\\n[2023-04-30T01:00:45.766Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for phantasy\\n[2023-04-30T01:00:45.766Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for max-hardware\\n[2023-04-30T01:00:45.766Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:00:45.766Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for zer0\\n[2023-04-30T01:00:45.766Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for iron-gym\\n[2023-04-30T01:00:45.766Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:00:45.766Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for silver-helix\\n[2023-04-30T01:00:45.766Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for omega-net\\n[2023-04-30T01:00:45.766Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:00:45.766Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for the-hub\\n[2023-04-30T01:00:45.766Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for crush-fitness\\n[2023-04-30T01:00:45.766Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:00:45.766Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for johnson-ortho\\n[2023-04-30T01:00:45.766Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for rothman-uni\\n[2023-04-30T01:00:45.766Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for computek\\n[2023-04-30T01:00:45.766Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:00:45.766Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for rho-construction\\n[2023-04-30T01:00:45.766Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for alpha-ent\\n[2023-04-30T01:00:45.766Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:00:45.766Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for millenium-fitness\\n[2023-04-30T01:00:45.766Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for summit-uni\\n[2023-04-30T01:00:45.766Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:00:45.766Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for snap-fitness\\n[2023-04-30T01:00:45.766Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for catalyst\\n[2023-04-30T01:00:45.766Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] ==============================\\n[2023-04-30T01:10:45.768Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:10:45.768Z] ==============================\\n[2023-04-30T01:10:45.768Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:10:45.768Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for n00dles\\n[2023-04-30T01:10:45.768Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for foodnstuff\\n[2023-04-30T01:10:45.768Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:10:45.768Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:10:45.768Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for joesguns\\n[2023-04-30T01:10:45.768Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:10:45.768Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:10:45.768Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for nectar-net\\n[2023-04-30T01:10:45.768Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:10:45.768Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for neo-net\\n[2023-04-30T01:10:45.768Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for phantasy\\n[2023-04-30T01:10:45.769Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for max-hardware\\n[2023-04-30T01:10:45.769Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:10:45.769Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for zer0\\n[2023-04-30T01:10:45.769Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for iron-gym\\n[2023-04-30T01:10:45.769Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:10:45.769Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for silver-helix\\n[2023-04-30T01:10:45.769Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for omega-net\\n[2023-04-30T01:10:45.769Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:10:45.769Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for the-hub\\n[2023-04-30T01:10:45.769Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for crush-fitness\\n[2023-04-30T01:10:45.769Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:10:45.769Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for johnson-ortho\\n[2023-04-30T01:10:45.769Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for rothman-uni\\n[2023-04-30T01:10:45.769Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for computek\\n[2023-04-30T01:10:45.769Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:10:45.770Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for rho-construction\\n[2023-04-30T01:10:45.770Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for alpha-ent\\n[2023-04-30T01:10:45.770Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:10:45.770Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for millenium-fitness\\n[2023-04-30T01:10:45.770Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for summit-uni\\n[2023-04-30T01:10:45.770Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:10:45.770Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for snap-fitness\\n[2023-04-30T01:10:45.770Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for catalyst\\n[2023-04-30T01:10:45.770Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] ==============================\\n[2023-04-30T01:20:45.782Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:20:45.782Z] ==============================\\n[2023-04-30T01:20:45.782Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:20:45.782Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for n00dles\\n[2023-04-30T01:20:45.782Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for foodnstuff\\n[2023-04-30T01:20:45.782Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:20:45.782Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:20:45.782Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for joesguns\\n[2023-04-30T01:20:45.782Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:20:45.782Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:20:45.782Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for nectar-net\\n[2023-04-30T01:20:45.782Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:20:45.783Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for neo-net\\n[2023-04-30T01:20:45.783Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for phantasy\\n[2023-04-30T01:20:45.783Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for max-hardware\\n[2023-04-30T01:20:45.783Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:20:45.783Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for zer0\\n[2023-04-30T01:20:45.783Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for iron-gym\\n[2023-04-30T01:20:45.783Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:20:45.783Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for silver-helix\\n[2023-04-30T01:20:45.783Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for omega-net\\n[2023-04-30T01:20:45.783Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:20:45.783Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for the-hub\\n[2023-04-30T01:20:45.783Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for crush-fitness\\n[2023-04-30T01:20:45.783Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:20:45.783Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for johnson-ortho\\n[2023-04-30T01:20:45.783Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for rothman-uni\\n[2023-04-30T01:20:45.783Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for computek\\n[2023-04-30T01:20:45.783Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:20:45.783Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for rho-construction\\n[2023-04-30T01:20:45.783Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for alpha-ent\\n[2023-04-30T01:20:45.783Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:20:45.783Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for millenium-fitness\\n[2023-04-30T01:20:45.783Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for summit-uni\\n[2023-04-30T01:20:45.783Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:20:45.783Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for snap-fitness\\n[2023-04-30T01:20:45.783Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for catalyst\\n[2023-04-30T01:20:45.783Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] ==============================\\n[2023-04-30T01:30:45.803Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:30:45.803Z] ==============================\\n[2023-04-30T01:30:45.803Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:30:45.803Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for n00dles\\n[2023-04-30T01:30:45.803Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for foodnstuff\\n[2023-04-30T01:30:45.803Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:30:45.803Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:30:45.803Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for joesguns\\n[2023-04-30T01:30:45.803Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:30:45.803Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:30:45.803Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for nectar-net\\n[2023-04-30T01:30:45.803Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:30:45.803Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for neo-net\\n[2023-04-30T01:30:45.803Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for phantasy\\n[2023-04-30T01:30:45.803Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for max-hardware\\n[2023-04-30T01:30:45.803Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:30:45.803Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for zer0\\n[2023-04-30T01:30:45.803Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for iron-gym\\n[2023-04-30T01:30:45.803Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:30:45.803Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for silver-helix\\n[2023-04-30T01:30:45.803Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for omega-net\\n[2023-04-30T01:30:45.803Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:30:45.803Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for the-hub\\n[2023-04-30T01:30:45.803Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for crush-fitness\\n[2023-04-30T01:30:45.803Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:30:45.803Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for johnson-ortho\\n[2023-04-30T01:30:45.803Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for rothman-uni\\n[2023-04-30T01:30:45.804Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for computek\\n[2023-04-30T01:30:45.804Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:30:45.804Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for rho-construction\\n[2023-04-30T01:30:45.804Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for alpha-ent\\n[2023-04-30T01:30:45.804Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:30:45.804Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for millenium-fitness\\n[2023-04-30T01:30:45.804Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for summit-uni\\n[2023-04-30T01:30:45.804Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:30:45.804Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for snap-fitness\\n[2023-04-30T01:30:45.804Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for catalyst\\n[2023-04-30T01:30:45.804Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.804Z] ==============================\\n[2023-04-30T01:40:45.805Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:40:45.805Z] ==============================\\n[2023-04-30T01:40:45.805Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:40:45.805Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for n00dles\\n[2023-04-30T01:40:45.805Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for foodnstuff\\n[2023-04-30T01:40:45.805Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:40:45.805Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:40:45.805Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for joesguns\\n[2023-04-30T01:40:45.805Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:40:45.805Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:40:45.805Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for nectar-net\\n[2023-04-30T01:40:45.806Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:40:45.806Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for neo-net\\n[2023-04-30T01:40:45.806Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for phantasy\\n[2023-04-30T01:40:45.806Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for max-hardware\\n[2023-04-30T01:40:45.806Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:40:45.806Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for zer0\\n[2023-04-30T01:40:45.806Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for iron-gym\\n[2023-04-30T01:40:45.806Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:40:45.806Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for silver-helix\\n[2023-04-30T01:40:45.806Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for omega-net\\n[2023-04-30T01:40:45.806Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:40:45.806Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for the-hub\\n[2023-04-30T01:40:45.807Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for crush-fitness\\n[2023-04-30T01:40:45.807Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:40:45.807Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for johnson-ortho\\n[2023-04-30T01:40:45.807Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for rothman-uni\\n[2023-04-30T01:40:45.807Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for computek\\n[2023-04-30T01:40:45.807Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:40:45.807Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for rho-construction\\n[2023-04-30T01:40:45.807Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for alpha-ent\\n[2023-04-30T01:40:45.807Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:40:45.807Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for millenium-fitness\\n[2023-04-30T01:40:45.807Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for summit-uni\\n[2023-04-30T01:40:45.807Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:40:45.807Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for snap-fitness\\n[2023-04-30T01:40:45.807Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for catalyst\\n[2023-04-30T01:40:45.808Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] ==============================\\n[2023-04-30T01:50:45.817Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:50:45.817Z] ==============================\\n[2023-04-30T01:50:45.817Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:50:45.817Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for n00dles\\n[2023-04-30T01:50:45.817Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for foodnstuff\\n[2023-04-30T01:50:45.817Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:50:45.817Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:50:45.817Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for joesguns\\n[2023-04-30T01:50:45.817Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:50:45.817Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:50:45.817Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for nectar-net\\n[2023-04-30T01:50:45.817Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:50:45.817Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for neo-net\\n[2023-04-30T01:50:45.817Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for phantasy\\n[2023-04-30T01:50:45.817Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for max-hardware\\n[2023-04-30T01:50:45.817Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:50:45.818Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for zer0\\n[2023-04-30T01:50:45.818Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for iron-gym\\n[2023-04-30T01:50:45.818Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:50:45.818Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for silver-helix\\n[2023-04-30T01:50:45.818Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for omega-net\\n[2023-04-30T01:50:45.818Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:50:45.818Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for the-hub\\n[2023-04-30T01:50:45.818Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for crush-fitness\\n[2023-04-30T01:50:45.818Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:50:45.818Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for johnson-ortho\\n[2023-04-30T01:50:45.818Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for rothman-uni\\n[2023-04-30T01:50:45.818Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for computek\\n[2023-04-30T01:50:45.818Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:50:45.818Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for rho-construction\\n[2023-04-30T01:50:45.818Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for alpha-ent\\n[2023-04-30T01:50:45.818Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:50:45.818Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for millenium-fitness\\n[2023-04-30T01:50:45.818Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for summit-uni\\n[2023-04-30T01:50:45.818Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:50:45.818Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for snap-fitness\\n[2023-04-30T01:50:45.818Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for catalyst\\n[2023-04-30T01:50:45.818Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] ==============================\\n[2023-04-30T02:00:45.827Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:00:45.827Z] ==============================\\n[2023-04-30T02:00:45.827Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:00:45.827Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for n00dles\\n[2023-04-30T02:00:45.827Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for foodnstuff\\n[2023-04-30T02:00:45.827Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:00:45.827Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:00:45.827Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for joesguns\\n[2023-04-30T02:00:45.827Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:00:45.827Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:00:45.827Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for nectar-net\\n[2023-04-30T02:00:45.827Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:00:45.827Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for neo-net\\n[2023-04-30T02:00:45.827Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for phantasy\\n[2023-04-30T02:00:45.827Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for max-hardware\\n[2023-04-30T02:00:45.827Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:00:45.827Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for zer0\\n[2023-04-30T02:00:45.827Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for iron-gym\\n[2023-04-30T02:00:45.827Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:00:45.827Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for silver-helix\\n[2023-04-30T02:00:45.827Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for omega-net\\n[2023-04-30T02:00:45.827Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:00:45.827Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for the-hub\\n[2023-04-30T02:00:45.827Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for crush-fitness\\n[2023-04-30T02:00:45.827Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:00:45.827Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for johnson-ortho\\n[2023-04-30T02:00:45.827Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for rothman-uni\\n[2023-04-30T02:00:45.827Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for computek\\n[2023-04-30T02:00:45.827Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:00:45.827Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for rho-construction\\n[2023-04-30T02:00:45.827Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for alpha-ent\\n[2023-04-30T02:00:45.827Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:00:45.827Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for millenium-fitness\\n[2023-04-30T02:00:45.827Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for summit-uni\\n[2023-04-30T02:00:45.827Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:00:45.827Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for snap-fitness\\n[2023-04-30T02:00:45.827Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for catalyst\\n[2023-04-30T02:00:45.827Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] ==============================\\n[2023-04-30T02:10:45.829Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:10:45.829Z] ==============================\\n[2023-04-30T02:10:45.829Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:10:45.829Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for n00dles\\n[2023-04-30T02:10:45.829Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for foodnstuff\\n[2023-04-30T02:10:45.829Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:10:45.829Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:10:45.829Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for joesguns\\n[2023-04-30T02:10:45.829Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:10:45.829Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:10:45.829Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for nectar-net\\n[2023-04-30T02:10:45.829Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:10:45.829Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for neo-net\\n[2023-04-30T02:10:45.830Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for phantasy\\n[2023-04-30T02:10:45.830Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for max-hardware\\n[2023-04-30T02:10:45.830Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:10:45.830Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for zer0\\n[2023-04-30T02:10:45.830Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for iron-gym\\n[2023-04-30T02:10:45.830Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:10:45.830Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for silver-helix\\n[2023-04-30T02:10:45.830Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for omega-net\\n[2023-04-30T02:10:45.830Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:10:45.830Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for the-hub\\n[2023-04-30T02:10:45.830Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for crush-fitness\\n[2023-04-30T02:10:45.830Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:10:45.830Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for johnson-ortho\\n[2023-04-30T02:10:45.831Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for rothman-uni\\n[2023-04-30T02:10:45.831Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for computek\\n[2023-04-30T02:10:45.831Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:10:45.831Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for rho-construction\\n[2023-04-30T02:10:45.831Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for alpha-ent\\n[2023-04-30T02:10:45.831Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:10:45.831Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for millenium-fitness\\n[2023-04-30T02:10:45.831Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for summit-uni\\n[2023-04-30T02:10:45.831Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:10:45.831Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for snap-fitness\\n[2023-04-30T02:10:45.831Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for catalyst\\n[2023-04-30T02:10:45.831Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] ==============================\\n[2023-04-30T02:20:45.845Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:20:45.845Z] ==============================\\n[2023-04-30T02:20:45.845Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:20:45.845Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for n00dles\\n[2023-04-30T02:20:45.845Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for foodnstuff\\n[2023-04-30T02:20:45.845Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:20:45.845Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:20:45.845Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for joesguns\\n[2023-04-30T02:20:45.845Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:20:45.845Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:20:45.845Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for nectar-net\\n[2023-04-30T02:20:45.845Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:20:45.845Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for neo-net\\n[2023-04-30T02:20:45.845Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for phantasy\\n[2023-04-30T02:20:45.845Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for max-hardware\\n[2023-04-30T02:20:45.845Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:20:45.846Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for zer0\\n[2023-04-30T02:20:45.846Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for iron-gym\\n[2023-04-30T02:20:45.846Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:20:45.846Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for silver-helix\\n[2023-04-30T02:20:45.846Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for omega-net\\n[2023-04-30T02:20:45.846Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:20:45.846Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for the-hub\\n[2023-04-30T02:20:45.846Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for crush-fitness\\n[2023-04-30T02:20:45.846Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:20:45.846Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for johnson-ortho\\n[2023-04-30T02:20:45.846Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for rothman-uni\\n[2023-04-30T02:20:45.846Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for computek\\n[2023-04-30T02:20:45.846Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:20:45.846Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for rho-construction\\n[2023-04-30T02:20:45.846Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for alpha-ent\\n[2023-04-30T02:20:45.846Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:20:45.846Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for millenium-fitness\\n[2023-04-30T02:20:45.846Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for summit-uni\\n[2023-04-30T02:20:45.846Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:20:45.846Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for snap-fitness\\n[2023-04-30T02:20:45.846Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for catalyst\\n[2023-04-30T02:20:45.846Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] ==============================\\n[2023-04-30T02:30:45.852Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:30:45.852Z] ==============================\\n[2023-04-30T02:30:45.852Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:30:45.852Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for n00dles\\n[2023-04-30T02:30:45.852Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for foodnstuff\\n[2023-04-30T02:30:45.852Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:30:45.852Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:30:45.852Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for joesguns\\n[2023-04-30T02:30:45.852Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:30:45.852Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:30:45.852Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for nectar-net\\n[2023-04-30T02:30:45.852Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:30:45.852Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for neo-net\\n[2023-04-30T02:30:45.852Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for phantasy\\n[2023-04-30T02:30:45.852Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for max-hardware\\n[2023-04-30T02:30:45.852Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:30:45.852Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for zer0\\n[2023-04-30T02:30:45.852Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for iron-gym\\n[2023-04-30T02:30:45.852Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:30:45.852Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for silver-helix\\n[2023-04-30T02:30:45.852Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for omega-net\\n[2023-04-30T02:30:45.852Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:30:45.852Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for the-hub\\n[2023-04-30T02:30:45.852Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for crush-fitness\\n[2023-04-30T02:30:45.852Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:30:45.852Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for johnson-ortho\\n[2023-04-30T02:30:45.852Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for rothman-uni\\n[2023-04-30T02:30:45.852Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for computek\\n[2023-04-30T02:30:45.852Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:30:45.852Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for rho-construction\\n[2023-04-30T02:30:45.852Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for alpha-ent\\n[2023-04-30T02:30:45.852Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:30:45.852Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for millenium-fitness\\n[2023-04-30T02:30:45.852Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for summit-uni\\n[2023-04-30T02:30:45.852Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:30:45.852Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for snap-fitness\\n[2023-04-30T02:30:45.852Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for catalyst\\n[2023-04-30T02:30:45.852Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.855Z] ==============================\\n[2023-04-30T02:40:45.855Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:40:45.855Z] ==============================\\n[2023-04-30T02:40:45.855Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:40:45.855Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.855Z] Starting threads for n00dles\\n[2023-04-30T02:40:45.855Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.855Z] Starting threads for foodnstuff\\n[2023-04-30T02:40:45.856Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:40:45.856Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:40:45.856Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for joesguns\\n[2023-04-30T02:40:45.856Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:40:45.856Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:40:45.856Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for nectar-net\\n[2023-04-30T02:40:45.856Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:40:45.856Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for neo-net\\n[2023-04-30T02:40:45.856Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for phantasy\\n[2023-04-30T02:40:45.856Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for max-hardware\\n[2023-04-30T02:40:45.856Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:40:45.856Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for zer0\\n[2023-04-30T02:40:45.856Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for iron-gym\\n[2023-04-30T02:40:45.857Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:40:45.857Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for silver-helix\\n[2023-04-30T02:40:45.857Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for omega-net\\n[2023-04-30T02:40:45.857Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:40:45.857Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for the-hub\\n[2023-04-30T02:40:45.857Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for crush-fitness\\n[2023-04-30T02:40:45.857Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:40:45.857Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for johnson-ortho\\n[2023-04-30T02:40:45.857Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for rothman-uni\\n[2023-04-30T02:40:45.857Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for computek\\n[2023-04-30T02:40:45.857Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:40:45.857Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for rho-construction\\n[2023-04-30T02:40:45.857Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for alpha-ent\\n[2023-04-30T02:40:45.857Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:40:45.857Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for millenium-fitness\\n[2023-04-30T02:40:45.858Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for summit-uni\\n[2023-04-30T02:40:45.858Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:40:45.858Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for snap-fitness\\n[2023-04-30T02:40:45.858Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for catalyst\\n[2023-04-30T02:40:45.858Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] ==============================\\n[2023-04-30T02:50:45.864Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:50:45.864Z] ==============================\\n[2023-04-30T02:50:45.864Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:50:45.864Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for n00dles\\n[2023-04-30T02:50:45.864Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for foodnstuff\\n[2023-04-30T02:50:45.864Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:50:45.864Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:50:45.864Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for joesguns\\n[2023-04-30T02:50:45.864Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:50:45.864Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:50:45.864Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for nectar-net\\n[2023-04-30T02:50:45.864Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:50:45.864Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for neo-net\\n[2023-04-30T02:50:45.864Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for phantasy\\n[2023-04-30T02:50:45.864Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for max-hardware\\n[2023-04-30T02:50:45.864Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:50:45.864Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for zer0\\n[2023-04-30T02:50:45.864Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for iron-gym\\n[2023-04-30T02:50:45.864Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:50:45.864Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for silver-helix\\n[2023-04-30T02:50:45.864Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for omega-net\\n[2023-04-30T02:50:45.864Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:50:45.864Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for the-hub\\n[2023-04-30T02:50:45.864Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for crush-fitness\\n[2023-04-30T02:50:45.864Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:50:45.864Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for johnson-ortho\\n[2023-04-30T02:50:45.864Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for rothman-uni\\n[2023-04-30T02:50:45.864Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for computek\\n[2023-04-30T02:50:45.864Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:50:45.865Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for rho-construction\\n[2023-04-30T02:50:45.865Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for alpha-ent\\n[2023-04-30T02:50:45.865Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:50:45.865Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for millenium-fitness\\n[2023-04-30T02:50:45.865Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for summit-uni\\n[2023-04-30T02:50:45.865Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:50:45.865Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for snap-fitness\\n[2023-04-30T02:50:45.865Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for catalyst\\n[2023-04-30T02:50:45.865Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.874Z] ==============================\\n[2023-04-30T03:00:45.874Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:00:45.874Z] ==============================\\n[2023-04-30T03:00:45.874Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:00:45.874Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.874Z] Starting threads for n00dles\\n[2023-04-30T03:00:45.874Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.874Z] Starting threads for foodnstuff\\n[2023-04-30T03:00:45.874Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:00:45.875Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:00:45.875Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for joesguns\\n[2023-04-30T03:00:45.875Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:00:45.875Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:00:45.875Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for nectar-net\\n[2023-04-30T03:00:45.875Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:00:45.875Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for neo-net\\n[2023-04-30T03:00:45.875Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for phantasy\\n[2023-04-30T03:00:45.875Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for max-hardware\\n[2023-04-30T03:00:45.875Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:00:45.875Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for zer0\\n[2023-04-30T03:00:45.875Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for iron-gym\\n[2023-04-30T03:00:45.875Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:00:45.875Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for silver-helix\\n[2023-04-30T03:00:45.875Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for omega-net\\n[2023-04-30T03:00:45.875Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:00:45.875Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for the-hub\\n[2023-04-30T03:00:45.875Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for crush-fitness\\n[2023-04-30T03:00:45.875Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:00:45.875Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for johnson-ortho\\n[2023-04-30T03:00:45.875Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for rothman-uni\\n[2023-04-30T03:00:45.875Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for computek\\n[2023-04-30T03:00:45.875Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:00:45.875Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for rho-construction\\n[2023-04-30T03:00:45.875Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for alpha-ent\\n[2023-04-30T03:00:45.875Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:00:45.875Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for millenium-fitness\\n[2023-04-30T03:00:45.875Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for summit-uni\\n[2023-04-30T03:00:45.875Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:00:45.875Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for snap-fitness\\n[2023-04-30T03:00:45.875Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for catalyst\\n[2023-04-30T03:00:45.875Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] ==============================\\n[2023-04-30T03:10:45.876Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:10:45.876Z] ==============================\\n[2023-04-30T03:10:45.876Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:10:45.876Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for n00dles\\n[2023-04-30T03:10:45.876Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for foodnstuff\\n[2023-04-30T03:10:45.876Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:10:45.876Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:10:45.876Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for joesguns\\n[2023-04-30T03:10:45.876Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:10:45.876Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:10:45.876Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for nectar-net\\n[2023-04-30T03:10:45.877Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:10:45.877Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for neo-net\\n[2023-04-30T03:10:45.877Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for phantasy\\n[2023-04-30T03:10:45.877Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for max-hardware\\n[2023-04-30T03:10:45.877Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:10:45.877Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for zer0\\n[2023-04-30T03:10:45.877Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for iron-gym\\n[2023-04-30T03:10:45.877Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:10:45.877Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for silver-helix\\n[2023-04-30T03:10:45.877Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for omega-net\\n[2023-04-30T03:10:45.877Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:10:45.877Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for the-hub\\n[2023-04-30T03:10:45.877Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for crush-fitness\\n[2023-04-30T03:10:45.877Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:10:45.877Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for johnson-ortho\\n[2023-04-30T03:10:45.877Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for rothman-uni\\n[2023-04-30T03:10:45.877Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for computek\\n[2023-04-30T03:10:45.877Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:10:45.877Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for rho-construction\\n[2023-04-30T03:10:45.877Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for alpha-ent\\n[2023-04-30T03:10:45.877Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:10:45.877Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for millenium-fitness\\n[2023-04-30T03:10:45.877Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for summit-uni\\n[2023-04-30T03:10:45.877Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:10:45.877Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for snap-fitness\\n[2023-04-30T03:10:45.877Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for catalyst\\n[2023-04-30T03:10:45.877Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] ==============================\\n[2023-04-30T03:20:45.887Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:20:45.887Z] ==============================\\n[2023-04-30T03:20:45.887Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:20:45.887Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for n00dles\\n[2023-04-30T03:20:45.887Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for foodnstuff\\n[2023-04-30T03:20:45.887Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:20:45.887Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:20:45.887Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for joesguns\\n[2023-04-30T03:20:45.887Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:20:45.887Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:20:45.887Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for nectar-net\\n[2023-04-30T03:20:45.887Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:20:45.887Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for neo-net\\n[2023-04-30T03:20:45.887Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for phantasy\\n[2023-04-30T03:20:45.887Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for max-hardware\\n[2023-04-30T03:20:45.887Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:20:45.887Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for zer0\\n[2023-04-30T03:20:45.888Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for iron-gym\\n[2023-04-30T03:20:45.888Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:20:45.888Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for silver-helix\\n[2023-04-30T03:20:45.888Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for omega-net\\n[2023-04-30T03:20:45.888Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:20:45.888Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for the-hub\\n[2023-04-30T03:20:45.888Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for crush-fitness\\n[2023-04-30T03:20:45.888Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:20:45.888Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for johnson-ortho\\n[2023-04-30T03:20:45.888Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for rothman-uni\\n[2023-04-30T03:20:45.888Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for computek\\n[2023-04-30T03:20:45.888Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:20:45.888Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for rho-construction\\n[2023-04-30T03:20:45.888Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for alpha-ent\\n[2023-04-30T03:20:45.888Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:20:45.888Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for millenium-fitness\\n[2023-04-30T03:20:45.888Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for summit-uni\\n[2023-04-30T03:20:45.888Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:20:45.888Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for snap-fitness\\n[2023-04-30T03:20:45.888Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for catalyst\\n[2023-04-30T03:20:45.888Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] ==============================\\n[2023-04-30T03:30:45.893Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:30:45.893Z] ==============================\\n[2023-04-30T03:30:45.893Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:30:45.893Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for n00dles\\n[2023-04-30T03:30:45.893Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for foodnstuff\\n[2023-04-30T03:30:45.893Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:30:45.893Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:30:45.893Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for joesguns\\n[2023-04-30T03:30:45.893Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:30:45.893Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:30:45.893Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for nectar-net\\n[2023-04-30T03:30:45.893Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:30:45.893Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for neo-net\\n[2023-04-30T03:30:45.893Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for phantasy\\n[2023-04-30T03:30:45.893Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for max-hardware\\n[2023-04-30T03:30:45.893Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:30:45.893Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for zer0\\n[2023-04-30T03:30:45.893Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for iron-gym\\n[2023-04-30T03:30:45.893Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:30:45.893Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for silver-helix\\n[2023-04-30T03:30:45.893Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for omega-net\\n[2023-04-30T03:30:45.893Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:30:45.893Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for the-hub\\n[2023-04-30T03:30:45.894Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for crush-fitness\\n[2023-04-30T03:30:45.894Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:30:45.894Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for johnson-ortho\\n[2023-04-30T03:30:45.894Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for rothman-uni\\n[2023-04-30T03:30:45.894Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for computek\\n[2023-04-30T03:30:45.894Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:30:45.894Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for rho-construction\\n[2023-04-30T03:30:45.894Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for alpha-ent\\n[2023-04-30T03:30:45.894Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:30:45.894Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for millenium-fitness\\n[2023-04-30T03:30:45.894Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for summit-uni\\n[2023-04-30T03:30:45.894Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:30:45.894Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for snap-fitness\\n[2023-04-30T03:30:45.894Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for catalyst\\n[2023-04-30T03:30:45.894Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] ==============================\\n[2023-04-30T03:40:45.896Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:40:45.896Z] ==============================\\n[2023-04-30T03:40:45.896Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:40:45.896Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for n00dles\\n[2023-04-30T03:40:45.896Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for foodnstuff\\n[2023-04-30T03:40:45.896Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:40:45.896Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:40:45.896Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for joesguns\\n[2023-04-30T03:40:45.896Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:40:45.896Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:40:45.896Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for nectar-net\\n[2023-04-30T03:40:45.896Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:40:45.896Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for neo-net\\n[2023-04-30T03:40:45.897Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for phantasy\\n[2023-04-30T03:40:45.897Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for max-hardware\\n[2023-04-30T03:40:45.897Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:40:45.897Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for zer0\\n[2023-04-30T03:40:45.897Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for iron-gym\\n[2023-04-30T03:40:45.897Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:40:45.897Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for silver-helix\\n[2023-04-30T03:40:45.897Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for omega-net\\n[2023-04-30T03:40:45.898Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:40:45.898Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for the-hub\\n[2023-04-30T03:40:45.898Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for crush-fitness\\n[2023-04-30T03:40:45.898Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:40:45.898Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for johnson-ortho\\n[2023-04-30T03:40:45.898Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for rothman-uni\\n[2023-04-30T03:40:45.898Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for computek\\n[2023-04-30T03:40:45.898Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:40:45.898Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for rho-construction\\n[2023-04-30T03:40:45.898Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for alpha-ent\\n[2023-04-30T03:40:45.898Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:40:45.898Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for millenium-fitness\\n[2023-04-30T03:40:45.898Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for summit-uni\\n[2023-04-30T03:40:45.898Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:40:45.899Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:40:45.899Z] Starting threads for snap-fitness\\n[2023-04-30T03:40:45.899Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.899Z] Starting threads for catalyst\\n[2023-04-30T03:40:45.899Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.426Z] ==============================\\n[2023-04-30T03:50:46.426Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:50:46.426Z] ==============================\\n[2023-04-30T03:50:46.426Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:50:46.426Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.436Z] Starting threads for n00dles\\n[2023-04-30T03:50:46.436Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.445Z] Starting threads for foodnstuff\\n[2023-04-30T03:50:46.445Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:50:46.455Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:50:46.466Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:50:46.466Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.475Z] Starting threads for joesguns\\n[2023-04-30T03:50:46.475Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:50:46.485Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:50:46.495Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:50:46.495Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.506Z] Starting threads for nectar-net\\n[2023-04-30T03:50:46.506Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:50:46.515Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:50:46.525Z] Starting threads for neo-net\\n[2023-04-30T03:50:46.525Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.537Z] Starting threads for phantasy\\n[2023-04-30T03:50:46.537Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.547Z] Starting threads for max-hardware\\n[2023-04-30T03:50:46.547Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:50:46.557Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:50:46.567Z] Starting threads for zer0\\n[2023-04-30T03:50:46.567Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.579Z] Starting threads for iron-gym\\n[2023-04-30T03:50:46.579Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:50:46.590Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:50:46.600Z] Starting threads for silver-helix\\n[2023-04-30T03:50:46.600Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.612Z] Starting threads for omega-net\\n[2023-04-30T03:50:46.612Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:50:46.623Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:50:46.634Z] Starting threads for the-hub\\n[2023-04-30T03:50:46.634Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.646Z] Starting threads for crush-fitness\\n[2023-04-30T03:50:46.646Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:50:46.657Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:50:46.668Z] Starting threads for johnson-ortho\\n[2023-04-30T03:50:46.668Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.681Z] Starting threads for rothman-uni\\n[2023-04-30T03:50:46.681Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.692Z] Starting threads for computek\\n[2023-04-30T03:50:46.692Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:50:46.703Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:50:46.717Z] Starting threads for rho-construction\\n[2023-04-30T03:50:46.717Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.728Z] Starting threads for alpha-ent\\n[2023-04-30T03:50:46.728Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:50:46.740Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:50:46.753Z] Starting threads for millenium-fitness\\n[2023-04-30T03:50:46.753Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.765Z] Starting threads for summit-uni\\n[2023-04-30T03:50:46.765Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:50:46.776Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:50:46.790Z] Starting threads for snap-fitness\\n[2023-04-30T03:50:46.790Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.802Z] Starting threads for catalyst\\n[2023-04-30T03:50:46.802Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] ==============================\\n[2023-04-30T04:00:46.822Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T04:00:46.822Z] ==============================\\n[2023-04-30T04:00:46.822Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:00:46.822Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for n00dles\\n[2023-04-30T04:00:46.822Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for foodnstuff\\n[2023-04-30T04:00:46.822Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T04:00:46.822Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:00:46.822Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for joesguns\\n[2023-04-30T04:00:46.822Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T04:00:46.822Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:00:46.822Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for nectar-net\\n[2023-04-30T04:00:46.822Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T04:00:46.822Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for neo-net\\n[2023-04-30T04:00:46.822Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for phantasy\\n[2023-04-30T04:00:46.822Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for max-hardware\\n[2023-04-30T04:00:46.822Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T04:00:46.822Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for zer0\\n[2023-04-30T04:00:46.822Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for iron-gym\\n[2023-04-30T04:00:46.822Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T04:00:46.822Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for silver-helix\\n[2023-04-30T04:00:46.822Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for omega-net\\n[2023-04-30T04:00:46.822Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T04:00:46.822Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for the-hub\\n[2023-04-30T04:00:46.822Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for crush-fitness\\n[2023-04-30T04:00:46.822Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T04:00:46.822Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for johnson-ortho\\n[2023-04-30T04:00:46.822Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for rothman-uni\\n[2023-04-30T04:00:46.822Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for computek\\n[2023-04-30T04:00:46.822Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T04:00:46.822Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for rho-construction\\n[2023-04-30T04:00:46.823Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for alpha-ent\\n[2023-04-30T04:00:46.823Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T04:00:46.823Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for millenium-fitness\\n[2023-04-30T04:00:46.823Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for summit-uni\\n[2023-04-30T04:00:46.823Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T04:00:46.823Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for snap-fitness\\n[2023-04-30T04:00:46.823Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for catalyst\\n[2023-04-30T04:00:46.823Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] ==============================\\n[2023-04-30T04:10:46.823Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T04:10:46.823Z] ==============================\\n[2023-04-30T04:10:46.823Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:10:46.823Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for n00dles\\n[2023-04-30T04:10:46.823Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for foodnstuff\\n[2023-04-30T04:10:46.823Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T04:10:46.823Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:10:46.823Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for joesguns\\n[2023-04-30T04:10:46.823Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T04:10:46.823Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:10:46.823Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for nectar-net\\n[2023-04-30T04:10:46.823Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T04:10:46.823Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for neo-net\\n[2023-04-30T04:10:46.823Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for phantasy\\n[2023-04-30T04:10:46.824Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for max-hardware\\n[2023-04-30T04:10:46.824Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T04:10:46.824Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for zer0\\n[2023-04-30T04:10:46.824Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for iron-gym\\n[2023-04-30T04:10:46.824Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T04:10:46.824Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for silver-helix\\n[2023-04-30T04:10:46.824Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for omega-net\\n[2023-04-30T04:10:46.824Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T04:10:46.824Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for the-hub\\n[2023-04-30T04:10:46.824Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for crush-fitness\\n[2023-04-30T04:10:46.824Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T04:10:46.824Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for johnson-ortho\\n[2023-04-30T04:10:46.824Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for rothman-uni\\n[2023-04-30T04:10:46.824Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for computek\\n[2023-04-30T04:10:46.824Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T04:10:46.824Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for rho-construction\\n[2023-04-30T04:10:46.824Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for alpha-ent\\n[2023-04-30T04:10:46.824Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T04:10:46.824Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for millenium-fitness\\n[2023-04-30T04:10:46.824Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for summit-uni\\n[2023-04-30T04:10:46.824Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T04:10:46.824Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for snap-fitness\\n[2023-04-30T04:10:46.824Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for catalyst\\n[2023-04-30T04:10:46.824Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:20:47.855Z] ==============================\\n[2023-04-30T04:20:47.855Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T04:20:47.855Z] ==============================\\n[2023-04-30T04:20:47.855Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:20:47.855Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.875Z] Starting threads for n00dles\\n[2023-04-30T04:20:47.875Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.895Z] Starting threads for foodnstuff\\n[2023-04-30T04:20:47.895Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.914Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:20:47.914Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.935Z] Starting threads for joesguns\\n[2023-04-30T04:20:47.935Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.954Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:20:47.954Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.975Z] Starting threads for nectar-net\\n[2023-04-30T04:20:47.975Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.994Z] Starting threads for neo-net\\n[2023-04-30T04:20:47.994Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.015Z] Starting threads for phantasy\\n[2023-04-30T04:20:48.015Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.036Z] Starting threads for max-hardware\\n[2023-04-30T04:20:48.036Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.055Z] Starting threads for zer0\\n[2023-04-30T04:20:48.055Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.077Z] Starting threads for iron-gym\\n[2023-04-30T04:20:48.077Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.097Z] Starting threads for silver-helix\\n[2023-04-30T04:20:48.097Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.117Z] Starting threads for omega-net\\n[2023-04-30T04:20:48.117Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.136Z] Starting threads for the-hub\\n[2023-04-30T04:20:48.136Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.157Z] Starting threads for crush-fitness\\n[2023-04-30T04:20:48.157Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.176Z] Starting threads for johnson-ortho\\n[2023-04-30T04:20:48.176Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.196Z] Starting threads for rothman-uni\\n[2023-04-30T04:20:48.196Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.216Z] Starting threads for computek\\n[2023-04-30T04:20:48.216Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.237Z] Starting threads for rho-construction\\n[2023-04-30T04:20:48.237Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.259Z] Starting threads for alpha-ent\\n[2023-04-30T04:20:48.259Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.279Z] Starting threads for millenium-fitness\\n[2023-04-30T04:20:48.279Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.301Z] Starting threads for summit-uni\\n[2023-04-30T04:20:48.301Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.322Z] Starting threads for snap-fitness\\n[2023-04-30T04:20:48.322Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.343Z] Starting threads for catalyst\\n[2023-04-30T04:20:48.343Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.357Z] ==============================\\n[2023-04-30T20:44:09.357Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T20:44:09.357Z] ==============================\\n[2023-04-30T20:44:09.358Z] Starting threads for harakiri-sushi\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for n00dles\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for foodnstuff\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for sigma-cosmetics\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for joesguns\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for hong-fang-tea\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for nectar-net\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for neo-net\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for phantasy\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for max-hardware\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for zer0\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for iron-gym\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for silver-helix\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for omega-net\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for the-hub\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for crush-fitness\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for johnson-ortho\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for rothman-uni\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for computek\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for rho-construction\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for alpha-ent\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for millenium-fitness\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for summit-uni\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for snap-fitness\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for catalyst\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.361Z] ==============================\\n[2023-04-30T20:54:09.361Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T20:54:09.361Z] ==============================\\n[2023-04-30T20:54:09.361Z] Starting threads for harakiri-sushi\\n[2023-04-30T20:54:09.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.361Z] Starting threads for n00dles\\n[2023-04-30T20:54:09.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for foodnstuff\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for sigma-cosmetics\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for joesguns\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for hong-fang-tea\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for nectar-net\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for neo-net\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for phantasy\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for max-hardware\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for zer0\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for iron-gym\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for silver-helix\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for omega-net\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for the-hub\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for crush-fitness\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for johnson-ortho\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for rothman-uni\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for computek\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for rho-construction\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for alpha-ent\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for millenium-fitness\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for summit-uni\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for snap-fitness\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for catalyst\\n[2023-04-30T20:54:09.363Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] ==============================\\n[2023-04-30T21:04:09.364Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:04:09.364Z] ==============================\\n[2023-04-30T21:04:09.364Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for n00dles\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for foodnstuff\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for joesguns\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for nectar-net\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for neo-net\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for phantasy\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for max-hardware\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for zer0\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for iron-gym\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for silver-helix\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for omega-net\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for the-hub\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for crush-fitness\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for johnson-ortho\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for rothman-uni\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for computek\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for rho-construction\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for alpha-ent\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for millenium-fitness\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for summit-uni\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for snap-fitness\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for catalyst\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.365Z] ==============================\\n[2023-04-30T21:14:09.365Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:14:09.365Z] ==============================\\n[2023-04-30T21:14:09.365Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:14:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for n00dles\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for foodnstuff\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for joesguns\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for nectar-net\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for neo-net\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for phantasy\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for max-hardware\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for zer0\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for iron-gym\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for silver-helix\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for omega-net\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for the-hub\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for crush-fitness\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for johnson-ortho\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for rothman-uni\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for computek\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for rho-construction\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for alpha-ent\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for millenium-fitness\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for summit-uni\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for snap-fitness\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for catalyst\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] ==============================\\n[2023-04-30T21:24:09.368Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:24:09.368Z] ==============================\\n[2023-04-30T21:24:09.368Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for n00dles\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for foodnstuff\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for joesguns\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for nectar-net\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for neo-net\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for phantasy\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for max-hardware\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for zer0\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for iron-gym\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for silver-helix\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for omega-net\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for the-hub\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for crush-fitness\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for johnson-ortho\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for rothman-uni\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for computek\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for rho-construction\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for alpha-ent\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for millenium-fitness\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for summit-uni\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for snap-fitness\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for catalyst\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] ==============================\\n[2023-04-30T21:34:09.370Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:34:09.370Z] ==============================\\n[2023-04-30T21:34:09.370Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for n00dles\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for foodnstuff\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for joesguns\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for nectar-net\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for neo-net\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for phantasy\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for max-hardware\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for zer0\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for iron-gym\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for silver-helix\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for omega-net\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for the-hub\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for crush-fitness\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for johnson-ortho\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for rothman-uni\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for computek\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for rho-construction\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for alpha-ent\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for millenium-fitness\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for summit-uni\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for snap-fitness\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for catalyst\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"/logs/hack.orchestrator.service.log.txt\",\"text\":\"[2023-04-29T13:22:25.765Z] ==============================\\n[2023-04-29T13:22:25.765Z] Starting to hack 20 servers with a max of 10333 threads each\\n[2023-04-29T13:22:25.765Z] ==============================\\n[2023-04-29T13:22:25.765Z] Starting threads for n00dles\\n[2023-04-29T13:22:25.765Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for foodnstuff\\n[2023-04-29T13:22:25.766Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:22:25.766Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:22:25.766Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:22:25.766Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for joesguns\\n[2023-04-29T13:22:25.766Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:22:25.766Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:22:25.766Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:22:25.766Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:22:25.766Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for nectar-net\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for max-hardware\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for neo-net\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for zer0\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for iron-gym\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for phantasy\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for omega-net\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for crush-fitness\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for the-hub\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for rothman-uni\\n[2023-04-29T13:22:25.766Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:22:25.766Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for johnson-ortho\\n[2023-04-29T13:22:25.766Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:22:25.766Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for rho-construction\\n[2023-04-29T13:22:25.766Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for computek\\n[2023-04-29T13:22:25.767Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:22:25.767Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:22:25.767Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:22:25.767Z] Starting threads for millenium-fitness\\n[2023-04-29T13:22:25.767Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:22:25.767Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] ==============================\\n[2023-04-29T13:26:57.049Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:26:57.049Z] ==============================\\n[2023-04-29T13:26:57.049Z] Starting threads for n00dles\\n[2023-04-29T13:26:57.049Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for foodnstuff\\n[2023-04-29T13:26:57.049Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:26:57.049Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:26:57.049Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:26:57.049Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for joesguns\\n[2023-04-29T13:26:57.049Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:26:57.049Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:26:57.049Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:26:57.049Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:26:57.050Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for nectar-net\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for max-hardware\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for neo-net\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for zer0\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for iron-gym\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for phantasy\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for omega-net\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for crush-fitness\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for the-hub\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for rothman-uni\\n[2023-04-29T13:26:57.050Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:26:57.050Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for johnson-ortho\\n[2023-04-29T13:26:57.050Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:26:57.050Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for rho-construction\\n[2023-04-29T13:26:57.050Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for computek\\n[2023-04-29T13:26:57.050Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:26:57.050Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:26:57.050Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for millenium-fitness\\n[2023-04-29T13:26:57.050Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:26:57.050Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] ==============================\\n[2023-04-29T13:27:32.389Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:27:32.389Z] ==============================\\n[2023-04-29T13:27:32.389Z] Starting threads for n00dles\\n[2023-04-29T13:27:32.389Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for foodnstuff\\n[2023-04-29T13:27:32.389Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:27:32.389Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:27:32.389Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:27:32.389Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for joesguns\\n[2023-04-29T13:27:32.389Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:27:32.389Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:27:32.389Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:27:32.389Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:27:32.390Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for nectar-net\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for max-hardware\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for neo-net\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for zer0\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for iron-gym\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for phantasy\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for omega-net\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for crush-fitness\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for the-hub\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for rothman-uni\\n[2023-04-29T13:27:32.390Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:27:32.390Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for johnson-ortho\\n[2023-04-29T13:27:32.390Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:27:32.390Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for rho-construction\\n[2023-04-29T13:27:32.390Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for computek\\n[2023-04-29T13:27:32.390Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:27:32.390Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:27:32.390Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for millenium-fitness\\n[2023-04-29T13:27:32.390Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:27:32.390Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:42:32.411Z] ==============================\\n[2023-04-29T13:42:32.411Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:42:32.411Z] ==============================\\n[2023-04-29T13:42:32.411Z] Starting threads for n00dles\\n[2023-04-29T13:42:32.411Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for foodnstuff\\n[2023-04-29T13:42:32.412Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:42:32.412Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:42:32.412Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:42:32.412Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for joesguns\\n[2023-04-29T13:42:32.412Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:42:32.412Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:42:32.412Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:42:32.412Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:42:32.412Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for nectar-net\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for max-hardware\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for neo-net\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for zer0\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for iron-gym\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for phantasy\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for omega-net\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for crush-fitness\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for the-hub\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for rothman-uni\\n[2023-04-29T13:42:32.413Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:42:32.413Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for johnson-ortho\\n[2023-04-29T13:42:32.413Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:42:32.413Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for rho-construction\\n[2023-04-29T13:42:32.413Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for computek\\n[2023-04-29T13:42:32.413Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:42:32.413Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:42:32.413Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for millenium-fitness\\n[2023-04-29T13:42:32.413Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:42:32.413Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:57:32.422Z] ==============================\\n[2023-04-29T13:57:32.422Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:57:32.422Z] ==============================\\n[2023-04-29T13:57:32.422Z] Starting threads for n00dles\\n[2023-04-29T13:57:32.422Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for foodnstuff\\n[2023-04-29T13:57:32.423Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:57:32.423Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:57:32.423Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:57:32.423Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for joesguns\\n[2023-04-29T13:57:32.423Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:57:32.423Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:57:32.423Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:57:32.423Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:57:32.423Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for nectar-net\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for max-hardware\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for neo-net\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for zer0\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for iron-gym\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for phantasy\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for omega-net\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for crush-fitness\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for the-hub\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for rothman-uni\\n[2023-04-29T13:57:32.423Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:57:32.423Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for johnson-ortho\\n[2023-04-29T13:57:32.423Z] Server netlink has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for rho-construction\\n[2023-04-29T13:57:32.423Z] Server netlink does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-29T13:57:32.423Z] Server rothman-uni has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for computek\\n[2023-04-29T13:57:32.423Z] Server rothman-uni does not have capacity for all threads. Starting 25.Threads left: 5\\n[2023-04-29T13:57:32.423Z] Server catalyst has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for millenium-fitness\\n[2023-04-29T13:57:32.423Z] Server catalyst does not have capacity for all threads. Starting 8.Threads left: 22\\n[2023-04-29T13:57:32.423Z] Server rho-construction does not have capacity for all threads. Starting 13.Threads left: 9\\n[2023-04-29T13:57:32.423Z] Server alpha-ent has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] ==============================\\n[2023-04-29T14:12:32.429Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T14:12:32.429Z] ==============================\\n[2023-04-29T14:12:32.429Z] Starting threads for n00dles\\n[2023-04-29T14:12:32.429Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for foodnstuff\\n[2023-04-29T14:12:32.429Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:12:32.429Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:12:32.429Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:12:32.429Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for joesguns\\n[2023-04-29T14:12:32.429Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:12:32.429Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T14:12:32.429Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:12:32.429Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:12:32.429Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for nectar-net\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for max-hardware\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for neo-net\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for zer0\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for iron-gym\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for phantasy\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for omega-net\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for crush-fitness\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for the-hub\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for rothman-uni\\n[2023-04-29T14:12:32.430Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:12:32.430Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for johnson-ortho\\n[2023-04-29T14:12:32.430Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T14:12:32.430Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for rho-construction\\n[2023-04-29T14:12:32.430Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for computek\\n[2023-04-29T14:12:32.430Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T14:12:32.430Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T14:12:32.430Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for millenium-fitness\\n[2023-04-29T14:12:32.430Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T14:12:32.430Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] ==============================\\n[2023-04-29T14:27:32.436Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T14:27:32.436Z] ==============================\\n[2023-04-29T14:27:32.436Z] Starting threads for n00dles\\n[2023-04-29T14:27:32.436Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for foodnstuff\\n[2023-04-29T14:27:32.436Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:27:32.436Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:27:32.436Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:27:32.436Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for joesguns\\n[2023-04-29T14:27:32.436Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:27:32.436Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T14:27:32.436Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:27:32.436Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:27:32.436Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for nectar-net\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for max-hardware\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for neo-net\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for zer0\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for iron-gym\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for phantasy\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for omega-net\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for crush-fitness\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for the-hub\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for rothman-uni\\n[2023-04-29T14:27:32.436Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:27:32.436Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for johnson-ortho\\n[2023-04-29T14:27:32.436Z] Server netlink has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for rho-construction\\n[2023-04-29T14:27:32.436Z] Server netlink does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-29T14:27:32.436Z] Server rothman-uni has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for computek\\n[2023-04-29T14:27:32.436Z] Server rothman-uni does not have capacity for all threads. Starting 25.Threads left: 5\\n[2023-04-29T14:27:32.436Z] Server catalyst has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for millenium-fitness\\n[2023-04-29T14:27:32.436Z] Server catalyst does not have capacity for all threads. Starting 8.Threads left: 22\\n[2023-04-29T14:27:32.436Z] Server rho-construction does not have capacity for all threads. Starting 13.Threads left: 9\\n[2023-04-29T14:27:32.436Z] Server alpha-ent has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] ==============================\\n[2023-04-29T14:42:32.442Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T14:42:32.442Z] ==============================\\n[2023-04-29T14:42:32.442Z] Starting threads for n00dles\\n[2023-04-29T14:42:32.442Z] Server n00dles does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:42:32.442Z] Server max-hardware has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for foodnstuff\\n[2023-04-29T14:42:32.442Z] Server max-hardware does not have capacity for all threads. Starting 4.Threads left: 6\\n[2023-04-29T14:42:32.442Z] Server foodnstuff has capacity for all threads. Starting 6.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:42:32.442Z] No more threads possible on server 2 - foodnstuff\\n[2023-04-29T14:42:32.442Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for joesguns\\n[2023-04-29T14:42:32.442Z] Server zer0 does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:42:32.442Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:42:32.442Z] Server neo-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:42:32.442Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:42:32.442Z] Server neo-net does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for nectar-net\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for max-hardware\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for neo-net\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for zer0\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for iron-gym\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for phantasy\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for omega-net\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for crush-fitness\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for the-hub\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for rothman-uni\\n[2023-04-29T14:42:32.442Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:42:32.442Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for johnson-ortho\\n[2023-04-29T14:42:32.442Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T14:42:32.442Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for rho-construction\\n[2023-04-29T14:42:32.442Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for computek\\n[2023-04-29T14:42:32.442Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T14:42:32.442Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T14:42:32.442Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for millenium-fitness\\n[2023-04-29T14:42:32.442Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T14:42:32.442Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] ==============================\\n[2023-04-29T14:49:19.583Z] Starting to hack 21 servers with a max of 89 threads each\\n[2023-04-29T14:49:19.583Z] ==============================\\n[2023-04-29T14:49:19.583Z] Starting threads for n00dles\\n[2023-04-29T14:49:19.583Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for foodnstuff\\n[2023-04-29T14:49:19.583Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:49:19.583Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:49:19.583Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:49:19.583Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for joesguns\\n[2023-04-29T14:49:19.583Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:49:19.583Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T14:49:19.583Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:49:19.583Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:49:19.583Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for nectar-net\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for max-hardware\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for neo-net\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for zer0\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for iron-gym\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for phantasy\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for omega-net\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for crush-fitness\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for the-hub\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for rothman-uni\\n[2023-04-29T14:49:19.583Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:49:19.584Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for johnson-ortho\\n[2023-04-29T14:49:19.584Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T14:49:19.584Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for rho-construction\\n[2023-04-29T14:49:19.584Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for computek\\n[2023-04-29T14:49:19.584Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T14:49:19.584Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T14:49:19.584Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for millenium-fitness\\n[2023-04-29T14:49:19.584Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T14:49:19.584Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for silver-helix\\n[2023-04-29T14:49:19.584Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T14:49:19.584Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] ==============================\\n[2023-04-29T15:19:19.593Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T15:19:19.593Z] ==============================\\n[2023-04-29T15:19:19.593Z] Starting threads for n00dles\\n[2023-04-29T15:19:19.593Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] Starting threads for foodnstuff\\n[2023-04-29T15:19:19.593Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T15:19:19.593Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T15:19:19.593Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:19:19.593Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] Starting threads for joesguns\\n[2023-04-29T15:19:19.593Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T15:19:19.593Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T15:19:19.594Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:19:19.594Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:19:19.594Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for nectar-net\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for max-hardware\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for neo-net\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for zer0\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for iron-gym\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for phantasy\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for omega-net\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for crush-fitness\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for the-hub\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for rothman-uni\\n[2023-04-29T15:19:19.594Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T15:19:19.594Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for johnson-ortho\\n[2023-04-29T15:19:19.594Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T15:19:19.594Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for rho-construction\\n[2023-04-29T15:19:19.594Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for computek\\n[2023-04-29T15:19:19.594Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T15:19:19.594Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T15:19:19.594Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for millenium-fitness\\n[2023-04-29T15:19:19.594Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T15:19:19.594Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for silver-helix\\n[2023-04-29T15:19:19.594Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T15:19:19.594Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for summit-uni\\n[2023-04-29T15:19:19.594Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 12 - aerocorp\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 13 - galactic-cyber\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 14 - deltaone\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 15 - defcomm\\n[2023-04-29T15:19:19.594Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 17 - infocomm\\n[2023-04-29T15:19:19.594Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] ==============================\\n[2023-04-29T15:49:19.613Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T15:49:19.613Z] ==============================\\n[2023-04-29T15:49:19.613Z] Starting threads for n00dles\\n[2023-04-29T15:49:19.613Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T15:49:19.613Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for foodnstuff\\n[2023-04-29T15:49:19.613Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T15:49:19.613Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:49:19.613Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T15:49:19.613Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for joesguns\\n[2023-04-29T15:49:19.613Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for nectar-net\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for max-hardware\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for neo-net\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for zer0\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for iron-gym\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for phantasy\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for omega-net\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for crush-fitness\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for the-hub\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for rothman-uni\\n[2023-04-29T15:49:19.614Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T15:49:19.614Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for johnson-ortho\\n[2023-04-29T15:49:19.614Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T15:49:19.614Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for rho-construction\\n[2023-04-29T15:49:19.614Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for computek\\n[2023-04-29T15:49:19.614Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T15:49:19.614Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T15:49:19.614Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for millenium-fitness\\n[2023-04-29T15:49:19.614Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T15:49:19.614Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for silver-helix\\n[2023-04-29T15:49:19.614Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T15:49:19.614Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for summit-uni\\n[2023-04-29T15:49:19.614Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T15:49:19.614Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T15:49:19.614Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:19:19.622Z] ==============================\\n[2023-04-29T16:19:19.622Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T16:19:19.622Z] ==============================\\n[2023-04-29T16:19:19.622Z] Starting threads for n00dles\\n[2023-04-29T16:19:19.622Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T16:19:19.622Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:19:19.622Z] Starting threads for foodnstuff\\n[2023-04-29T16:19:19.622Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T16:19:19.623Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:19:19.623Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T16:19:19.623Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for joesguns\\n[2023-04-29T16:19:19.623Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for nectar-net\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for max-hardware\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for neo-net\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for zer0\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for iron-gym\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for phantasy\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for omega-net\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for crush-fitness\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for the-hub\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for rothman-uni\\n[2023-04-29T16:19:19.623Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T16:19:19.623Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for johnson-ortho\\n[2023-04-29T16:19:19.623Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T16:19:19.623Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for rho-construction\\n[2023-04-29T16:19:19.623Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for computek\\n[2023-04-29T16:19:19.623Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T16:19:19.623Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T16:19:19.623Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for millenium-fitness\\n[2023-04-29T16:19:19.623Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T16:19:19.623Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for silver-helix\\n[2023-04-29T16:19:19.623Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T16:19:19.623Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for summit-uni\\n[2023-04-29T16:19:19.623Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T16:19:19.623Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T16:19:19.623Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:49:19.634Z] ==============================\\n[2023-04-29T16:49:19.634Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T16:49:19.634Z] ==============================\\n[2023-04-29T16:49:19.634Z] Starting threads for n00dles\\n[2023-04-29T16:49:19.635Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T16:49:19.635Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for foodnstuff\\n[2023-04-29T16:49:19.635Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T16:49:19.635Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:49:19.635Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T16:49:19.635Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for joesguns\\n[2023-04-29T16:49:19.635Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for nectar-net\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for max-hardware\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for neo-net\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for zer0\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for iron-gym\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for phantasy\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for omega-net\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for crush-fitness\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for the-hub\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for rothman-uni\\n[2023-04-29T16:49:19.635Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T16:49:19.635Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for johnson-ortho\\n[2023-04-29T16:49:19.635Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T16:49:19.635Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for rho-construction\\n[2023-04-29T16:49:19.635Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for computek\\n[2023-04-29T16:49:19.635Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T16:49:19.635Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T16:49:19.635Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for millenium-fitness\\n[2023-04-29T16:49:19.635Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T16:49:19.635Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for silver-helix\\n[2023-04-29T16:49:19.635Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T16:49:19.635Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for summit-uni\\n[2023-04-29T16:49:19.635Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T16:49:19.635Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T16:49:19.635Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:19:19.641Z] ==============================\\n[2023-04-29T17:19:19.641Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T17:19:19.641Z] ==============================\\n[2023-04-29T17:19:19.641Z] Starting threads for n00dles\\n[2023-04-29T17:19:19.641Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T17:19:19.642Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for foodnstuff\\n[2023-04-29T17:19:19.642Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T17:19:19.642Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:19:19.642Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T17:19:19.642Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for joesguns\\n[2023-04-29T17:19:19.642Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for nectar-net\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for max-hardware\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for neo-net\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for zer0\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for iron-gym\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for phantasy\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for omega-net\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for crush-fitness\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for the-hub\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for rothman-uni\\n[2023-04-29T17:19:19.642Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T17:19:19.642Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for johnson-ortho\\n[2023-04-29T17:19:19.642Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T17:19:19.642Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for rho-construction\\n[2023-04-29T17:19:19.642Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for computek\\n[2023-04-29T17:19:19.642Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T17:19:19.642Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T17:19:19.642Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for millenium-fitness\\n[2023-04-29T17:19:19.642Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T17:19:19.642Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for silver-helix\\n[2023-04-29T17:19:19.642Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T17:19:19.642Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for summit-uni\\n[2023-04-29T17:19:19.642Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T17:19:19.642Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T17:19:19.642Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] ==============================\\n[2023-04-29T17:49:19.643Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T17:49:19.643Z] ==============================\\n[2023-04-29T17:49:19.643Z] Starting threads for n00dles\\n[2023-04-29T17:49:19.643Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T17:49:19.643Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] Starting threads for foodnstuff\\n[2023-04-29T17:49:19.643Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T17:49:19.643Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:49:19.643Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T17:49:19.643Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] Starting threads for joesguns\\n[2023-04-29T17:49:19.643Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T17:49:19.643Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for nectar-net\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for max-hardware\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for neo-net\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for zer0\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for iron-gym\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for phantasy\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for omega-net\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for crush-fitness\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for the-hub\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for rothman-uni\\n[2023-04-29T17:49:19.644Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T17:49:19.644Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for johnson-ortho\\n[2023-04-29T17:49:19.644Z] Server netlink has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for rho-construction\\n[2023-04-29T17:49:19.644Z] Server netlink does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-29T17:49:19.644Z] Server rothman-uni has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for computek\\n[2023-04-29T17:49:19.644Z] Server rothman-uni does not have capacity for all threads. Starting 25.Threads left: 5\\n[2023-04-29T17:49:19.644Z] Server catalyst has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for millenium-fitness\\n[2023-04-29T17:49:19.644Z] Server catalyst does not have capacity for all threads. Starting 8.Threads left: 22\\n[2023-04-29T17:49:19.644Z] Server rho-construction does not have capacity for all threads. Starting 13.Threads left: 9\\n[2023-04-29T17:49:19.644Z] Server alpha-ent has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for silver-helix\\n[2023-04-29T17:49:19.644Z] Server alpha-ent has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for summit-uni\\n[2023-04-29T17:49:19.644Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 23\\n[2023-04-29T17:49:19.644Z] Server aevum-police has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] ==============================\\n[2023-04-29T18:42:43.451Z] Starting to hack 6 servers with a max of 134 threads each\\n[2023-04-29T18:42:43.451Z] ==============================\\n[2023-04-29T18:42:43.451Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:42:43.451Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for n00dles\\n[2023-04-29T18:42:43.451Z] Server zer0 does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T18:42:43.451Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T18:42:43.451Z] Server neo-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for foodnstuff\\n[2023-04-29T18:42:43.451Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:42:43.451Z] Server neo-net does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T18:42:43.451Z] Server netlink has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for joesguns\\n[2023-04-29T18:42:43.451Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:42:43.451Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] ==============================\\n[2023-04-29T18:55:06.017Z] Starting to hack 8 servers with a max of 100 threads each\\n[2023-04-29T18:55:06.017Z] ==============================\\n[2023-04-29T18:55:06.017Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:55:06.017Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for n00dles\\n[2023-04-29T18:55:06.017Z] Server zer0 does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T18:55:06.017Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T18:55:06.017Z] Server neo-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for foodnstuff\\n[2023-04-29T18:55:06.017Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:55:06.017Z] Server neo-net does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for joesguns\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for nectar-net\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for neo-net\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.378Z] ==============================\\n[2023-04-29T19:06:58.378Z] Starting to hack 11 servers with a max of 72 threads each\\n[2023-04-29T19:06:58.378Z] ==============================\\n[2023-04-29T19:06:58.378Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:06:58.378Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.390Z] Starting threads for n00dles\\n[2023-04-29T19:06:58.390Z] Server neo-net does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T19:06:58.402Z] Server netlink has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T19:06:58.414Z] Starting threads for foodnstuff\\n[2023-04-29T19:06:58.414Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.429Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:06:58.429Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.440Z] Starting threads for joesguns\\n[2023-04-29T19:06:58.440Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.451Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:06:58.451Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.465Z] Starting threads for nectar-net\\n[2023-04-29T19:06:58.465Z] Server netlink does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T19:06:58.476Z] No more threads possible on server 2 - johnson-ortho\\n[2023-04-29T19:06:58.476Z] Server silver-helix has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T19:06:58.488Z] Starting threads for neo-net\\n[2023-04-29T19:06:58.488Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.502Z] Starting threads for phantasy\\n[2023-04-29T19:06:58.502Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.513Z] Starting threads for max-hardware\\n[2023-04-29T19:06:58.513Z] Server silver-helix does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T19:06:58.525Z] Server phantasy has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T19:06:58.539Z] Starting threads for zer0\\n[2023-04-29T19:06:58.539Z] Server phantasy does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T19:06:58.551Z] Server the-hub has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] ==============================\\n[2023-04-29T19:10:44.417Z] Starting to hack 11 servers with a max of 73 threads each\\n[2023-04-29T19:10:44.417Z] ==============================\\n[2023-04-29T19:10:44.417Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for n00dles\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for foodnstuff\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for joesguns\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:10:44.417Z] Server netlink does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 1 - johnson-ortho\\n[2023-04-29T19:10:44.417Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for nectar-net\\n[2023-04-29T19:10:44.417Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for neo-net\\n[2023-04-29T19:10:44.417Z] Server silver-helix does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T19:10:44.417Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for phantasy\\n[2023-04-29T19:10:44.417Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for max-hardware\\n[2023-04-29T19:10:44.417Z] Server phantasy does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T19:10:44.417Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 5 - syscore\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 6 - computek\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T19:10:44.417Z] Server avmnite-02h has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for zer0\\n[2023-04-29T19:10:44.417Z] Server avmnite-02h has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] ==============================\\n[2023-04-29T19:40:44.433Z] Starting to hack 12 servers with a max of 136 threads each\\n[2023-04-29T19:40:44.433Z] ==============================\\n[2023-04-29T19:40:44.433Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:40:44.433Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for n00dles\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for foodnstuff\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for joesguns\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for nectar-net\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for neo-net\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for phantasy\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for max-hardware\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for zer0\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for iron-gym\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] ==============================\\n[2023-04-29T20:10:44.440Z] Starting to hack 16 servers with a max of 102 threads each\\n[2023-04-29T20:10:44.440Z] ==============================\\n[2023-04-29T20:10:44.440Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:10:44.440Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for n00dles\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for foodnstuff\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for joesguns\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for nectar-net\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for neo-net\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for phantasy\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for max-hardware\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for zer0\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for iron-gym\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for silver-helix\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for omega-net\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.441Z] Starting threads for the-hub\\n[2023-04-29T20:10:44.441Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.441Z] Starting threads for crush-fitness\\n[2023-04-29T20:10:44.441Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] ==============================\\n[2023-04-29T20:40:44.448Z] Starting to hack 17 servers with a max of 96 threads each\\n[2023-04-29T20:40:44.448Z] ==============================\\n[2023-04-29T20:40:44.448Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:40:44.448Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for n00dles\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for foodnstuff\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for joesguns\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for nectar-net\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for neo-net\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for phantasy\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for max-hardware\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for zer0\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for iron-gym\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for silver-helix\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for omega-net\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for the-hub\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for crush-fitness\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for johnson-ortho\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] ==============================\\n[2023-04-29T21:10:44.455Z] Starting to hack 19 servers with a max of 86 threads each\\n[2023-04-29T21:10:44.455Z] ==============================\\n[2023-04-29T21:10:44.455Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:10:44.455Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T21:10:44.455Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] Starting threads for n00dles\\n[2023-04-29T21:10:44.455Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] Starting threads for foodnstuff\\n[2023-04-29T21:10:44.455Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for joesguns\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for nectar-net\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for neo-net\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for phantasy\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for max-hardware\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for zer0\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for iron-gym\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for silver-helix\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for omega-net\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for the-hub\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for crush-fitness\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for johnson-ortho\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for rothman-uni\\n[2023-04-29T21:10:44.456Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T21:10:44.456Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for computek\\n[2023-04-29T21:10:44.456Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T21:10:44.456Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] ==============================\\n[2023-04-29T21:40:44.464Z] Starting to hack 20 servers with a max of 81 threads each\\n[2023-04-29T21:40:44.464Z] ==============================\\n[2023-04-29T21:40:44.464Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for n00dles\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for foodnstuff\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for joesguns\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for nectar-net\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for neo-net\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for phantasy\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for max-hardware\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for zer0\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for iron-gym\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for silver-helix\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for omega-net\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for the-hub\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for crush-fitness\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for johnson-ortho\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for rothman-uni\\n[2023-04-29T21:40:44.464Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T21:40:44.464Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for computek\\n[2023-04-29T21:40:44.464Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T21:40:44.464Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for rho-construction\\n[2023-04-29T21:40:44.464Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T21:40:44.464Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 5 - syscore\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 6 - computek\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T21:40:44.464Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] ==============================\\n[2023-04-29T22:10:44.471Z] Starting to hack 20 servers with a max of 81 threads each\\n[2023-04-29T22:10:44.471Z] ==============================\\n[2023-04-29T22:10:44.471Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:10:44.471Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for n00dles\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for foodnstuff\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for joesguns\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for nectar-net\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for neo-net\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for phantasy\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for max-hardware\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for zer0\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for iron-gym\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for silver-helix\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for omega-net\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for the-hub\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for crush-fitness\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for johnson-ortho\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for rothman-uni\\n[2023-04-29T22:10:44.472Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T22:10:44.472Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for computek\\n[2023-04-29T22:10:44.472Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T22:10:44.472Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for rho-construction\\n[2023-04-29T22:10:44.472Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T22:10:44.472Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T22:10:44.472Z] No more threads possible on server 5 - syscore\\n[2023-04-29T22:10:44.472Z] No more threads possible on server 6 - computek\\n[2023-04-29T22:10:44.472Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T22:10:44.472Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] ==============================\\n[2023-04-29T22:40:44.477Z] Starting to hack 21 servers with a max of 78 threads each\\n[2023-04-29T22:40:44.477Z] ==============================\\n[2023-04-29T22:40:44.477Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:40:44.477Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for n00dles\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for foodnstuff\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for joesguns\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for nectar-net\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for neo-net\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for phantasy\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for max-hardware\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for zer0\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for iron-gym\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for silver-helix\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for omega-net\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for the-hub\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for crush-fitness\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for johnson-ortho\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for rothman-uni\\n[2023-04-29T22:40:44.478Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T22:40:44.478Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for computek\\n[2023-04-29T22:40:44.478Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T22:40:44.478Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for rho-construction\\n[2023-04-29T22:40:44.478Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T22:40:44.478Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T22:40:44.478Z] No more threads possible on server 5 - syscore\\n[2023-04-29T22:40:44.478Z] No more threads possible on server 6 - computek\\n[2023-04-29T22:40:44.478Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T22:40:44.478Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for alpha-ent\\n[2023-04-29T22:40:44.478Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-29T22:40:44.478Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-29T22:40:44.478Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T23:10:44.486Z] ==============================\\n[2023-04-29T23:10:44.486Z] Starting to hack 22 servers with a max of 74 threads each\\n[2023-04-29T23:10:44.486Z] ==============================\\n[2023-04-29T23:10:44.486Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:10:44.486Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T23:10:44.486Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.486Z] Starting threads for n00dles\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for foodnstuff\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for joesguns\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for nectar-net\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for neo-net\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for phantasy\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for max-hardware\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for zer0\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for iron-gym\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for silver-helix\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for omega-net\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for the-hub\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for crush-fitness\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for johnson-ortho\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for rothman-uni\\n[2023-04-29T23:10:44.487Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T23:10:44.487Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for computek\\n[2023-04-29T23:10:44.487Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T23:10:44.487Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for rho-construction\\n[2023-04-29T23:10:44.487Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T23:10:44.487Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T23:10:44.487Z] No more threads possible on server 5 - syscore\\n[2023-04-29T23:10:44.487Z] No more threads possible on server 6 - computek\\n[2023-04-29T23:10:44.487Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T23:10:44.487Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for alpha-ent\\n[2023-04-29T23:10:44.487Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-29T23:10:44.487Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-29T23:10:44.487Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for millenium-fitness\\n[2023-04-29T23:10:44.487Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-29T23:10:44.487Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T23:40:44.495Z] ==============================\\n[2023-04-29T23:40:44.495Z] Starting to hack 23 servers with a max of 71 threads each\\n[2023-04-29T23:40:44.495Z] ==============================\\n[2023-04-29T23:40:44.495Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:40:44.495Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T23:40:44.495Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for n00dles\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for foodnstuff\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for joesguns\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for nectar-net\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for neo-net\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for phantasy\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for max-hardware\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for zer0\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for iron-gym\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for silver-helix\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for omega-net\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for the-hub\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for crush-fitness\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for johnson-ortho\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for rothman-uni\\n[2023-04-29T23:40:44.496Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T23:40:44.496Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for computek\\n[2023-04-29T23:40:44.496Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T23:40:44.496Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for rho-construction\\n[2023-04-29T23:40:44.496Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T23:40:44.496Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T23:40:44.496Z] No more threads possible on server 5 - syscore\\n[2023-04-29T23:40:44.496Z] No more threads possible on server 6 - computek\\n[2023-04-29T23:40:44.496Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T23:40:44.496Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for alpha-ent\\n[2023-04-29T23:40:44.496Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-29T23:40:44.496Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-29T23:40:44.496Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for millenium-fitness\\n[2023-04-29T23:40:44.496Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-29T23:40:44.496Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for summit-uni\\n[2023-04-29T23:40:44.496Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T23:40:44.496Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] ==============================\\n[2023-04-30T00:10:44.515Z] Starting to hack 24 servers with a max of 68 threads each\\n[2023-04-30T00:10:44.515Z] ==============================\\n[2023-04-30T00:10:44.515Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for n00dles\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for foodnstuff\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for joesguns\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for nectar-net\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for neo-net\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for phantasy\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for max-hardware\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for zer0\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for iron-gym\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for silver-helix\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for omega-net\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for the-hub\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for crush-fitness\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for johnson-ortho\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for rothman-uni\\n[2023-04-30T00:10:44.515Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T00:10:44.515Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for computek\\n[2023-04-30T00:10:44.515Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T00:10:44.515Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for rho-construction\\n[2023-04-30T00:10:44.515Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T00:10:44.515Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 5 - syscore\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 6 - computek\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T00:10:44.515Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for alpha-ent\\n[2023-04-30T00:10:44.515Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T00:10:44.515Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T00:10:44.515Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for millenium-fitness\\n[2023-04-30T00:10:44.515Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T00:10:44.515Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for summit-uni\\n[2023-04-30T00:10:44.515Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T00:10:44.515Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for snap-fitness\\n[2023-04-30T00:10:44.515Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T00:10:44.516Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T00:10:44.516Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T00:10:44.516Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] ==============================\\n[2023-04-30T00:40:44.526Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T00:40:44.526Z] ==============================\\n[2023-04-30T00:40:44.526Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for n00dles\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for foodnstuff\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for joesguns\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for nectar-net\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for neo-net\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for phantasy\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for max-hardware\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for zer0\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for iron-gym\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for silver-helix\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for omega-net\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for the-hub\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for crush-fitness\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for johnson-ortho\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for rothman-uni\\n[2023-04-30T00:40:44.526Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T00:40:44.526Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for computek\\n[2023-04-30T00:40:44.526Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T00:40:44.526Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for rho-construction\\n[2023-04-30T00:40:44.526Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T00:40:44.526Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 5 - syscore\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 6 - computek\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T00:40:44.526Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for alpha-ent\\n[2023-04-30T00:40:44.526Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T00:40:44.526Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T00:40:44.526Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for millenium-fitness\\n[2023-04-30T00:40:44.526Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T00:40:44.526Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for summit-uni\\n[2023-04-30T00:40:44.526Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T00:40:44.526Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for snap-fitness\\n[2023-04-30T00:40:44.526Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T00:40:44.526Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T00:40:44.526Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for catalyst\\n[2023-04-30T00:40:44.526Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T00:40:44.526Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] ==============================\\n[2023-04-30T01:10:44.534Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T01:10:44.534Z] ==============================\\n[2023-04-30T01:10:44.534Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for n00dles\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for foodnstuff\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for joesguns\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for nectar-net\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for neo-net\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for phantasy\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for max-hardware\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for zer0\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for iron-gym\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for silver-helix\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for omega-net\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for the-hub\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for crush-fitness\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for johnson-ortho\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for rothman-uni\\n[2023-04-30T01:10:44.534Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T01:10:44.534Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for computek\\n[2023-04-30T01:10:44.534Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T01:10:44.534Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for rho-construction\\n[2023-04-30T01:10:44.534Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T01:10:44.534Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 5 - syscore\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 6 - computek\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T01:10:44.534Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for alpha-ent\\n[2023-04-30T01:10:44.534Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T01:10:44.534Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T01:10:44.534Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for millenium-fitness\\n[2023-04-30T01:10:44.534Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T01:10:44.534Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for summit-uni\\n[2023-04-30T01:10:44.534Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T01:10:44.534Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for snap-fitness\\n[2023-04-30T01:10:44.534Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T01:10:44.534Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T01:10:44.534Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for catalyst\\n[2023-04-30T01:10:44.534Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T01:10:44.535Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] ==============================\\n[2023-04-30T01:40:44.540Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T01:40:44.540Z] ==============================\\n[2023-04-30T01:40:44.540Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for n00dles\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for foodnstuff\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for joesguns\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for nectar-net\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for neo-net\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for phantasy\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for max-hardware\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for zer0\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for iron-gym\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for silver-helix\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for omega-net\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for the-hub\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for crush-fitness\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for johnson-ortho\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for rothman-uni\\n[2023-04-30T01:40:44.540Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T01:40:44.540Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for computek\\n[2023-04-30T01:40:44.540Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T01:40:44.540Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for rho-construction\\n[2023-04-30T01:40:44.540Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T01:40:44.540Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 5 - syscore\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 6 - computek\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T01:40:44.540Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for alpha-ent\\n[2023-04-30T01:40:44.540Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T01:40:44.540Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T01:40:44.540Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for millenium-fitness\\n[2023-04-30T01:40:44.540Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T01:40:44.540Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for summit-uni\\n[2023-04-30T01:40:44.540Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T01:40:44.540Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for snap-fitness\\n[2023-04-30T01:40:44.540Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T01:40:44.540Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T01:40:44.540Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for catalyst\\n[2023-04-30T01:40:44.540Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T01:40:44.540Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T02:10:44.546Z] ==============================\\n[2023-04-30T02:10:44.547Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T02:10:44.547Z] ==============================\\n[2023-04-30T02:10:44.547Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for n00dles\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for foodnstuff\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for joesguns\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for nectar-net\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for neo-net\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for phantasy\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for max-hardware\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for zer0\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for iron-gym\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for silver-helix\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for omega-net\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for the-hub\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for crush-fitness\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for johnson-ortho\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for rothman-uni\\n[2023-04-30T02:10:44.547Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T02:10:44.547Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for computek\\n[2023-04-30T02:10:44.547Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T02:10:44.547Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for rho-construction\\n[2023-04-30T02:10:44.547Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T02:10:44.547Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 5 - syscore\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 6 - computek\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T02:10:44.547Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for alpha-ent\\n[2023-04-30T02:10:44.547Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T02:10:44.547Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T02:10:44.547Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for millenium-fitness\\n[2023-04-30T02:10:44.547Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T02:10:44.547Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for summit-uni\\n[2023-04-30T02:10:44.547Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T02:10:44.547Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for snap-fitness\\n[2023-04-30T02:10:44.547Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T02:10:44.547Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T02:10:44.547Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for catalyst\\n[2023-04-30T02:10:44.547Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T02:10:44.547Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] ==============================\\n[2023-04-30T02:40:44.557Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T02:40:44.557Z] ==============================\\n[2023-04-30T02:40:44.557Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for n00dles\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for foodnstuff\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for joesguns\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for nectar-net\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for neo-net\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for phantasy\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for max-hardware\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for zer0\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for iron-gym\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for silver-helix\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for omega-net\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for the-hub\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for crush-fitness\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for johnson-ortho\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for rothman-uni\\n[2023-04-30T02:40:44.557Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T02:40:44.557Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for computek\\n[2023-04-30T02:40:44.557Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T02:40:44.557Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for rho-construction\\n[2023-04-30T02:40:44.557Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T02:40:44.557Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 5 - syscore\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 6 - computek\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T02:40:44.557Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for alpha-ent\\n[2023-04-30T02:40:44.557Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T02:40:44.557Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T02:40:44.557Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for millenium-fitness\\n[2023-04-30T02:40:44.557Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T02:40:44.557Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for summit-uni\\n[2023-04-30T02:40:44.557Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T02:40:44.557Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for snap-fitness\\n[2023-04-30T02:40:44.557Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T02:40:44.557Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T02:40:44.557Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for catalyst\\n[2023-04-30T02:40:44.557Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T02:40:44.557Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] ==============================\\n[2023-04-30T03:10:44.567Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T03:10:44.567Z] ==============================\\n[2023-04-30T03:10:44.567Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:10:44.567Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for n00dles\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for foodnstuff\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for joesguns\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for nectar-net\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for neo-net\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for phantasy\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for max-hardware\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for zer0\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for iron-gym\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for silver-helix\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for omega-net\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for the-hub\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for crush-fitness\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for johnson-ortho\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for rothman-uni\\n[2023-04-30T03:10:44.567Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T03:10:44.567Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for computek\\n[2023-04-30T03:10:44.567Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T03:10:44.567Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for rho-construction\\n[2023-04-30T03:10:44.567Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T03:10:44.567Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T03:10:44.567Z] No more threads possible on server 5 - syscore\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 6 - computek\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T03:10:44.568Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for alpha-ent\\n[2023-04-30T03:10:44.568Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T03:10:44.568Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T03:10:44.568Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for millenium-fitness\\n[2023-04-30T03:10:44.568Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T03:10:44.568Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for summit-uni\\n[2023-04-30T03:10:44.568Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T03:10:44.568Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for snap-fitness\\n[2023-04-30T03:10:44.568Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T03:10:44.568Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T03:10:44.568Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for catalyst\\n[2023-04-30T03:10:44.568Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T03:10:44.568Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] ==============================\\n[2023-04-30T03:40:44.574Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T03:40:44.574Z] ==============================\\n[2023-04-30T03:40:44.574Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for n00dles\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for foodnstuff\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for joesguns\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for nectar-net\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for neo-net\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for phantasy\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for max-hardware\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for zer0\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for iron-gym\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for silver-helix\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for omega-net\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for the-hub\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for crush-fitness\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for johnson-ortho\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for rothman-uni\\n[2023-04-30T03:40:44.574Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T03:40:44.574Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for computek\\n[2023-04-30T03:40:44.574Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T03:40:44.574Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for rho-construction\\n[2023-04-30T03:40:44.574Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T03:40:44.574Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 5 - syscore\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 6 - computek\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T03:40:44.574Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for alpha-ent\\n[2023-04-30T03:40:44.574Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T03:40:44.574Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T03:40:44.574Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for millenium-fitness\\n[2023-04-30T03:40:44.574Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T03:40:44.574Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for summit-uni\\n[2023-04-30T03:40:44.574Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T03:40:44.574Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for snap-fitness\\n[2023-04-30T03:40:44.574Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T03:40:44.574Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T03:40:44.574Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T03:40:44.575Z] Starting threads for catalyst\\n[2023-04-30T03:40:44.575Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 16\\n[2023-04-30T03:40:44.575Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T03:40:44.575Z] Server lexo-corp has capacity for all threads. Starting 16.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] ==============================\\n[2023-04-30T04:10:44.580Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T04:10:44.580Z] ==============================\\n[2023-04-30T04:10:44.580Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:10:44.580Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for n00dles\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for foodnstuff\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for joesguns\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for nectar-net\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for neo-net\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for phantasy\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for max-hardware\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for zer0\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for iron-gym\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for silver-helix\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for omega-net\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for the-hub\\n[2023-04-30T04:10:44.581Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for crush-fitness\\n[2023-04-30T04:10:44.581Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for johnson-ortho\\n[2023-04-30T04:10:44.581Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for rothman-uni\\n[2023-04-30T04:10:44.581Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T04:10:44.581Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for computek\\n[2023-04-30T04:10:44.581Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T04:10:44.581Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for rho-construction\\n[2023-04-30T04:10:44.581Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T04:10:44.581Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 5 - syscore\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 6 - computek\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T04:10:44.581Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for alpha-ent\\n[2023-04-30T04:10:44.581Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T04:10:44.581Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T04:10:44.581Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for millenium-fitness\\n[2023-04-30T04:10:44.581Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T04:10:44.581Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for summit-uni\\n[2023-04-30T04:10:44.581Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T04:10:44.581Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for snap-fitness\\n[2023-04-30T04:10:44.581Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T04:10:44.581Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T04:10:44.581Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for catalyst\\n[2023-04-30T04:10:44.581Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 16\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T04:10:44.581Z] Server lexo-corp has capacity for all threads. Starting 16.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] ==============================\\n[2023-04-30T20:44:09.366Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T20:44:09.366Z] ==============================\\n[2023-04-30T20:44:09.366Z] Starting threads for harakiri-sushi\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for n00dles\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for foodnstuff\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for sigma-cosmetics\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for joesguns\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for hong-fang-tea\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for nectar-net\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for neo-net\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for phantasy\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for max-hardware\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for zer0\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for iron-gym\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for silver-helix\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for omega-net\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for the-hub\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for crush-fitness\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for johnson-ortho\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for rothman-uni\\n[2023-04-30T20:44:09.367Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for computek\\n[2023-04-30T20:44:09.367Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T20:44:09.367Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for rho-construction\\n[2023-04-30T20:44:09.367Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T20:44:09.367Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for alpha-ent\\n[2023-04-30T20:44:09.367Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T20:44:09.367Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 4 - syscore\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 5 - computek\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 6 - crush-fitness\\n[2023-04-30T20:44:09.367Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for millenium-fitness\\n[2023-04-30T20:44:09.367Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T20:44:09.367Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T20:44:09.367Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for summit-uni\\n[2023-04-30T20:44:09.367Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 17\\n[2023-04-30T20:44:09.367Z] Server I.I.I.I has capacity for all threads. Starting 17.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for snap-fitness\\n[2023-04-30T20:44:09.367Z] Server I.I.I.I has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for catalyst\\n[2023-04-30T20:44:09.367Z] Server I.I.I.I does not have capacity for all threads. Starting 6.Threads left: 24\\n[2023-04-30T20:44:09.367Z] Server rho-construction does not have capacity for all threads. Starting 6.Threads left: 18\\n[2023-04-30T20:44:09.367Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 13 - galactic-cyber\\n[2023-04-30T20:44:09.367Z] Server global-pharm has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] ==============================\\n[2023-04-30T21:14:09.368Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T21:14:09.368Z] ==============================\\n[2023-04-30T21:14:09.368Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for n00dles\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for foodnstuff\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for joesguns\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for nectar-net\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for neo-net\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for phantasy\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for max-hardware\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for zer0\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for iron-gym\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for silver-helix\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for omega-net\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for the-hub\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for crush-fitness\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for johnson-ortho\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for rothman-uni\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for computek\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for rho-construction\\n[2023-04-30T21:14:09.368Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T21:14:09.368Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for alpha-ent\\n[2023-04-30T21:14:09.368Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T21:14:09.368Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for millenium-fitness\\n[2023-04-30T21:14:09.368Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 8\\n[2023-04-30T21:14:09.368Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-30T21:14:09.368Z] No more threads possible on server 4 - syscore\\n[2023-04-30T21:14:09.368Z] No more threads possible on server 5 - computek\\n[2023-04-30T21:14:09.368Z] No more threads possible on server 6 - crush-fitness\\n[2023-04-30T21:14:09.368Z] Server avmnite-02h has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for summit-uni\\n[2023-04-30T21:14:09.368Z] Server avmnite-02h does not have capacity for all threads. Starting 11.Threads left: 9\\n[2023-04-30T21:14:09.368Z] Server summit-uni has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for snap-fitness\\n[2023-04-30T21:14:09.368Z] Server summit-uni does not have capacity for all threads. Starting 17.Threads left: 13\\n[2023-04-30T21:14:09.368Z] Server catalyst does not have capacity for all threads. Starting 6.Threads left: 7\\n[2023-04-30T21:14:09.368Z] Server I.I.I.I has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for catalyst\\n[2023-04-30T21:14:09.368Z] Server I.I.I.I has capacity for all threads. Starting 20.ThreadsLeft: 0\\n\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"harakiri-sushi\\\",\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"28.6.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":48947904093,\"moneyMax\":1223697602325,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1400,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"49.0.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":49257333078,\"moneyMax\":1231433326950,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1131,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"87.3.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\",\"ecorp\",\"megacorp\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":25645905777,\"moneyMax\":641147644425,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1031,\"serverGrowth\":63}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"12.8.8.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":20112509792,\"moneyMax\":502812744800,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1153,\"serverGrowth\":78}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"26.9.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":39228006395,\"moneyMax\":980700159875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1013,\"serverGrowth\":69}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"14.5.6.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":47,\"hackDifficulty\":47,\"minDifficulty\":16,\"moneyAvailable\":16103641263,\"moneyMax\":402591031575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1009,\"serverGrowth\":61}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"70.2.6.3\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":18083903300,\"moneyMax\":452097582500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1067,\"serverGrowth\":97}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"93.0.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":23921618059,\"moneyMax\":598040451475,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":935,\"serverGrowth\":80}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"18.1.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":22563426762,\"moneyMax\":564085669050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1094,\"serverGrowth\":96}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"88.2.6.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":1462789543,\"moneyMax\":36569738575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1125,\"serverGrowth\":84}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"38.5.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1498,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-832789.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[163,55,174,148,10,156,159,158,22,17,141,55,163,136,4,32,92,69],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"19.9.3.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1183696288,\"moneyMax\":29592407200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1051,\"serverGrowth\":71}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"60.7.5.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":901051889,\"moneyMax\":22526297225,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":873,\"serverGrowth\":68}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"13.9.7.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\",\"microdyne\",\"applied-energetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":771285603,\"moneyMax\":19282140075,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":942,\"serverGrowth\":49}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"29.9.7.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":727457624,\"moneyMax\":18186440600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":820,\"serverGrowth\":71}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"18.3.7.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":792780836,\"moneyMax\":19819520900,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":876,\"serverGrowth\":77}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-642549-BitRunners.cct\",\"type\":\"Encryption I: Caesar Cipher\",\"data\":[\"PRINT MODEM MACRO INBOX DEBUG\",25],\"reward\":{\"name\":\"BitRunners\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"17.9.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":963454752,\"moneyMax\":24086368800,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":882,\"serverGrowth\":93}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-937551.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[16,21],[2,4],[6,16],[5,12],[7,15],[15,25],[21,27],[11,17],[7,17],[21,28],[16,25],[7,8],[22,28],[1,3],[14,22],[22,24],[1,3],[19,29],[8,14],[1,9]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"50.5.7.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"univ-energy\",\"moduleSequenceNumber\":205,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"univ-energy\",\"moduleSequenceNumber\":206,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":1190346487,\"moneyMax\":29758662175,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":865,\"serverGrowth\":81}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"30.1.7.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":751732979,\"moneyMax\":18793324475,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":820,\"serverGrowth\":71}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"38.5.0.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":578111954,\"moneyMax\":14452798850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":807,\"serverGrowth\":87}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"20.0.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":877574368,\"moneyMax\":21939359200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":895,\"serverGrowth\":74}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"37.2.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":768958638,\"moneyMax\":19223965950,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":873,\"serverGrowth\":83}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-304644.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[79,73,90,3,78,114,133,188,11,96,149],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"52.5.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1072522225,\"moneyMax\":26813055625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":850,\"serverGrowth\":64}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"36.5.1.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":956692808,\"moneyMax\":23917320200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":869,\"serverGrowth\":68}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"24.9.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zb-def\",\"moduleSequenceNumber\":207,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"zb-def\",\"moduleSequenceNumber\":208,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":976546825,\"moneyMax\":24413670625,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":821,\"serverGrowth\":73}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"57.1.9.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":209,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":210,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"infocomm\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":739502927,\"moneyMax\":18487573175,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":780,\"serverGrowth\":75}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"10.5.8.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"zb-def\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":819813677,\"moneyMax\":20495341925,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":755,\"serverGrowth\":80}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-741467.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[5],[8,5],[2,1,9],[8,4,6,9],[8,3,2,4,3],[5,5,8,5,9,2],[1,9,7,9,5,5,8],[7,8,3,4,9,2,6,2],[6,7,5,5,1,1,7,4,7],[6,9,1,7,7,8,1,1,8,7],[6,2,4,8,6,1,6,7,2,3,9]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"24.3.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":1390031991,\"moneyMax\":34750799775,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":877,\"serverGrowth\":67}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"23.3.2.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///deda0407-1518-4452-a571-ab6b527d8a92\",\"moduleSequenceNumber\":364}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"global-pharm\",\"moduleSequenceNumber\":364,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"global-pharm\",\"moduleSequenceNumber\":212,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":1593314398,\"moneyMax\":39832859950,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":810,\"serverGrowth\":80}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"93.9.5.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"nova-med\",\"moduleSequenceNumber\":213,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"nova-med\",\"moduleSequenceNumber\":214,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"solaris\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1202796248,\"moneyMax\":30069906200,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":808,\"serverGrowth\":85}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"89.8.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":1473256043,\"moneyMax\":36831401075,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":807,\"serverGrowth\":79}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"63.9.3.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"unitalife\",\"moduleSequenceNumber\":215,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"unitalife\",\"moduleSequenceNumber\":216,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"aerocorp\",\"defcomm\",\"solaris\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":1007774943,\"moneyMax\":25194373575,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":825,\"serverGrowth\":73}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"66.1.4.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///e800617b-1032-47c6-9fb5-2ee7a1ef2d58\",\"moduleSequenceNumber\":365}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":365,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":218,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":716083224,\"moneyMax\":17902080600,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":660,\"serverGrowth\":62}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"59.0.1.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///759057c0-bc53-4ac5-9794-06ae9e1c01a5\",\"moduleSequenceNumber\":366}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rho-construction\",\"moduleSequenceNumber\":366,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"rho-construction\",\"moduleSequenceNumber\":220,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"catalyst\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":18.931999999999988,\"minDifficulty\":17,\"moneyAvailable\":10971112129,\"moneyMax\":12677665250,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":517,\"serverGrowth\":56}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"67.9.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":221,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":222,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"rothman-uni\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":19.036,\"minDifficulty\":18,\"moneyAvailable\":14386042311.210773,\"moneyMax\":15636900075,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":516,\"serverGrowth\":54}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-328155.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"11100000100000001111101111111101\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-970738.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[8,2,-5,-5,5,-1,1,-10,-6,-3,-5],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"29.0.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///6f60e528-32d8-41b8-8e1a-c00ce257b68c\",\"moduleSequenceNumber\":367}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"aevum-police\",\"moduleSequenceNumber\":367,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"aevum-police\",\"moduleSequenceNumber\":224,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"catalyst\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":276556596,\"moneyMax\":6913914900,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":429,\"serverGrowth\":40}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-270440.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"83709969\",-95],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"60.0.9.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":225,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":226,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"computek\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":16,\"minDifficulty\":16,\"moneyAvailable\":6026942075,\"moneyMax\":6026942075,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":381,\"serverGrowth\":41}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"76.8.2.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":905037186,\"moneyMax\":22625929650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":745,\"serverGrowth\":80}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"42.1.3.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":62.39999999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[1061514738,54,27,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4942.275340231273,\"onlineMoneyMade\":1061514738,\"onlineRunningTime\":1313.0100000001617,\"pid\":204,\"ramUsage\":2.4,\"server\":\"summit-uni\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///89aca543-f6c5-4274-aad8-b4b175cb58e8\",\"moduleSequenceNumber\":368}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[2871646664,119,17,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6391.614126755364,\"onlineMoneyMade\":2871646664,\"onlineRunningTime\":1313.0100000001617,\"pid\":205,\"ramUsage\":2.4,\"server\":\"summit-uni\",\"threads\":17,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///89aca543-f6c5-4274-aad8-b4b175cb58e8\",\"moduleSequenceNumber\":368}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///89aca543-f6c5-4274-aad8-b4b175cb58e8\",\"moduleSequenceNumber\":368}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"summit-uni\",\"moduleSequenceNumber\":368,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"summit-uni\",\"moduleSequenceNumber\":228,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"avmnite-02h\",\"lexo-corp\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":23.733999999999998,\"minDifficulty\":20,\"moneyAvailable\":4397872233,\"moneyMax\":5242472775,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":453,\"serverGrowth\":41}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"49.7.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"syscore\",\"moduleSequenceNumber\":229,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"syscore\",\"moduleSequenceNumber\":230,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":454560984,\"moneyMax\":11364024600,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":637,\"serverGrowth\":62}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"37.0.3.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":14.399999999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[1069174722,42,6,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2255.863809443069,\"onlineMoneyMade\":1069174722,\"onlineRunningTime\":1313.0100000001617,\"pid\":206,\"ramUsage\":2.4,\"server\":\"catalyst\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///5a5fce15-daab-4ff2-b832-5c122ce9fe76\",\"moduleSequenceNumber\":369}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///5a5fce15-daab-4ff2-b832-5c122ce9fe76\",\"moduleSequenceNumber\":369}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"catalyst\",\"moduleSequenceNumber\":369,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"catalyst\",\"moduleSequenceNumber\":232,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"avmnite-02h\",\"rho-construction\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":26.656,\"minDifficulty\":22,\"moneyAvailable\":9369295555,\"moneyMax\":11262327975,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":415,\"serverGrowth\":44}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"6.7.3.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":14.399999999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[774917496,36,18,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3016.412179483876,\"onlineMoneyMade\":774917496,\"onlineRunningTime\":1313.0100000001617,\"pid\":201,\"ramUsage\":2.4,\"server\":\"the-hub\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///20bf06b1-ef10-47dc-b3de-60bbafc019c4\",\"moduleSequenceNumber\":370}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///20bf06b1-ef10-47dc-b3de-60bbafc019c4\",\"moduleSequenceNumber\":370}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"the-hub\",\"moduleSequenceNumber\":370,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"the-hub\",\"moduleSequenceNumber\":234,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"phantasy\",\"syscore\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":13,\"minDifficulty\":13,\"moneyAvailable\":3888846350,\"moneyMax\":3888846350,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":286,\"serverGrowth\":52}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"93.7.1.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"computek\",\"moduleSequenceNumber\":235,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"computek\",\"moduleSequenceNumber\":236,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":20.879999999999992,\"minDifficulty\":19,\"moneyAvailable\":5470317784,\"moneyMax\":5674090150,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":356,\"serverGrowth\":54}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-300209.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-4,4,5,-4,3,-5,10,-4,-9,-10,-3,5,8,-7,6,10,2,0,-2,10,4,7,8,-2,8,-9,-10,2,-3,-4,-10,-6,9,-1,4],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"62.2.3.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[33470942320,43410,11010,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1822534.2247545572,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":1169181.9858085003,\"onlineMoneyMade\":33470942320,\"onlineRunningTime\":36681.21000003442,\"pid\":14,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c44f65f9-6aac-45bb-96da-95ad626cd72a\",\"moduleSequenceNumber\":53239}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[1338515870,87400,28950,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1715074.644730384,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":1099873.2558152482,\"onlineMoneyMade\":1338515870,\"onlineRunningTime\":36681.21000003442,\"pid\":15,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c44f65f9-6aac-45bb-96da-95ad626cd72a\",\"moduleSequenceNumber\":53239}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[13137496970,34750,44570,150]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2068705.3773779476,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":1365893.309991995,\"onlineMoneyMade\":13137496970,\"onlineRunningTime\":36681.21000003442,\"pid\":16,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c44f65f9-6aac-45bb-96da-95ad626cd72a\",\"moduleSequenceNumber\":53239}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[22599130410,50450,34860,50]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2224292.1283523547,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":1467127.8839929544,\"onlineMoneyMade\":22599130410,\"onlineRunningTime\":36681.21000003442,\"pid\":17,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c44f65f9-6aac-45bb-96da-95ad626cd72a\",\"moduleSequenceNumber\":53239}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[33419702100,67380,21300,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2961758.367706587,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":1905238.1202042697,\"onlineMoneyMade\":33419702100,\"onlineRunningTime\":36681.21000003442,\"pid\":18,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c44f65f9-6aac-45bb-96da-95ad626cd72a\",\"moduleSequenceNumber\":53239}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[16508861046,26811,159,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":902103.9503606182,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":579434.732768293,\"onlineMoneyMade\":16508861046,\"onlineRunningTime\":36681.21000003442,\"pid\":19,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c44f65f9-6aac-45bb-96da-95ad626cd72a\",\"moduleSequenceNumber\":53239}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///50f02e4f-6f4b-40ec-b2c4-80a8726cbb9d\",\"moduleSequenceNumber\":371}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"netlink\",\"moduleSequenceNumber\":371,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"netlink\",\"moduleSequenceNumber\":238,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"neo-net\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":423,\"serverGrowth\":62}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"84.2.3.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":239,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":240,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":15,\"minDifficulty\":15,\"moneyAvailable\":1751424975,\"moneyMax\":1751424975,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":270,\"serverGrowth\":39}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"32.0.5.6\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":241,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":242,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":243,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1.4920000000000004,\"minDifficulty\":1,\"moneyAvailable\":1286240,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-868831.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"INBOXARRAYCACHEEMAILTABLE\",\"PODCAST\"],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"8.0.4.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":244,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":245,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":246,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":7.02,\"minDifficulty\":3,\"moneyAvailable\":43702378.54626677,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"29.3.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":247,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":248,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":249,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":5.348,\"minDifficulty\":3,\"moneyAvailable\":57500000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"14.6.4.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":250,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":251,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":252,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.599999999999999,\"minDifficulty\":5,\"moneyAvailable\":56770450,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"18.0.4.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///12c98226-5f0c-42bb-b598-683077ac37e7\",\"moduleSequenceNumber\":51806}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":253,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":254,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":255,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"harakiri-sushi\",\"silver-helix\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":10.331999999999995,\"minDifficulty\":8,\"moneyAvailable\":187500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"90.9.9.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///a9c08dce-f899-42c6-b774-2ae377f5bfeb\",\"moduleSequenceNumber\":51807}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":256,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":257,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":258,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"harakiri-sushi\",\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":9.519999999999996,\"minDifficulty\":7,\"moneyAvailable\":68750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"38.3.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///71efad47-8ed2-4c0f-928e-2479aabda237\",\"moduleSequenceNumber\":51808}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":259,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":260,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":261,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"nectar-net\",\"netlink\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":10.460000000000008,\"minDifficulty\":8,\"moneyAvailable\":125000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-802869.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"340548046030\",45],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"3.3.8.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":62.400000000000006,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[4337375112,91,0,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5128.330393467245,\"onlineMoneyMade\":4337375112,\"onlineRunningTime\":1313.0100000001617,\"pid\":197,\"ramUsage\":2.4,\"server\":\"silver-helix\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///3999abf9-3430-4b33-8432-c099e878db96\",\"moduleSequenceNumber\":372}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[8249350042,152,38,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10286.738971060398,\"onlineMoneyMade\":8249350042,\"onlineRunningTime\":1313.0100000001617,\"pid\":198,\"ramUsage\":2.4,\"server\":\"silver-helix\",\"threads\":19,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///3999abf9-3430-4b33-8432-c099e878db96\",\"moduleSequenceNumber\":372}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///3999abf9-3430-4b33-8432-c099e878db96\",\"moduleSequenceNumber\":372}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"silver-helix\",\"moduleSequenceNumber\":372,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"silver-helix\",\"moduleSequenceNumber\":263,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zer0\",\"computek\",\"crush-fitness\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":1125000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"28.2.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":264,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":265,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":266,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":7.422000000000004,\"minDifficulty\":5,\"moneyAvailable\":75000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"0.9.5.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":267,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":268,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":269,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.851999999999998,\"minDifficulty\":5,\"moneyAvailable\":75416650,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-208963-Volhaven.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[39,10,21,46,30,21,14,28,49],[1,1,21,30,26,19,13,48,41],[19,11,47,12,23,17,24,18,24],[41,23,34,15,17,37,3,17,2],[39,20,23,11,42,4,3,29,4]],\"reward\":{\"name\":\"Volhaven\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"47.5.3.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.199999999999996,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[300171576,6,2,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":460.19621712638616,\"onlineMoneyMade\":300171576,\"onlineRunningTime\":1313.0100000001617,\"pid\":199,\"ramUsage\":2.4,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c7d3eb75-5a9d-4139-99ca-7c36a6df046c\",\"moduleSequenceNumber\":373}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[1703243436,72,24,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5865.245904551981,\"onlineMoneyMade\":1703243436,\"onlineRunningTime\":1313.0100000001617,\"pid\":200,\"ramUsage\":2.4,\"server\":\"phantasy\",\"threads\":12,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c7d3eb75-5a9d-4139-99ca-7c36a6df046c\",\"moduleSequenceNumber\":373}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c7d3eb75-5a9d-4139-99ca-7c36a6df046c\",\"moduleSequenceNumber\":373}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"phantasy\",\"moduleSequenceNumber\":373,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"phantasy\",\"moduleSequenceNumber\":271,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zer0\",\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":9.475999999999996,\"minDifficulty\":7,\"moneyAvailable\":600000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"21.0.2.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":272,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":273,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":274,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"iron-gym\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.9399999999999915,\"minDifficulty\":5,\"moneyAvailable\":250000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"38.5.4.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omega-net\",\"moduleSequenceNumber\":275,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"omega-net\",\"moduleSequenceNumber\":276,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":29,\"hackDifficulty\":12.235999999999999,\"minDifficulty\":10,\"moneyAvailable\":1515559450,\"moneyMax\":1515559450,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":200,\"serverGrowth\":35}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"39.7.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":277,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":278,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":14,\"minDifficulty\":14,\"moneyAvailable\":1061886075,\"moneyMax\":1061886075,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":250,\"serverGrowth\":32}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"65.6.5.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":279,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":280,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":281,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":500000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-5431.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"30Kv625ttKMV8994pFQGGIDU597mJIHOBG2153Vp3n5110784CUo3573aYz789kPBh6QlJ616\",\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"50.7.4.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":282,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":283,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"summit-uni\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":21.172000000000008,\"minDifficulty\":18,\"moneyAvailable\":5682271901.77057,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":495,\"serverGrowth\":39}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"69.7.6.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1054,\"serverGrowth\":60}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"99.1.3.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":284,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":285,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":13.132000000000001,\"minDifficulty\":13,\"moneyAvailable\":9194617984,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":740,\"serverGrowth\":43}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-506646.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[1,7],[25,28],[4,12],[16,18],[22,25],[12,20],[8,16],[8,9],[18,24],[18,25],[12,19],[7,17],[13,23],[13,21],[25,31],[21,22],[13,23],[9,16]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"45.3.7.4\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":286,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":287,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"nova-med\",\"stormtech\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":538,\"serverGrowth\":1}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"84.2.3.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":64.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[1355650254,56,7,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2857.4274919612208,\"onlineMoneyMade\":1355650254,\"onlineRunningTime\":1313.0100000001617,\"pid\":207,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///39fdf637-8793-4112-a527-c94a91a02b74\",\"moduleSequenceNumber\":374}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[6457779440,140,40,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12246.11782269095,\"onlineMoneyMade\":6457779440,\"onlineRunningTime\":1313.0100000001617,\"pid\":208,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":20,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///39fdf637-8793-4112-a527-c94a91a02b74\",\"moduleSequenceNumber\":374}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///39fdf637-8793-4112-a527-c94a91a02b74\",\"moduleSequenceNumber\":374}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":374,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":289,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":347,\"serverGrowth\":1}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"37.1.1.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[207188304,10,6,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":921.6814992867398,\"onlineMoneyMade\":207188304,\"onlineRunningTime\":1313.0100000001617,\"pid\":202,\"ramUsage\":2.4,\"server\":\"avmnite-02h\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///d64bd5e8-229b-40db-8e9a-1a9edb3a65f5\",\"moduleSequenceNumber\":375}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[1363044628,66,33,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6040.558749171557,\"onlineMoneyMade\":1363044628,\"onlineRunningTime\":1313.0100000001617,\"pid\":203,\"ramUsage\":2.4,\"server\":\"avmnite-02h\",\"threads\":11,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///d64bd5e8-229b-40db-8e9a-1a9edb3a65f5\",\"moduleSequenceNumber\":375}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///d64bd5e8-229b-40db-8e9a-1a9edb3a65f5\",\"moduleSequenceNumber\":375}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":375,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":291,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\",\"summit-uni\",\"catalyst\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":214,\"serverGrowth\":1}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"1.1.8.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\".\",\"moduleSequenceNumber\":292,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\".\",\"moduleSequenceNumber\":293,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"stormtech\",\"blade\",\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":512,\"serverGrowth\":1}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"29.1.8.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"CSEC\",\"moduleSequenceNumber\":294,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"CSEC\",\"moduleSequenceNumber\":295,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"CSEC\",\"moduleSequenceNumber\":296,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"iron-gym\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":55,\"serverGrowth\":1}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"84.8.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"66.7.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"73.0.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv\",\"httpPortOpen\":false,\"ip\":\"94.7.9.6\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":28,\"ramUsage\":3.7,\"server\":\"pserv\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///2cde37ae-edc7-47ca-9425-6c4efdce8687\",\"moduleSequenceNumber\":50614}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///23d50bae-a3cd-46bb-9340-10774b4da191\",\"moduleSequenceNumber\":49592}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv\",\"moduleSequenceNumber\":297,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///04b79922-32d0-4554-a89f-a807945d19e5\",\"moduleSequenceNumber\":376}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv\",\"moduleSequenceNumber\":376,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv\",\"moduleSequenceNumber\":299,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-0\",\"httpPortOpen\":false,\"ip\":\"52.3.9.2\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":29,\"ramUsage\":3.7,\"server\":\"pserv-0\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1950ad32-80c7-4a4e-a211-d95944b160c1\",\"moduleSequenceNumber\":50615}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4fc8e746-f9ed-4c6d-ae3a-e4dac50c8af6\",\"moduleSequenceNumber\":49595}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-0\",\"moduleSequenceNumber\":300,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///7ee324c9-4ca3-4ece-8144-ff95794f35b9\",\"moduleSequenceNumber\":377}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-0\",\"moduleSequenceNumber\":377,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-0\",\"moduleSequenceNumber\":302,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-1\",\"httpPortOpen\":false,\"ip\":\"37.7.3.0\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":30,\"ramUsage\":3.7,\"server\":\"pserv-1\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///900022fe-961b-4369-96c4-3819dca7ceca\",\"moduleSequenceNumber\":50616}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///d4dbb530-203e-4afc-a200-098984f7e26d\",\"moduleSequenceNumber\":49598}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-1\",\"moduleSequenceNumber\":303,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9f2c2c90-7dd0-4f67-9ea1-d616794e654d\",\"moduleSequenceNumber\":378}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-1\",\"moduleSequenceNumber\":378,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-1\",\"moduleSequenceNumber\":305,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2\",\"httpPortOpen\":false,\"ip\":\"4.3.9.4\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":31,\"ramUsage\":3.7,\"server\":\"pserv-2\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9bfbeb51-8f8a-43e8-b282-af1818e8854d\",\"moduleSequenceNumber\":50617}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///1a8fbc93-5ede-44a6-b574-56893ea1cb69\",\"moduleSequenceNumber\":49601}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-2\",\"moduleSequenceNumber\":306,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///d5cd0280-cf52-45d6-8d67-5b0d80431056\",\"moduleSequenceNumber\":379}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-2\",\"moduleSequenceNumber\":379,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-2\",\"moduleSequenceNumber\":308,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-3\",\"httpPortOpen\":false,\"ip\":\"86.3.7.4\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":32,\"ramUsage\":3.7,\"server\":\"pserv-3\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///31766c81-e940-4d6b-aca4-f974480344fa\",\"moduleSequenceNumber\":50618}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///587d26ba-ea6b-470c-ba0a-c1a9209e7e67\",\"moduleSequenceNumber\":49604}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-3\",\"moduleSequenceNumber\":309,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///ebe3e33a-6827-42d4-8af9-0e6d7b5046df\",\"moduleSequenceNumber\":380}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-3\",\"moduleSequenceNumber\":380,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-3\",\"moduleSequenceNumber\":311,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-4\",\"httpPortOpen\":false,\"ip\":\"93.4.5.0\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":33,\"ramUsage\":3.7,\"server\":\"pserv-4\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1c05ecb6-16e4-48db-94d2-517a3822a9da\",\"moduleSequenceNumber\":50619}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4cb9b6ba-1402-4cb4-b941-d828f574d43f\",\"moduleSequenceNumber\":49607}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-4\",\"moduleSequenceNumber\":312,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///7e75a49e-c82a-4cf3-b9da-798f8a7638cf\",\"moduleSequenceNumber\":381}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-4\",\"moduleSequenceNumber\":381,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-4\",\"moduleSequenceNumber\":314,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-5\",\"httpPortOpen\":false,\"ip\":\"19.5.7.7\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":34,\"ramUsage\":3.7,\"server\":\"pserv-5\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///fb7f0129-c974-48fd-b1fd-96f2c6ef2331\",\"moduleSequenceNumber\":50620}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///ee3cc3aa-4559-4ad1-ace9-fdacf99cbbe1\",\"moduleSequenceNumber\":49610}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-5\",\"moduleSequenceNumber\":315,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1382da97-3c90-4e86-af12-4ba03fbdbf2b\",\"moduleSequenceNumber\":382}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-5\",\"moduleSequenceNumber\":382,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-5\",\"moduleSequenceNumber\":317,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-6\",\"httpPortOpen\":false,\"ip\":\"58.5.0.5\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":35,\"ramUsage\":3.7,\"server\":\"pserv-6\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1aaa3b0a-12b8-44cf-9f63-7e3aeae0c830\",\"moduleSequenceNumber\":50621}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///1d706f9e-b112-41c7-aea5-0cde71854997\",\"moduleSequenceNumber\":49613}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-6\",\"moduleSequenceNumber\":318,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///2f3786c0-c9f7-4702-8e32-cc87ea03fc58\",\"moduleSequenceNumber\":383}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-6\",\"moduleSequenceNumber\":383,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-6\",\"moduleSequenceNumber\":320,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-7\",\"httpPortOpen\":false,\"ip\":\"28.8.5.7\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":36,\"ramUsage\":3.7,\"server\":\"pserv-7\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///d2a78c8e-769f-4aa1-8035-c244e0269b5d\",\"moduleSequenceNumber\":50622}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///a13492db-d026-454e-86ca-dd946049ad02\",\"moduleSequenceNumber\":49616}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-7\",\"moduleSequenceNumber\":321,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///5615c7e7-787c-4a30-855b-dad173868160\",\"moduleSequenceNumber\":384}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-7\",\"moduleSequenceNumber\":384,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-7\",\"moduleSequenceNumber\":323,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-8\",\"httpPortOpen\":false,\"ip\":\"29.3.2.8\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":37,\"ramUsage\":3.7,\"server\":\"pserv-8\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///264aeca0-d6d7-4855-9375-6eea3bf67955\",\"moduleSequenceNumber\":50623}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///1f6fc103-7e7a-4282-862b-df2032844a0d\",\"moduleSequenceNumber\":49619}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-8\",\"moduleSequenceNumber\":324,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9ea61ae0-64fa-40fc-a47a-7dafc95c0792\",\"moduleSequenceNumber\":385}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-8\",\"moduleSequenceNumber\":385,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-8\",\"moduleSequenceNumber\":326,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-9\",\"httpPortOpen\":false,\"ip\":\"63.4.6.9\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":38,\"ramUsage\":3.7,\"server\":\"pserv-9\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///786ee848-5ede-441a-a205-9163efcf1e07\",\"moduleSequenceNumber\":50624}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4ad125a3-6ebe-4c50-8b5e-8e65c4fb013a\",\"moduleSequenceNumber\":49622}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-9\",\"moduleSequenceNumber\":327,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///294205ae-514f-4ed7-a42c-9251070a68be\",\"moduleSequenceNumber\":386}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-9\",\"moduleSequenceNumber\":386,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-9\",\"moduleSequenceNumber\":329,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-10\",\"httpPortOpen\":false,\"ip\":\"83.0.1.7\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":39,\"ramUsage\":3.7,\"server\":\"pserv-10\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///902760e9-4884-40be-a145-ab7f8b343f03\",\"moduleSequenceNumber\":50625}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///025f2f6d-1430-4ce8-ba1b-693d4e542b59\",\"moduleSequenceNumber\":49625}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-10\",\"moduleSequenceNumber\":330,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///52ebf0cc-3907-4697-ae1c-af898a108287\",\"moduleSequenceNumber\":387}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-10\",\"moduleSequenceNumber\":387,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-10\",\"moduleSequenceNumber\":332,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-11\",\"httpPortOpen\":false,\"ip\":\"52.0.8.6\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":40,\"ramUsage\":3.7,\"server\":\"pserv-11\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///8774fb0c-b6a5-436c-91d2-1aa6ec0bf4fa\",\"moduleSequenceNumber\":50626}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///62f5cbae-712d-43c9-a237-a7ab14ca740d\",\"moduleSequenceNumber\":49628}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-11\",\"moduleSequenceNumber\":333,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///503b2852-a223-423e-a076-ff62091fcc2f\",\"moduleSequenceNumber\":388}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-11\",\"moduleSequenceNumber\":388,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-11\",\"moduleSequenceNumber\":335,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-12\",\"httpPortOpen\":false,\"ip\":\"30.8.8.0\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":262141.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[0,0,141698,212547],\"sigma-cosmetics\":[0,0,283396,212547],\"joesguns\":[0,0,70849,70849],\"rothman-uni\":[0,0,70849,70849],\"catalyst\":[0,0,141698,70849],\"millenium-fitness\":[0,0,141698,0],\"rho-construction\":[0,0,70849,70849],\"snap-fitness\":[0,0,70849,0],\"n00dles\":[0,0,70849,0],\"harakiri-sushi\":[0,0,70849,0],\"alpha-ent\":[0,0,70849,70849]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54604167.11959026,\"offlineMoneyMade\":0,\"offlineRunningTime\":58435.772000000004,\"onlineExpGained\":66791919.029961705,\"onlineMoneyMade\":0,\"onlineRunningTime\":3917.2099999985835,\"pid\":41,\"ramUsage\":3.7,\"server\":\"pserv-12\",\"threads\":70849,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///2c025520-149a-40a5-9a90-f694759a5306\",\"moduleSequenceNumber\":50627}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///58c54fc8-fcc4-466d-84f2-4809edb1dc67\",\"moduleSequenceNumber\":49631}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-12\",\"moduleSequenceNumber\":336,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1ec2feb4-6643-4931-857a-0a8cb02d8dab\",\"moduleSequenceNumber\":389}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-12\",\"moduleSequenceNumber\":389,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-12\",\"moduleSequenceNumber\":338,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":45,\\\"hackDifficulty\\\":15,\\\"minDifficulty\\\":15,\\\"moneyAvailable\\\":1751424975,\\\"moneyMax\\\":1751424975,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":270,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.99059045329969},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.8.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":905037186,\\\"moneyMax\\\":22625929650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":745,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16436133417031362},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.3.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.400000000000006,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1125000000,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.5.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.475999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":600000000,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"6.7.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":13,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3888846350,\\\"moneyMax\\\":3888846350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":286,\\\"serverGrowth\\\":52,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.7.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":454560984,\\\"moneyMax\\\":11364024600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":637,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2696459719256955},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.7.1.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":22.057999999999993,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":4627085372.894228,\\\"moneyMax\\\":5674090150,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":356,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.844723342296019},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":43,\\\"hackDifficulty\\\":14,\\\"minDifficulty\\\":14,\\\"moneyAvailable\\\":1061886075,\\\"moneyMax\\\":1061886075,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":250,\\\"serverGrowth\\\":32,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.1.1.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":214,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"42.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":61,\\\"hackDifficulty\\\":22.767999999999994,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":4030555954.707734,\\\"moneyMax\\\":5242472775,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":453,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.7659323584427816},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.0.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":65,\\\"hackDifficulty\\\":23.279999999999998,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":11262327975,\\\"moneyMax\\\":11262327975,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":415,\\\"serverGrowth\\\":44,\\\"hackChance\\\":0.7885221483239687},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"84.2.3.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":127.19999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":347,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"59.0.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":52,\\\"hackDifficulty\\\":20.100000000000012,\\\"minDifficulty\\\":17,\\\"moneyAvailable\\\":11179244892.927347,\\\"moneyMax\\\":12677665250,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":517,\\\"serverGrowth\\\":56,\\\"hackChance\\\":0.7438624434900457},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.399999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":276556596,\\\"moneyMax\\\":6913914900,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":429,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.29420669326253773},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"37.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":768958638,\\\"moneyMax\\\":19223965950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.26691278500722154},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"23.3.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":62.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1593314398,\\\"moneyMax\\\":39832859950,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":810,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.15017343679837417},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":1390031991,\\\"moneyMax\\\":34750799775,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":877,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.12965555444510793},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.1.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":38.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":716083224,\\\"moneyMax\\\":17902080600,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":660,\\\"serverGrowth\\\":62,\\\"hackChance\\\":0.2703957002818047},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.7.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":19.932000000000002,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":5313240310.976914,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":495,\\\"serverGrowth\\\":39,\\\"hackChance\\\":0.7621435160379765},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"52.5.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1072522225,\\\"moneyMax\\\":26813055625,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":850,\\\"serverGrowth\\\":64,\\\"hackChance\\\":0.1229934113313277},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"36.5.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":956692808,\\\"moneyMax\\\":23917320200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":869,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.07760162997347736},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"63.9.3.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1007774943,\\\"moneyMax\\\":25194373575,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":825,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.17244701213746572},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"60.7.5.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":901051889,\\\"moneyMax\\\":22526297225,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":873,\\\"serverGrowth\\\":68,\\\"hackChance\\\":0.08897092833574051},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"10.5.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":819813677,\\\"moneyMax\\\":20495341925,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":755,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.16922982336884532},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"89.8.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1473256043,\\\"moneyMax\\\":36831401075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.07869300669439576},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"13.9.7.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":771285603,\\\"moneyMax\\\":19282140075,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":942,\\\"serverGrowth\\\":49,\\\"hackChance\\\":0.08442510703730642},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"30.1.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":751732979,\\\"moneyMax\\\":18793324475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.14799068335653734},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":73,\\\"hackDifficulty\\\":73,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":578111954,\\\"moneyMax\\\":14452798850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":87,\\\"hackChance\\\":0.1770592650623905},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.1.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":68,\\\"hackDifficulty\\\":68,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":739502927,\\\"moneyMax\\\":18487573175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":780,\\\"serverGrowth\\\":75,\\\"hackChance\\\":0.2180475786071439},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"88.2.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":1462789543,\\\"moneyMax\\\":36569738575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1125,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.021239140012307974},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.1.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":22563426762,\\\"moneyMax\\\":564085669050,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1094,\\\"serverGrowth\\\":96,\\\"hackChance\\\":0.003834053871748178},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"87.3.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":25645905777,\\\"moneyMax\\\":641147644425,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1031,\\\"serverGrowth\\\":63,\\\"hackChance\\\":0.08863877020328709},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.6.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":48947904093,\\\"moneyMax\\\":1223697602325,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1400,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.0009300427708696074},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"49.0.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":49257333078,\\\"moneyMax\\\":1231433326950,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1131,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.003482915274583122},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1498,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"18.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":792780836,\\\"moneyMax\\\":19819520900,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":876,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.09444679240504421},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"70.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":90,\\\"hackDifficulty\\\":90,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":18083903300,\\\"moneyMax\\\":452097582500,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1067,\\\"serverGrowth\\\":97,\\\"hackChance\\\":0.040902901453551105},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.7.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1054,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.18540117930314953},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.8.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.5383524108481655},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.9.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":56,\\\"hackDifficulty\\\":56,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":976546825,\\\"moneyMax\\\":24413670625,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":821,\\\"serverGrowth\\\":73,\\\"hackChance\\\":0.2826950414149374},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.9.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1202796248,\\\"moneyMax\\\":30069906200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":808,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.16370650813776255},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"45.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":true,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":538,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.9019516830964031},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.9.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1183696288,\\\"moneyMax\\\":29592407200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1051,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.07635840953486595},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.9.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":727457624,\\\"moneyMax\\\":18186440600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":820,\\\"serverGrowth\\\":71,\\\"hackChance\\\":0.0836469079841298},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.0.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":23921618059,\\\"moneyMax\\\":598040451475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":935,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.2190630334692158},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.5.6.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":47,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":16103641263,\\\"moneyMax\\\":402591031575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1009,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.2459583519655879},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"1.1.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":512,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.926379541180264},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"12.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":94,\\\"hackDifficulty\\\":94,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":20112509792,\\\"moneyMax\\\":502812744800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1153,\\\"serverGrowth\\\":78,\\\"hackChance\\\":0.019644780976531506},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"26.9.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":39228006395,\\\"moneyMax\\\":980700159875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1013,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.004602762692568976},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.9.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":963454752,\\\"moneyMax\\\":24086368800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":882,\\\"serverGrowth\\\":93,\\\"hackChance\\\":0.02922991565590195},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"50.5.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":88,\\\"hackDifficulty\\\":88,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1190346487,\\\"moneyMax\\\":29758662175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":865,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.07208780497475038},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"20.0.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":877574368,\\\"moneyMax\\\":21939359200,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":895,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.16595569320609005},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.0.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":48,\\\"hackDifficulty\\\":17.68799999999999,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4967340154,\\\"moneyMax\\\":6026942075,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":381,\\\"serverGrowth\\\":41,\\\"hackChance\\\":0.8725557263352037},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"67.9.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":20.008,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":13977541088.034174,\\\"moneyMax\\\":15636900075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":516,\\\"serverGrowth\\\":54,\\\"hackChance\\\":0.7454780986072287},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"99.1.3.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":14.028,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":10012761488,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":740,\\\"serverGrowth\\\":43,\\\"hackChance\\\":0.6184478461191738},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.6.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":10,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":500000000,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.9399999999999915,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.1.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":55,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":29,\\\"hackDifficulty\\\":12.235999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":1515559450,\\\"moneyMax\\\":1515559450,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":200,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"32.0.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1.8040000000000007,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1750000,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":3,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":16384,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":25.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.0.2.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"94.7.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.7.3.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.3.9.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.3.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.4.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"19.5.7.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.8.5.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"63.4.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.0.1.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.0.8.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.8.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"48.3.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.2.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"78.2.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.9.4.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"74.8.5.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.0.1.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"86.2.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.2.8.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1023.4999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"16.2.7.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":1024,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":977.5,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.02,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":34947648.47154282,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"29.3.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.46,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":43874190.827840015,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.359999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":55999077.64490576,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.2.0.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.800000000000002,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":69081738,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.9.5.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.259999999999993,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":100000000,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"18.0.4.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.331999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"90.9.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":9.519999999999996,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.3.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.460000000000008,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":125000000,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"harakiri-sushi\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"phantasy\\\",\\\"max-hardware\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"zer0\\\",\\\"iron-gym\\\",\\\"silver-helix\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"rothman-uni\\\",\\\"computek\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"millenium-fitness\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"catalyst\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-13\",\"httpPortOpen\":false,\"ip\":\"48.3.7.2\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":59800,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,4000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":107422.08616395568,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":234,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,10000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":103984.57940670913,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":235,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,10000,9000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":326563.1419384253,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":236,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,10000,6000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":275000.5405797265,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":237,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,7000,3000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":214844.17232791136,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":238,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,5000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":128906.50339674682,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":239,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":240,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":241,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":242,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":243,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":244,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":245,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":246,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":247,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":248,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":249,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":250,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":251,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":252,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":253,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":254,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":255,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":256,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":257,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":2000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":113.01000000000107,\"pid\":258,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///9283297e-80a6-4129-ae2a-5a2b689378a2\",\"moduleSequenceNumber\":49634}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-13\",\"moduleSequenceNumber\":339,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///399d3033-504f-46e6-8fb8-0e84dda0b3c5\",\"moduleSequenceNumber\":390}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-13\",\"moduleSequenceNumber\":390,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-14\",\"httpPortOpen\":false,\"ip\":\"62.2.7.9\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///e0bf88e1-70c1-4f1c-943b-8f02fba1fb6f\",\"moduleSequenceNumber\":49637}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-14\",\"moduleSequenceNumber\":341,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///bfbc73b4-9f79-4736-863b-8e845284255b\",\"moduleSequenceNumber\":53229}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-14\",\"moduleSequenceNumber\":342,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-15\",\"httpPortOpen\":false,\"ip\":\"18.2.8.4\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///d9865b19-4202-469d-b653-78c8fc7cf861\",\"moduleSequenceNumber\":49640}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-15\",\"moduleSequenceNumber\":343,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///c1a08065-a4c6-4428-bc26-e4ec03915fb4\",\"moduleSequenceNumber\":53230}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-15\",\"moduleSequenceNumber\":344,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-16\",\"httpPortOpen\":false,\"ip\":\"33.2.4.7\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///b9a043ec-03d0-4395-bfbb-054a48dddb95\",\"moduleSequenceNumber\":49643}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-16\",\"moduleSequenceNumber\":345,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///5fa57823-d8ed-4cfd-b324-e5da8f9a82d8\",\"moduleSequenceNumber\":53231}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-16\",\"moduleSequenceNumber\":346,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-17\",\"httpPortOpen\":false,\"ip\":\"78.2.4.1\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///2d773278-b35d-494f-b87c-03e9fc6a0c81\",\"moduleSequenceNumber\":49646}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-17\",\"moduleSequenceNumber\":347,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///8f721f11-5797-4167-b74e-bdc087dd476c\",\"moduleSequenceNumber\":53232}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-17\",\"moduleSequenceNumber\":348,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-18\",\"httpPortOpen\":false,\"ip\":\"2.9.4.2\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///86dc0aa5-8930-4c8c-a552-529e6133dd3d\",\"moduleSequenceNumber\":49649}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-18\",\"moduleSequenceNumber\":349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///3906c860-dd11-4c70-a5ff-f4511ea0c530\",\"moduleSequenceNumber\":53233}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-18\",\"moduleSequenceNumber\":350,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-19\",\"httpPortOpen\":false,\"ip\":\"74.8.5.0\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///ea8e1d09-351f-487f-b67e-9dc02aaa915c\",\"moduleSequenceNumber\":49652}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-19\",\"moduleSequenceNumber\":351,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///aa2a5bd4-bc71-4486-ad1f-38e473570647\",\"moduleSequenceNumber\":53234}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-19\",\"moduleSequenceNumber\":352,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-20\",\"httpPortOpen\":false,\"ip\":\"21.0.1.9\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///373021d5-559b-4645-964f-2984b85007eb\",\"moduleSequenceNumber\":49655}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-20\",\"moduleSequenceNumber\":353,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///9a398b51-d4ad-47ca-b422-4e249bccf647\",\"moduleSequenceNumber\":53235}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-20\",\"moduleSequenceNumber\":354,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-21\",\"httpPortOpen\":false,\"ip\":\"86.2.2.9\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///16053d3c-44d6-4991-a2cc-c8ec0238f06a\",\"moduleSequenceNumber\":49658}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-21\",\"moduleSequenceNumber\":355,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///519332b1-4a15-4b83-8490-e16922ef3723\",\"moduleSequenceNumber\":53236}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-21\",\"moduleSequenceNumber\":356,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-22\",\"httpPortOpen\":false,\"ip\":\"99.2.8.7\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///3b2581a2-22de-4ddb-9790-13554cf27e40\",\"moduleSequenceNumber\":49661}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-22\",\"moduleSequenceNumber\":357,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///f4453a42-2b40-45b7-8059-652969b6e552\",\"moduleSequenceNumber\":53237}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-22\",\"moduleSequenceNumber\":358,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-23\",\"httpPortOpen\":false,\"ip\":\"16.2.7.9\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///7923498d-54b8-490c-a79e-a4258b2f3cc8\",\"moduleSequenceNumber\":49664}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-23\",\"moduleSequenceNumber\":359,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///a8cff17f-5670-4e4e-ba19-4d6484ff1dc3\",\"moduleSequenceNumber\":53238}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-23\",\"moduleSequenceNumber\":360,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":88.3816,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":1199907.311303641}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":156.4531,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":123.8232,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":1.9586,\"isBanned\":true,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":119.7145,\"isBanned\":true,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Volhaven\",\"playerReputation\":32093.7747166242}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":103.7435,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":71.4394,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":86.065,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":20393.858005064507,\"lastPrice\":20319.321422968573,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.44,\"b\":true,\"otlkMag\":15.897805571485149,\"otlkMagForecast\":66.24626066656846,\"cap\":494282023,\"spreadPerc\":0.4,\"shareTxForMovement\":61005,\"shareTxUntilMovement\":61005,\"totalShares\":107300000,\"maxShares\":21500000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":13452.237696048507,\"lastPrice\":13398.619906974498,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.48,\"b\":false,\"otlkMag\":19.912018703047963,\"otlkMagForecast\":31.46324546354327,\"cap\":40987829,\"spreadPerc\":0.3,\"shareTxForMovement\":84983,\"shareTxUntilMovement\":84983,\"totalShares\":97500000,\"maxShares\":19500000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":61381.33848246734,\"lastPrice\":61790.72537985967,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":false,\"otlkMag\":10.764946262893861,\"otlkMagForecast\":37.811547060798894,\"cap\":123287490,\"spreadPerc\":0.6,\"shareTxForMovement\":74933,\"shareTxUntilMovement\":74933,\"totalShares\":70500000,\"maxShares\":14100000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":25305.69852303174,\"lastPrice\":25163.04591366081,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.68,\"b\":true,\"otlkMag\":11.965677875827181,\"otlkMagForecast\":63.15573544989293,\"cap\":302987650,\"spreadPerc\":0.1,\"shareTxForMovement\":43099,\"shareTxUntilMovement\":43099,\"totalShares\":81700000,\"maxShares\":16300000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":54467.26086337422,\"lastPrice\":54173.6924054844,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":11.698821292512886,\"otlkMagForecast\":63.117088883670164,\"cap\":950932619,\"spreadPerc\":0.6,\"shareTxForMovement\":73315,\"shareTxUntilMovement\":73315,\"totalShares\":43000000,\"maxShares\":8600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":845865.9895602096,\"lastPrice\":852988.4580142498,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.01,\"b\":true,\"otlkMag\":16.733980062599745,\"otlkMagForecast\":66.18413002943458,\"cap\":603263080,\"spreadPerc\":0.9,\"shareTxForMovement\":57600,\"shareTxUntilMovement\":57600,\"totalShares\":28900000,\"maxShares\":5800000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":23323.28571270023,\"lastPrice\":23163.005247128767,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.83,\"b\":true,\"otlkMag\":8.156913577472945,\"otlkMagForecast\":59.23574988184939,\"cap\":136690596,\"spreadPerc\":0.2,\"shareTxForMovement\":67884,\"shareTxUntilMovement\":67884,\"totalShares\":104000000,\"maxShares\":20800000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":126782.28950377468,\"lastPrice\":125433.29512817577,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.29,\"b\":true,\"otlkMag\":11.277573878816394,\"otlkMagForecast\":60.57430913111744,\"cap\":363597229,\"spreadPerc\":0.2,\"shareTxForMovement\":86281,\"shareTxUntilMovement\":86281,\"totalShares\":58000000,\"maxShares\":11600000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":19248.74803368292,\"lastPrice\":19386.75739187459,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.86,\"b\":true,\"otlkMag\":7.2895716130524555,\"otlkMagForecast\":57.965634051922095,\"cap\":28305032,\"spreadPerc\":0.6,\"shareTxForMovement\":36178,\"shareTxUntilMovement\":36178,\"totalShares\":58600000,\"maxShares\":11700000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":15712.086256375937,\"lastPrice\":15798.540315256781,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":true,\"otlkMag\":8.481411544363967,\"otlkMagForecast\":59.74416345961585,\"cap\":112551809,\"spreadPerc\":0.4,\"shareTxForMovement\":60236,\"shareTxUntilMovement\":60236,\"totalShares\":53300000,\"maxShares\":10700000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":21203.85418344706,\"lastPrice\":21093.06741679625,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":false,\"otlkMag\":10.199178336150963,\"otlkMagForecast\":38.646658572330836,\"cap\":355386385,\"spreadPerc\":1,\"shareTxForMovement\":66668,\"shareTxUntilMovement\":66668,\"totalShares\":51700000,\"maxShares\":10300000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":14158.474846422316,\"lastPrice\":14071.661857789733,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":false,\"otlkMag\":6.229615861515823,\"otlkMagForecast\":42.780870951451384,\"cap\":96349755,\"spreadPerc\":0.2,\"shareTxForMovement\":105303,\"shareTxUntilMovement\":105303,\"totalShares\":89500000,\"maxShares\":17900000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":22272.102211251913,\"lastPrice\":22390.938418452235,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":true,\"otlkMag\":6.923907388136843,\"otlkMagForecast\":56.21689045828579,\"cap\":275939477,\"spreadPerc\":0.9,\"shareTxForMovement\":66986,\"shareTxUntilMovement\":66986,\"totalShares\":57100000,\"maxShares\":11400000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":43930.2332350573,\"lastPrice\":43733.34757817579,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":false,\"otlkMag\":9.090116297149475,\"otlkMagForecast\":40.15513029899579,\"cap\":427499040,\"spreadPerc\":0.4,\"shareTxForMovement\":81996,\"shareTxUntilMovement\":81996,\"totalShares\":46100000,\"maxShares\":9200000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":7108.591394686243,\"lastPrice\":7144.7424503488355,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":6.330401120420176,\"otlkMagForecast\":56.33143799821591,\"cap\":114959722,\"spreadPerc\":0.6,\"shareTxForMovement\":69396,\"shareTxUntilMovement\":69396,\"totalShares\":64800000,\"maxShares\":13000000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":7014.984539517925,\"lastPrice\":7052.998898553544,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":5.538069372674775,\"otlkMagForecast\":44.345925913659464,\"cap\":176600259,\"spreadPerc\":1,\"shareTxForMovement\":69896,\"shareTxUntilMovement\":69896,\"totalShares\":45700000,\"maxShares\":9100000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":17674.35958205471,\"lastPrice\":17781.925365288957,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":7.786574416818913,\"otlkMagForecast\":41.1092768560789,\"cap\":43762336,\"spreadPerc\":0.4,\"shareTxForMovement\":52959,\"shareTxUntilMovement\":52959,\"totalShares\":31800000,\"maxShares\":6400000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":49906.465579047515,\"lastPrice\":50164.42779600896,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":true,\"otlkMag\":11.58847972477069,\"otlkMagForecast\":60.60782334983676,\"cap\":116181047,\"spreadPerc\":0.5,\"shareTxForMovement\":44419,\"shareTxUntilMovement\":44419,\"totalShares\":25000000,\"maxShares\":5000000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":15252.563413436079,\"lastPrice\":15156.530306027702,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":5.174812244217291,\"otlkMagForecast\":45.43908515270717,\"cap\":22695719,\"spreadPerc\":0.6,\"shareTxForMovement\":108483,\"shareTxUntilMovement\":108483,\"totalShares\":37100000,\"maxShares\":7400000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":3627.9381388106945,\"lastPrice\":3706.2751927106037,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.59,\"b\":false,\"otlkMag\":9.863327245729709,\"otlkMagForecast\":38.453924163732445,\"cap\":120379629,\"spreadPerc\":0.9,\"shareTxForMovement\":23334,\"shareTxUntilMovement\":23334,\"totalShares\":82800000,\"maxShares\":16600000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":6813.507510760347,\"lastPrice\":6884.512415537571,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.25,\"b\":false,\"otlkMag\":11.409242617634437,\"otlkMagForecast\":40.34453243507284,\"cap\":111349642,\"spreadPerc\":0.9,\"shareTxForMovement\":82873,\"shareTxUntilMovement\":82873,\"totalShares\":51000000,\"maxShares\":10200000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":3093.3050293018678,\"lastPrice\":3075.6125655442834,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":4.006832967764644,\"otlkMagForecast\":45.95150461464443,\"cap\":87578458,\"spreadPerc\":0.3,\"shareTxForMovement\":72008,\"shareTxUntilMovement\":72008,\"totalShares\":40500000,\"maxShares\":8100000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":49796.90814831839,\"lastPrice\":50623.06603357419,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.99,\"b\":false,\"otlkMag\":11.804536978814998,\"otlkMagForecast\":37.789037702204155,\"cap\":57328320,\"spreadPerc\":0.9,\"shareTxForMovement\":60768,\"shareTxUntilMovement\":60768,\"totalShares\":31000000,\"maxShares\":6200000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":4148.657795620336,\"lastPrice\":4097.08044429669,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.51,\"b\":false,\"otlkMag\":5.4930743019256845,\"otlkMagForecast\":46.34635670208677,\"cap\":57536074,\"spreadPerc\":1,\"shareTxForMovement\":66223,\"shareTxUntilMovement\":66223,\"totalShares\":39800000,\"maxShares\":8000000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":462.76712147694155,\"lastPrice\":459.01685347331716,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.98,\"b\":true,\"otlkMag\":10.444013944187926,\"otlkMagForecast\":61.42550941535898,\"cap\":17438526,\"spreadPerc\":1.1,\"shareTxForMovement\":98559,\"shareTxUntilMovement\":98559,\"totalShares\":169900000,\"maxShares\":34000000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":470.74249422394,\"lastPrice\":462.3396705537392,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.18,\"b\":true,\"otlkMag\":6.607981240436582,\"otlkMagForecast\":55.68667002082049,\"cap\":22529829,\"spreadPerc\":1.7,\"shareTxForMovement\":30772,\"shareTxUntilMovement\":30772,\"totalShares\":29700000,\"maxShares\":5900000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":1056.0029177326016,\"lastPrice\":1064.2785382771954,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.94,\"b\":true,\"otlkMag\":7.498815022654164,\"otlkMagForecast\":57.7826901500398,\"cap\":7918556,\"spreadPerc\":0.4,\"shareTxForMovement\":84008,\"shareTxUntilMovement\":84008,\"totalShares\":28800000,\"maxShares\":5800000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":4049.6292006170424,\"lastPrice\":4025.132329337683,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":6.567308393344535,\"otlkMagForecast\":57.160090064243406,\"cap\":58058366,\"spreadPerc\":0.7,\"shareTxForMovement\":107691,\"shareTxUntilMovement\":107691,\"totalShares\":11300000,\"maxShares\":2300000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":989.6613591968355,\"lastPrice\":978.8081835902985,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.33,\"b\":false,\"otlkMag\":2.746734554695607,\"otlkMagForecast\":55.49699140785488,\"cap\":20267406,\"spreadPerc\":1.2,\"shareTxForMovement\":53186,\"shareTxUntilMovement\":53186,\"totalShares\":19600000,\"maxShares\":3900000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":51.29602670138657,\"lastPrice\":52.664515674681496,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.2,\"b\":false,\"otlkMag\":6.727240056620789,\"otlkMagForecast\":39.375651457297735,\"cap\":17902923,\"spreadPerc\":0.6,\"shareTxForMovement\":33448,\"shareTxUntilMovement\":33448,\"totalShares\":29300000,\"maxShares\":5900000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":2619.955534929032,\"lastPrice\":2649.4428538206835,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.35,\"b\":true,\"otlkMag\":11.282257297246698,\"otlkMagForecast\":60.666401266811434,\"cap\":17412303,\"spreadPerc\":0.7,\"shareTxForMovement\":37631,\"shareTxUntilMovement\":37631,\"totalShares\":113000000,\"maxShares\":22600000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":125561.85383883948,\"lastPrice\":126357.42477444503,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":7.822412775739481,\"otlkMagForecast\":41.622130572057785,\"cap\":701601078,\"spreadPerc\":1,\"shareTxForMovement\":129597,\"shareTxUntilMovement\":129597,\"totalShares\":12200000,\"maxShares\":2400000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":19757.07388452779,\"lastPrice\":19854.255079042116,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":10.937522634808733,\"otlkMagForecast\":62.67174393805199,\"cap\":461855351,\"spreadPerc\":0.2,\"shareTxForMovement\":168594,\"shareTxUntilMovement\":168594,\"totalShares\":21600000,\"maxShares\":4300000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":284486,\"lastUpdate\":1682890559275,\"ticksUntilCycle\":74}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true},\"EditorTheme\":{\"base\":\"vs-dark\",\"inherit\":true,\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}}},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"30","AllGangsSave":"","LastExportBonus":"1682890562401","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"storedCycles\":0}}"}}