{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":2163,\"strength\":3,\"defense\":4,\"dexterity\":2,\"agility\":2,\"charisma\":2,\"intelligence\":0},\"exp\":{\"hacking\":2421539982.834842,\"strength\":15.861254448857043,\"defense\":15.861254448857043,\"dexterity\":15.861254448857043,\"agility\":15.861254448857043,\"charisma\":7.049446421714245,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.674995881157713,\"hacking_speed\":1.6386007621374628,\"hacking_money\":5.434131862738632,\"hacking_grow\":2.539635053936087,\"hacking\":4.402866428047528,\"strength\":2.0090922301885605,\"defense\":2.4458514106643348,\"dexterity\":1.542066404749992,\"agility\":1.2190248258893217,\"charisma\":1.532488352546576,\"hacking_exp\":4.63748311553943,\"strength_exp\":1.4686346711904685,\"defense_exp\":1.4686346711904685,\"dexterity_exp\":1.4686346711904685,\"agility_exp\":1.4686346711904685,\"charisma_exp\":1.4686346711904685,\"company_rep\":1.9385977659714186,\"faction_rep\":1.4686346711904685,\"crime_money\":1.1609760246564969,\"crime_success\":1.1609760246564969,\"hacknet_node_money\":2.928090375685997,\"hacknet_node_purchase_cost\":0.6589283359459067,\"hacknet_node_ram_cost\":0.8613442299946493,\"hacknet_node_core_cost\":0.8613442299946493,\"hacknet_node_level_cost\":0.7321425954954519,\"work_money\":1.2770736271221466,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":15,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Combat Rib II\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Neuregen Gene Modification\"},{\"level\":1,\"name\":\"INFRARET Enhancement\"},{\"level\":1,\"name\":\"NutriGen Implant\"},{\"level\":16,\"name\":\"NeuroFlux Governor\"},{\"level\":17,\"name\":\"NeuroFlux Governor\"},{\"level\":18,\"name\":\"NeuroFlux Governor\"},{\"level\":19,\"name\":\"NeuroFlux Governor\"},{\"level\":20,\"name\":\"NeuroFlux Governor\"},{\"level\":21,\"name\":\"NeuroFlux Governor\"},{\"level\":22,\"name\":\"NeuroFlux Governor\"},{\"level\":23,\"name\":\"NeuroFlux Governor\"},{\"level\":24,\"name\":\"NeuroFlux Governor\"},{\"level\":25,\"name\":\"NeuroFlux Governor\"},{\"level\":26,\"name\":\"NeuroFlux Governor\"},{\"level\":27,\"name\":\"NeuroFlux Governor\"},{\"level\":28,\"name\":\"NeuroFlux Governor\"}],\"city\":\"Ishima\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"Chongqing\",\"Ishima\",\"New Tokyo\"],\"factionInvitations\":[\"Netburners\",\"Tian Di Hui\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87462579.69298999,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87462404.00756744,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87462074.59740017,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87461942.83333327,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87461701.26587728,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87461591.46248819,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87461415.77706565,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87461196.17028747,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87460800.87808676,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87460713.03537549,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":12809.200000011546,\"ram\":64,\"totalMoneyGenerated\":87460449.50724168,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11286.200000006005,\"ram\":64,\"totalMoneyGenerated\":86409017.93154609,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11286.200000006005,\"ram\":64,\"totalMoneyGenerated\":86409017.93154609,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11286.000000006004,\"ram\":64,\"totalMoneyGenerated\":86409017.05311897,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11285.800000006004,\"ram\":64,\"totalMoneyGenerated\":86409016.17469187,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11285.800000006004,\"ram\":64,\"totalMoneyGenerated\":86409016.17469187,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11285.600000006003,\"ram\":64,\"totalMoneyGenerated\":86409015.29626475,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11285.400000006002,\"ram\":64,\"totalMoneyGenerated\":86409014.41783765,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11285.200000006002,\"ram\":64,\"totalMoneyGenerated\":86409013.53941053,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11285.000000006,\"ram\":64,\"totalMoneyGenerated\":86409012.66098341,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11285.000000006,\"ram\":64,\"totalMoneyGenerated\":86409012.66098341,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11284.800000006,\"ram\":64,\"totalMoneyGenerated\":86409011.78255631,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11284.200000005998,\"ram\":64,\"totalMoneyGenerated\":86409009.14727497,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11284.000000005997,\"ram\":64,\"totalMoneyGenerated\":86409008.26884785,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":200,\"moneyGainRatePerSecond\":7672.692068019343,\"onlineTimeSeconds\":11283.800000005996,\"ram\":64,\"totalMoneyGenerated\":86409007.39042073,\"name\":\"hacknet-node-24\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{},\"karma\":0,\"numPeopleKilled\":0,\"location\":\"Travel Agency\",\"money\":437669042067.12213,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":1349608878203,\"hacknet\":2171803059.6126466,\"hacknet_expenses\":-4403859712.064246,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-218497.32956697757,\"total\":437668042067.12213,\"work\":0,\"servers\":-176619520000,\"other\":-5308200000,\"augmentations\":-727780840994.2854}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":3483730209873.2227,\"hacknet\":225422601382.96445,\"hacknet_expenses\":-172990577340.8482,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200218497.329567,\"total\":541751344976.8193,\"work\":0,\"servers\":-1866436244277.292,\"other\":-11570100000,\"augmentations\":-1085204326159.6372}},\"playtimeSinceLastAug\":12827800,\"playtimeSinceLastBitnode\":609122400,\"purchasedServers\":[\"pserv\",\"pserv-0\",\"pserv-1\",\"pserv-2\",\"pserv-3\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-7\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-14\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-20\",\"pserv-21\",\"pserv-22\",\"pserv-23\"],\"scriptProdSinceLastAug\":1349608878203,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":[],\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1682294708210},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1682294888213},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1682307548220},{\"ID\":\"TOR\",\"unlockedOn\":1682313128215},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1682313188210},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1682313728204},{\"ID\":\"FROZE\",\"unlockedOn\":1682314588558},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1682318199393},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1682320059392},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1682383083452},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1682389837554},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1682439904426},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1682470257546},{\"ID\":\"NITESEC\",\"unlockedOn\":1682529013119},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1682541222545},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1682563435319},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1682694406462},{\"ID\":\"TRAVEL\",\"unlockedOn\":1682772323700},{\"ID\":\"DONATION\",\"unlockedOn\":1682791697124},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1682826620322},{\"ID\":\"4S\",\"unlockedOn\":1682826620324},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1682890520880}],\"terminalCommandHistory\":[\"run hack.ramp-up.service.js -t 6000\",\"run hack.ramp-up.service.js -t 5000\",\"run hack.ramp-up.service.js -t 4000\",\"run hack.ramp-up.service.js -t 3000\",\"cat ramped-up-hosts.db.txt\",\"run hacknet.equalize.js\",\"run hacknet.service.js ram\",\"ls\",\"run routine.update-ramped-up-servers-list.js\",\"cat ramped-up-hosts.db.txt\",\"run hack.ramp-up.orchestrator.service.js\",\"run hack.orchestrator.service.js\",\"connect darkweb\",\"buy -l\",\"buy HTTPWorm.exe\",\"buy SQLInject.exe\",\"buy -a\",\"home\",\"run routine.new-script.js\",\"run hack.infect.js hack.target.js\",\"run hack.infect.js hack.ramp-up.service.js\",\"run hack.ramp-up.orchestrator.service.js\",\"run hack.infect.js hack.ramp-up.target.js\",\"run hack.ramp-up.orchestrator.service.js\",\"run hack.ramp-up.service.js -t 6000\",\"top\",\"kill 276\",\"run hack.ramp-up.service.js -t 10000\",\"run hack.ramp-up.service.js -t 9000\",\"run hack.ramp-up.service.js -t 8000\",\"run servers.upgrade.js 10\",\"run routine.ramp-up.js\",\"run fl1ght.exe\",\"nano stock.clean-target.js\",\"nano hack.orchestrator.service.js\",\"ls\",\"run stock.clean-target.js foodnstuff\",\"ls\",\"run stock.clean-target.js -t 5000\",\"run stock.clean-target.js -t 3000\",\"ls\",\"run stock.clean-target.js -t 3000\",\"rm logs/stock.clean-target.log.txt\",\"run stock.clean-target.js -t 3000\",\"nano logs/stock.clean-target.log.txt\",\"top\",\"cat ramped-up-hosts.db.txt\",\"run hack.ramp-up.orchestrator.service.js\",\"run hack.orchestrator.service.js\",\"run hack.ramp-up.service.js -t 1000\"],\"lastUpdate\":1682903520864,\"lastSave\":1682903468876,\"totalPlaytime\":609122400,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":3094,\"factionWorkType\":\"hacking\",\"factionName\":\"New Tokyo\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"88a3af4f75433\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"99.5.6.1\",\"isConnectedTo\":true,\"maxRam\":32768,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"ServerProfiler.exe\",\"DeepscanV1.exe\",\"DeepscanV2.exe\",\"AutoLink.exe\",\"Formulas.exe\"],\"ramUsed\":28917.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"hack.orchestrator.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10992.010000004937,\"pid\":193,\"ramUsage\":8.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.orchestrator.service.js\",\"url\":\"blob:file:///ef1eb528-e63e-4a22-89a8-101b6342bb18\",\"moduleSequenceNumber\":10708}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[3717055590,225000,1557000,1560000]},\"filename\":\"stock.clean-target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":92990811.43279803,\"onlineMoneyMade\":3717055590,\"onlineRunningTime\":2856.609999999593,\"pid\":1118,\"ramUsage\":8.4,\"server\":\"home\",\"threads\":3000,\"dependencies\":[{\"filename\":\"stock.clean-target.js\",\"url\":\"blob:file:///adeb29d9-5113-4d99-b5d6-a1abc9841540\",\"moduleSequenceNumber\":57592}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":914.0100000000709,\"pid\":1150,\"ramUsage\":8.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"url\":\"blob:file:///cbaea4ad-4950-4f48-9871-a489a0ba9e5b\",\"moduleSequenceNumber\":10707}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,1000,1000],\"omega-net\":[0,0,1000,0],\"rho-construction\":[0,0,1000,0],\"sigma-cosmetics\":[0,0,2000,1000],\"hong-fang-tea\":[0,0,1000,0],\"max-hardware\":[0,0,2000,1000],\"silver-helix\":[0,0,1000,0],\"johnson-ortho\":[0,0,1000,0],\"crush-fitness\":[0,0,1000,0],\"rothman-uni\":[0,0,1000,0],\"millenium-fitness\":[0,0,1000,1000]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":882049.2885755994,\"onlineMoneyMade\":0,\"onlineRunningTime\":676.610000000017,\"pid\":1173,\"ramUsage\":3.7,\"server\":\"home\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///91597377-a924-4c97-a601-5195f9cab190\",\"moduleSequenceNumber\":11217}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var discoveredHosts = ['home'];\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar availableHosts = ns.scan('home');\\n\\t\\n\\tfor (var i = 0; i < availableHosts.length; i++) {\\n\\t\\tvar current = availableHosts[i];\\n\\t\\tdiscoveredHosts.push(current);\\n\\n\\t\\tdepthFirstSearch(ns, current);\\n\\n\\t\\tns.print(\\\"Discovered hosts so far (\\\" + (i + 1) + \\\"/\\\" + availableHosts.length + \\\" root nodes done): \\\" + discoveredHosts);\\n\\t}\\n\\n\\tdiscoveredHosts.splice(0, 1); //Need to remove home from the discovery results\\n\\tdiscoveredHosts = [...new Set(discoveredHosts)]\\n\\tns.write('host-names.db.txt', JSON.stringify(discoveredHosts), 'w');\\n}\\n\\nfunction depthFirstSearch(ns, rootNode) {\\n\\tvar hostsToExplore = [rootNode];\\n\\n\\twhile (hostsToExplore.length > 0) {\\n\\t\\tvar host = hostsToExplore.pop();\\n\\t\\tvar scanResults = ns.scan(host);\\n\\n\\t\\t\\n\\n\\t\\tscanResults = removeAlreadyDiscovered(scanResults);\\n\\n\\t\\tns.print(\\\"Scan results (unexplored only) for \\\" + host + \\\": \\\" + scanResults);\\n\\n\\t\\thostsToExplore = hostsToExplore.concat(scanResults);\\n\\t\\tdiscoveredHosts = discoveredHosts.concat(scanResults);\\n\\n\\t\\tns.print(\\\"Hosts to explore: \\\" + hostsToExplore);\\n\\t}\\n}\\n\\nfunction removeAlreadyDiscovered(scanResults) {\\n\\tfor (var i = 0; i < scanResults.length; i++) {\\n\\t\\tvar result = scanResults[i];\\n\\t\\tif (discoveredHosts.indexOf(result) > -1) {\\n\\t\\t\\tscanResults.splice(i, 1);\\n\\t\\t}\\n\\t}\\n\\n\\treturn scanResults;\\n}\",\"filename\":\"discovery.run-dfs.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"discovery.run-dfs.js\",\"url\":\"blob:file:///78e2e36d-1783-4110-9dd9-7cbe98416db7\",\"moduleSequenceNumber\":10703}],\"dependents\":[],\"ramUsage\":1.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10703,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var TWO_DECIMAL_PLACES = 2;\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar hosts = JSON.parse(ns.read(\\\"host-names.db.txt\\\"));\\t\\n\\n\\tvar result = [];\\n\\n\\tfor (var serverCount = 0; serverCount < hosts.length; serverCount++) {\\n\\t\\tvar target = hosts[serverCount];\\n\\t\\tns.print('=========' + target + ' (' + calculateProgress(serverCount, hosts) + '% done)' + '=========')\\n\\t\\t\\n\\t\\tvar serverDetails = ns.getServer(target);\\n\\t\\tserverDetails[\\\"hackChance\\\"] = ns.hackAnalyzeChance(target);\\n\\n\\t\\tresult.push(serverDetails);\\n\\t}\\n\\t\\n\\tns.write('hosts-info.db.txt', JSON.stringify(result), 'w');\\n}\\n\\nfunction calculateProgress(currentIndex, hosts) {\\n\\treturn (((currentIndex + 1) / hosts.length) * 100).toFixed(TWO_DECIMAL_PLACES);\\n}\",\"filename\":\"discovery.enrich.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"discovery.enrich.js\",\"url\":\"blob:file:///c6d5a644-d82b-4550-a631-99daf4c5b0d5\",\"moduleSequenceNumber\":10704}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10704,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\tvar hackCommands = createHackCommands(ns);\\n\\n\\tvar maxNumberOfHackeablePorts = getMaximumNumberOfHackeablePorts(ns);\\n\\tvar eligibleHosts = getEligibleHosts(ns, hosts, maxNumberOfHackeablePorts);\\n\\n\\tfor (var i = 0; i < eligibleHosts.length; i++) {\\n\\t\\tvar target = eligibleHosts[i];\\n\\t\\tns.print('Rooting ' + target.hostname + ' - ' + target.numOpenPortsRequired + ' ports required');\\n\\t\\trootTheirAss(hackCommands, target);\\n\\t}\\n}\\n\\nfunction rootTheirAss(hackCommands, target) {\\n  for (var i = target.numOpenPortsRequired; i > -1; i--) {\\n    hackCommands[i](target.hostname);\\n  }\\n}\\n\\nfunction createHackCommands(ns) {\\n  var nukeDelegate = function (target) { ns.nuke(target); };\\n  var sshDelegate = function (target) { ns.brutessh(target); };\\n  var ftpDelegate = function (target) { ns.ftpcrack(target); };\\n  var smtpDelegate = function (target) { ns.relaysmtp(target); };\\n  var httpDelegate = function (target) { ns.httpworm(target); };\\n  var sqliDelegate = function (target) { ns.sqlinject(target); };\\n\\n  return [nukeDelegate, sshDelegate, ftpDelegate, smtpDelegate, httpDelegate, sqliDelegate];\\n}\\n\\nfunction getMaximumNumberOfHackeablePorts(ns) {\\n  var numberOfPorts = 0;\\n\\n  if (ns.fileExists('BruteSSH.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('FTPCrack.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('relaySMTP.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('HTTPWorm.exe')) { numberOfPorts++; }\\n  if (ns.fileExists('SQLInject.exe')) { numberOfPorts++; }\\n\\n  return numberOfPorts;\\n}\\n\\nfunction getEligibleHosts(ns, hosts, maxNumberOfHackeablePorts) {\\n  var result = [];\\n\\n  ns.print('Finding eligible hosts...');\\n\\n  for (var i = 0; i < hosts.length; i++) {\\n    var host = hosts[i];\\n\\n    if (!host.hasAdminRights && maxNumberOfHackeablePorts >= host.numOpenPortsRequired) {\\n      result.push(host);\\n    }\\n  }\\n\\n  ns.print('Rooting ' + result.length + ' hosts, ' + maxNumberOfHackeablePorts + ' maximum hackable ports');\\n\\n  return result;\\n}\",\"filename\":\"hack.rootkit.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.rootkit.js\",\"url\":\"blob:file:///306540f1-bffa-468e-ba32-59446e4f19f7\",\"moduleSequenceNumber\":10705}],\"dependents\":[],\"ramUsage\":2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10705,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.getHostname();\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.self.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.45,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10655,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4e68d14a-3b17-48c9-9491-a5538918b1e7\",\"moduleSequenceNumber\":10830}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10830,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar targetScript = ns.args[0] || \\\"self-hack.js\\\";\\n\\tvar possibleHosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\n\\tfor (var i = 0; i < possibleHosts.length; i++) {\\n\\t\\tvar target = possibleHosts[i];\\n\\n\\t\\tif (target.hasAdminRights) {\\n\\t\\t\\tns.print('Infecting ' + target.hostname + ' with ' + targetScript);\\n\\t\\t\\tns.scp(targetScript, target.hostname);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.infect.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.infect.js\",\"url\":\"blob:file:///4f064a10-3e00-4887-b359-e26251e077ec\",\"moduleSequenceNumber\":10706}],\"dependents\":[],\"ramUsage\":2.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10706,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar targetScript = ns.args[0] || \\\"self-hack.js\\\";\\n\\tvar targetMachine = ns.args[1] || 'self';\\n\\tvar possibleHosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\tvar scriptRAM = ns.getScriptRam(targetScript);\\n\\n\\tfor (var i = 0; i < possibleHosts.length; i++) {\\n\\t\\tvar target = possibleHosts[i];\\n\\n\\t\\tif (target.hasAdminRights) {\\n\\n\\t\\t\\tif (target.maxRam == 0) { continue; }\\n\\n\\t\\t\\tvar maxPossibleThreads = Math.floor(target.maxRam / scriptRAM);\\n\\n\\t\\t\\tns.print('Executing ' + targetScript + ' targetting ' + targetMachine + ' on host ' + target.hostname + ' using ' + maxPossibleThreads + ' threads');\\n\\n\\t\\t\\tns.killall(target.hostname);\\n\\t\\t\\tns.exec(targetScript, target.hostname, maxPossibleThreads, targetMachine);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.orchestrator.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.orchestrator.js\",\"url\":\"blob:file:///4660564c-5e25-4aed-a92c-21d96e3d2a5c\",\"moduleSequenceNumber\":564}],\"dependents\":[],\"ramUsage\":3.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10658,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet amountOfNodes = ns.hacknet.numNodes();\\n\\tlet higherLevelNodeValue = 0;\\n\\tlet higherLevelNodeIndex = 0;\\n\\tlet nodes = [];\\n\\n\\t//Get the stats for each node\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tnodes.push(ns.hacknet.getNodeStats(i));\\n\\t}\\n\\n\\t//Get the highest level node information\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tlet target = nodes[i];\\n\\t\\tif (target.level > higherLevelNodeValue) {\\n\\t\\t\\thigherLevelNodeValue = target.level;\\n\\t\\t\\thigherLevelNodeIndex = i;\\n\\t\\t}\\n\\t}\\n\\n\\t//Equalize levels\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tlet target = nodes[i];\\n\\t\\tequalizeLevels(ns, i, target.level, higherLevelNodeValue);\\n\\t}\\n\\n\\t//Buy as many nodes as possible and equalize them\\n\\twhile (ns.getPlayer().money > ns.hacknet.getPurchaseNodeCost()) {\\n\\t\\tlet newNodeIndex = ns.hacknet.purchaseNode();\\n\\t\\tamountOfNodes++;\\n\\t\\tlet node = ns.hacknet.getNodeStats(newNodeIndex);\\n\\t\\tequalizeLevels(ns, newNodeIndex, node.level, higherLevelNodeValue);\\n\\t}\\n\\n\\t//Buy as many levels as possible with the remaining money\\n\\twhile(ns.getPlayer().money > ns.hacknet.getLevelUpgradeCost(higherLevelNodeIndex, 1)) {\\n\\t\\tfor(let i = 0; i < amountOfNodes; i++) {\\n\\t\\t\\tns.hacknet.upgradeLevel(i, 1);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction equalizeLevels(ns, targetNodeIndex, targetNodeLevel, levelToEqualize) {\\n\\tif (targetNodeLevel < levelToEqualize) {\\n\\t\\tlet levelsToUpgrade = levelToEqualize - targetNodeLevel;\\n\\t\\tns.hacknet.upgradeLevel(targetNodeIndex, levelsToUpgrade);\\n\\t}\\n}\",\"filename\":\"hacknet.spend-all.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hacknet.spend-all.js\",\"url\":\"blob:file:///74b45fda-2f0a-49dd-a76e-2d4f989130a0\",\"moduleSequenceNumber\":530}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10659,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet targetProperty = ns.args[0] || \\\"level\\\";\\n\\tlet amountOfNodes = ns.hacknet.numNodes();\\n\\n\\tlet lastUpgradedNodeIndex = 0;\\n\\n\\twhile (true) {\\n\\t\\twhile (ns.getPlayer().money > getUpgradeCost(ns, targetProperty, lastUpgradedNodeIndex)) {\\n\\t\\t\\tupgradeNode(ns, targetProperty, lastUpgradedNodeIndex);\\n\\t\\t\\tlastUpgradedNodeIndex++;\\n\\n\\t\\t\\tif (lastUpgradedNodeIndex >= amountOfNodes) {\\n\\t\\t\\t\\tlastUpgradedNodeIndex = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(5000);\\n\\t}\\n}\\n\\nfunction getUpgradeCost(ns, targetProperty, nodeIndex){\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\treturn ns.hacknet.getLevelUpgradeCost(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\treturn ns.hacknet.getRamUpgradeCost(nodeIndex, 1);\\n\\t} else {\\n\\t\\treturn ns.hacknet.getCoreUpgradeCost(nodeIndex, 1);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction upgradeNode(ns, targetProperty, nodeIndex) {\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\tns.hacknet.upgradeLevel(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\tns.hacknet.upgradeRam(nodeIndex, 1);\\n\\t} else {\\n\\t\\tns.hacknet.upgradeCore(nodeIndex, 1);\\n\\t}\\n}\",\"filename\":\"hacknet.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hacknet.service.js\",\"url\":\"blob:file:///9b67ae9d-2b3d-46c1-82e7-4e07011842bb\",\"moduleSequenceNumber\":10677}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10677,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar ram = ns.args[0] || 8;\\n\\tvar scriptName = ns.args[1] || 'hack.target.js';\\n\\tvar scriptTarget = ns.args[2] || 'n00dles';\\n\\tvar scriptRAM =  ns.getScriptRam(scriptName);\\n\\n\\tvar serverCount = 0;\\n\\n\\t// Continuously try to purchase servers until we've reached the maximum amount of servers\\n\\twhile (serverCount < ns.getPurchasedServerLimit()) {    \\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {        \\n\\t\\t\\tvar hostname = ns.purchaseServer(\\\"pserv\\\" , ram);\\n\\t\\t\\tvar maxPossibleThreads = Math.floor(ram/scriptRAM);\\n\\n\\t\\t\\tns.scp(scriptName, hostname);\\n\\t\\t\\tns.exec(scriptName, hostname, maxPossibleThreads, scriptTarget);\\n\\t\\t\\tserverCount++;\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\",\"filename\":\"servers.purchase.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"servers.purchase.js\",\"url\":\"blob:file:///772370ee-3ec7-44d1-b4c7-9a112ba1ad71\",\"moduleSequenceNumber\":10999}],\"dependents\":[],\"ramUsage\":6.25,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10999,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet targetProperty = ns.args[0] || \\\"level\\\";\\n\\tlet amountOfNodes = ns.hacknet.numNodes();\\n\\tlet highestNodeLevels = {\\n\\t\\tlevel: 0,\\n\\t\\tram: 0,\\n\\t\\tcores: 0\\n\\t};\\n\\tlet nodes = [];\\n\\n\\t//Get the stats for each node\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tnodes.push(ns.hacknet.getNodeStats(i));\\n\\t}\\n\\n\\thighestNodeLevels = getHighestNodeLevels(nodes);\\n\\n\\t//Equalize levels\\n\\tfor (let i = 0; i < amountOfNodes; i++) {\\n\\t\\tlet target = nodes[i];\\n\\n\\t\\twhile(isNotEqualized(ns, target, highestNodeLevels, targetProperty)){\\n\\t\\t\\tif(ns.getPlayer().money > getUpgradeCost(ns, targetProperty, i)){\\n\\t\\t\\t\\tupgradeNode(ns, targetProperty, i);\\n\\t\\t\\t\\ttarget = ns.hacknet.getNodeStats(i);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tawait ns.sleep(5000);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction isNotEqualized(ns, target, highestNodeLevels, targetProperty) {\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\treturn target.level < highestNodeLevels.level; \\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\treturn target.ram < highestNodeLevels.ram;\\n\\t} else {\\n\\t\\treturn target.cores < highestNodeLevels.cores;\\n\\t}\\n}\\n\\nfunction getUpgradeCost(ns, targetProperty, nodeIndex){\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\treturn ns.hacknet.getLevelUpgradeCost(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\treturn ns.hacknet.getRamUpgradeCost(nodeIndex, 1);\\n\\t} else {\\n\\t\\treturn ns.hacknet.getCoreUpgradeCost(nodeIndex, 1);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction upgradeNode(ns, targetProperty, nodeIndex) {\\n\\tif(targetProperty == \\\"level\\\"){\\n\\t\\tns.hacknet.upgradeLevel(nodeIndex, 1);\\n\\t} else if (targetProperty == \\\"ram\\\") {\\n\\t\\tns.hacknet.upgradeRam(nodeIndex, 1);\\n\\t} else {\\n\\t\\tns.hacknet.upgradeCore(nodeIndex, 1);\\n\\t}\\n}\\n\\nfunction getHighestNodeLevels(nodes){\\n\\tlet highestNodeLevels = {\\n\\t\\tlevel: 0,\\n\\t\\tram: 0,\\n\\t\\tcores: 0\\n\\t};\\n\\n\\tfor (let i = 0; i < nodes.length; i++) {\\n\\t\\tlet target = nodes[i];\\n\\t\\tif (target.level > highestNodeLevels.level) {\\n\\t\\t\\thighestNodeLevels.level = target.level;\\n\\t\\t}\\n\\n\\t\\tif (target.ram > highestNodeLevels.ram) {\\n\\t\\t\\thighestNodeLevels.ram = target.ram;\\n\\t\\t}\\n\\t\\t\\n\\t\\tif (target.cores > highestNodeLevels.cores) {\\n\\t\\t\\thighestNodeLevels.cores = target.cores;\\n\\t\\t}\\n\\t}\\n\\n\\treturn highestNodeLevels;\\n}\",\"filename\":\"hacknet.equalize.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hacknet.equalize.js\",\"url\":\"blob:file:///4d07e097-0c76-48fa-bfc7-7bcbbff4ebea\",\"moduleSequenceNumber\":11911}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":11911,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (ns.getPlayer().money > ns.hacknet.getPurchaseNodeCost()) {\\n\\t\\tns.hacknet.purchaseNode();\\n\\t}\\n}\",\"filename\":\"hacknet.purchase-nodes.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hacknet.purchase-nodes.js\",\"url\":\"blob:file:///68abb863-fe91-40e2-ab24-b0a17284b3cd\",\"moduleSequenceNumber\":10676}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10676,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(ns, hosts);\\t\\t\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\t\\t\\t\\n\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t} else if (ns.getServerMoneyAvailable(host.hostname) < moneyThreshold) {\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif(ns.fileExists('ramped-up-hosts.db.txt')){\\n\\t\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read('ramped-up-hosts.db.txt'));\\n\\t\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\t\\tns.write('ramped-up-hosts.db.txt', JSON.stringify(rampedHosts), 'w');\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tns.write('ramped-up-hosts.db.txt', JSON.stringify([host.hostname]), 'w');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction selectHosts(ns, hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\tvar privateServers = ns.getPurchasedServers();\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\tprivateServers.includes(host)\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.ramp-up.js\",\"url\":\"blob:file:///05c031eb-2023-457a-90db-d1980588e91d\",\"moduleSequenceNumber\":1398}],\"dependents\":[],\"ramUsage\":4.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10664,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///91597377-a924-4c97-a601-5195f9cab190\",\"moduleSequenceNumber\":11217}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":11217,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar rampedServers = JSON.parse(ns.read('ramped-up-hosts.db.txt'));\\n\\t\\tvar resourceServers = selectResourceServers(ns, hosts);\\n\\n\\t\\tvar availableRam = resourceServers\\n\\t\\t\\t.map(server => server.maxRam)\\n\\t\\t\\t.reduce((prev, next) => prev + next);\\n\\n\\t\\tvar scriptRam = ns.getScriptRam('hack.target.js');\\n\\t\\tvar maxThreads = Math.floor(availableRam / scriptRam);\\n\\t\\tvar maxThreadsPerTarget = Math.floor(maxThreads / rampedServers.length);\\n\\t\\tvar serverIndex = 0;\\n\\n\\t\\tfor (let server of resourceServers) {\\n\\t\\t\\tns.killall(server.hostname);\\n\\t\\t}\\n\\n\\t\\tlog(ns, '==============================');\\n\\t\\tlog(ns, 'Starting to hack ' + rampedServers.length + ' servers with a max of ' + maxThreadsPerTarget + ' threads each')\\n\\t\\tlog(ns, '==============================');\\n\\n\\t\\tfor (let target of rampedServers) {\\n\\t\\t\\tvar targetHackThreadsLeft = getIdealHackThreadsForTarget(ns, target, maxThreadsPerTarget);\\n\\n\\t\\t\\tlog(ns, 'Starting threads for ' + target);\\n\\n\\t\\t\\twhile (targetHackThreadsLeft > 0 && serverIndex < resourceServers.length) {\\n\\t\\t\\t\\tvar server = resourceServers[serverIndex];\\n\\t\\t\\t\\tvar server = ns.getServer(server.hostname);\\n\\t\\t\\t\\tvar availableRam = server.maxRam - server.ramUsed;\\n\\t\\t\\t\\tvar maxThreadsInThisServer = Math.floor(availableRam / scriptRam);\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer <= 0) {\\n\\t\\t\\t\\t\\tlog(ns, 'No more threads possible on server ' + serverIndex + ' - ' + server.hostname);\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer >= targetHackThreadsLeft) {\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' has capacity for all threads. Starting ' + targetHackThreadsLeft + '.ThreadsLeft: 0');\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\ttargetHackThreadsLeft,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = 0;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = targetHackThreadsLeft - maxThreadsInThisServer;\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' does not have capacity for all threads. Starting ' + maxThreadsInThisServer + '.Threads left: ' + targetHackThreadsLeft);\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\tmaxThreadsInThisServer,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t}\\t\\t\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\n\\t\\tawait ns.sleep(1800000);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction getIdealHackThreadsForTarget(ns, targetHostname, maxThreadsPerTarget) {\\n\\tvar hackChanceForTarget = ns.hackAnalyzeChance(targetHostname);\\n\\n\\tif (hackChanceForTarget > 0.9) {\\n\\t\\treturn Math.min(10, maxThreadsPerTarget);\\n\\t} else if (hackChanceForTarget > 0.8) {\\n\\t\\treturn Math.min(20, maxThreadsPerTarget);\\n\\t}\\n\\n\\treturn Math.min(30, maxThreadsPerTarget);\\n}\\n\\n/** @param {NS} ns */\\nfunction selectResourceServers(ns, hosts) {\\n\\tvar selectedHosts = [];\\n\\tvar privateServers = ns.getPurchasedServers();\\n\\t\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\t!host.hasAdminRights \\n\\t\\t\\t|| host.hostname == 'home' \\n\\t\\t\\t|| privateServers.includes(host.hostname)\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\n/** @param {NS} ns */\\nfunction log(ns, info) {\\n\\tvar date = new Date();\\n\\tvar info = '[' + date.toISOString() + '] ' + info + '\\\\n'\\n\\tns.write('/logs/hack.orchestrator.service.log.txt', info, 'a');\\n}\",\"filename\":\"hack.orchestrator.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.orchestrator.service.js\",\"url\":\"blob:file:///ef1eb528-e63e-4a22-89a8-101b6342bb18\",\"moduleSequenceNumber\":10708}],\"dependents\":[],\"ramUsage\":8.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10708,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.run('discovery.run-dfs.js');\\n\\tns.run('discovery.enrich.js');\\n\\tns.run('hack.rootkit.js');\\n\\tns.run('discovery.enrich.js');\\n\\tns.run('hack.infect.js', 1, 'hack.target.js');\\n\\t\\n\\tns.kill('hack.orchestrator.service.js');\\n\\tns.kill('hack.ramp-up.orchestrator.service.js');\\n\\t\\n\\tns.run('hack.ramp-up.orchestrator.service.js');\\n\\tns.run('hack.orchestrator.service.js');\\n}\",\"filename\":\"routine.new-script.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"routine.new-script.js\",\"url\":\"blob:file:///1f41c5e6-cf65-4d56-a831-f5e2d369de8c\",\"moduleSequenceNumber\":10702}],\"dependents\":[],\"ramUsage\":3.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10702,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar ram = ns.args[0] || 8;\\n\\tvar scriptName = ns.args[1] || 'hack.target.js';\\n\\n\\tvar serverCount = 0;\\n\\n\\t// Continuously try to purchase servers until we've reached the maximum amount of servers\\n\\twhile (serverCount < ns.getPurchasedServerLimit()) {    \\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {        \\n\\t\\t\\tvar hostname = ns.purchaseServer(\\\"pserv\\\" , ram);\\n\\n\\t\\t\\tns.scp(scriptName, hostname);\\n\\t\\t\\tserverCount++;\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\",\"filename\":\"server.purchase.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"server.purchase.js\",\"url\":\"blob:file:///748ad3ac-cdbe-47e7-9913-9e2009ef6fe2\",\"moduleSequenceNumber\":8414}],\"dependents\":[],\"ramUsage\":4.85,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10668,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet purchasedServers = ns.getPurchasedServers();\\n\\tlet ram = ns.getServerMaxRam('pserv') * 2;\\n\\tlet waitTimeInSeconds = ns.args[0] || 0;\\n\\t\\n\\twhile (ram < Math.pow(2, 20)) {\\n\\t\\tfor (let server of purchasedServers) {\\n\\t\\t\\tns.print('Started upgrade process for ' + server + ' (to ' + ram + 'GB of RAM)');\\n\\t\\t\\t// Wait until we have money available to purchase next upgrade\\n\\t\\t\\twhile (ns.getServerMoneyAvailable('home') < ns.getPurchasedServerUpgradeCost(server, ram)) {\\n\\t\\t\\t\\tns.print('Current money: ' + ns.getServerMoneyAvailable('home'));\\n\\t\\t\\t\\tns.print('Cost of next upgrade: ' + ns.getPurchasedServerUpgradeCost(server, ram));\\n\\t\\t\\t\\tawait ns.sleep(60000);\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.upgradePurchasedServer(server, ram);\\n\\t\\t\\tns.print('Server ' + server + ' upgraded to ' + ram + 'GB of RAM');\\n\\t\\t}\\n\\n\\t\\tram = ram * 2;\\n\\n\\t\\tns.print('Waiting '+ waitTimeInSeconds +' seconds before triggering upgrades again');\\n\\t\\tawait ns.sleep(waitTimeInSeconds * 1000);\\n\\t}\\n}\",\"filename\":\"servers.upgrade.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"servers.upgrade.js\",\"url\":\"blob:file:///eab3bf75-d218-42a9-94ae-b58e66c43710\",\"moduleSequenceNumber\":11075}],\"dependents\":[],\"ramUsage\":4.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":11075,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerUpgradeCost\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"upgradePurchasedServer\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar reservedServers = ns.getPurchasedServers().slice(0, 14);\\n\\tns.run('discovery.run-dfs.js');\\n\\tns.run('discovery.enrich.js');\\n\\n\\tfor(let server of reservedServers) {\\n\\t\\tns.scp('hosts-info.db.txt', server);\\n\\t\\tns.scp('hack.ramp-up.service.js', server);\\n\\t\\tns.killall(server);\\n\\n\\t\\tns.exec('hack.ramp-up.service.js', server, getMaxThreads(ns, server, 'hack.ramp-up.service.js'));\\n\\t}\\n\\n\\tns.scriptKill('hack.ramp-up.service.js', 'home');\\n\\tns.exec('hack.ramp-up.service.js', 'home', 1);\\n}\\n\\nfunction getMaxThreads(ns, server, script) {\\n\\tvar serverMaxRam = ns.getServerMaxRam(server);\\n\\tvar scriptRam = ns.getScriptRam(script);\\n\\treturn Math.floor(serverMaxRam / scriptRam);\\n}\",\"filename\":\"routine.ramp-up.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"routine.ramp-up.js\",\"url\":\"blob:file:///1203c2e2-1689-498b-95c7-3ee46efe6eb9\",\"moduleSequenceNumber\":11174}],\"dependents\":[],\"ramUsage\":8.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":11174,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///6665d847-6009-4f20-9c51-399d01aba5a6\",\"moduleSequenceNumber\":10757}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10757,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\t\\t\\n\\t\\tvar rampedServers = JSON.parse(ns.read('ramped-up-hosts.db.txt'));\\n\\t\\tvar resourceServers = selectResourceServers(ns);\\n\\n\\t\\tvar availableRam = resourceServers\\n\\t\\t\\t.map(server => server.maxRam)\\n\\t\\t\\t.reduce((prev, next) => prev + next);\\n\\n\\t\\tvar scriptRam = ns.getScriptRam('hack.ramp-up.target.js');\\n\\t\\tvar maxThreads = Math.floor(availableRam / scriptRam);\\n\\t\\tvar maxThreadsPerTarget = Math.floor(maxThreads / rampedServers.length);\\n\\t\\tvar serverIndex = 0;\\n\\n\\t\\tfor (let server of resourceServers) {\\n\\t\\t\\tns.killall(server.hostname);\\n\\t\\t}\\n\\n\\t\\tlog(ns, '==============================');\\n\\t\\tlog(ns, 'Starting to ramp up ' + rampedServers.length + ' servers with a max of ' + maxThreadsPerTarget + ' threads each')\\n\\t\\tlog(ns, '==============================');\\n\\n\\t\\tfor (let target of rampedServers) {\\n\\t\\t\\tvar targetHackThreadsLeft = getIdealRampUpThreadsForTarget(ns, target, maxThreadsPerTarget);\\n\\n\\t\\t\\tlog(ns, 'Starting threads for ' + target);\\n\\n\\t\\t\\twhile (targetHackThreadsLeft > 0 && serverIndex < resourceServers.length) {\\n\\t\\t\\t\\tvar server = resourceServers[serverIndex];\\n\\t\\t\\t\\tvar server = ns.getServer(server.hostname);\\n\\t\\t\\t\\tvar availableRam = server.maxRam - server.ramUsed;\\n\\t\\t\\t\\tvar maxThreadsInThisServer = Math.floor(availableRam / scriptRam);\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer <= 0) {\\n\\t\\t\\t\\t\\tlog(ns, 'No more threads possible on server ' + serverIndex + ' - ' + server.hostname);\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (maxThreadsInThisServer >= targetHackThreadsLeft) {\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' has capacity for all threads. Starting ' + targetHackThreadsLeft + '.ThreadsLeft: 0');\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.ramp-up.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\ttargetHackThreadsLeft,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = 0;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ttargetHackThreadsLeft = targetHackThreadsLeft - maxThreadsInThisServer;\\n\\t\\t\\t\\t\\tlog(ns, 'Server ' + server.hostname + ' does not have capacity for all threads. Starting ' + maxThreadsInThisServer + '.Threads left: ' + targetHackThreadsLeft);\\n\\t\\t\\t\\t\\tns.exec(\\n\\t\\t\\t\\t\\t\\t'hack.ramp-up.target.js',\\n\\t\\t\\t\\t\\t\\tserver.hostname,\\n\\t\\t\\t\\t\\t\\tmaxThreadsInThisServer,\\n\\t\\t\\t\\t\\t\\ttarget\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\tserverIndex++;\\n\\t\\t\\t\\t}\\t\\t\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\n\\t\\tawait ns.sleep(60000 * 10);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction getIdealRampUpThreadsForTarget(ns, targetHostname, maxThreadsPerTarget) {\\n\\tvar hackChanceForTarget = ns.hackAnalyzeChance(targetHostname);\\n\\n\\tif(hackChanceForTarget > 0.8){\\n\\t\\treturn Math.min(1000, maxThreadsPerTarget);\\n\\t} else if(hackChanceForTarget > 0.6) {\\n\\t\\treturn Math.min(2000, maxThreadsPerTarget);\\n\\t} \\n\\n\\treturn Math.min(3000, maxThreadsPerTarget);\\n}\\n\\n/** @param {NS} ns */\\nfunction selectResourceServers(ns) {\\n\\tvar rampUpPrivateServers = ns.getPurchasedServers().slice(14);\\t\\t\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let server of rampUpPrivateServers) {\\n\\t\\tselectedHosts.push(ns.getServer(server));\\t\\t\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\n/** @param {NS} ns */\\nfunction log(ns, info) {\\n\\tvar date = new Date();\\n\\tvar info = '[' + date.toISOString() + '] ' + info + '\\\\n';\\t\\n\\tns.write('/logs/hack.ramp-up.orchestrator.service.log.txt', info, 'a');\\n}\",\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.orchestrator.service.js\",\"url\":\"blob:file:///cbaea4ad-4950-4f48-9871-a489a0ba9e5b\",\"moduleSequenceNumber\":10707}],\"dependents\":[],\"ramUsage\":8.75,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10707,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar servers = ns.getPurchasedServers();\\n\\t\\n\\tvar ramValues = servers\\n\\t\\t.map(server => ns.getServer(server))\\n\\t\\t.map(server => server.maxRam);\\n\\t\\n\\tvar targetRam = Math.max(... ramValues);\\t\\n\\n\\tfor(let server of servers){\\t\\t\\n\\t\\tvar serverInfo = ns.getServer(server);\\n\\t\\tif(serverInfo.maxRam < targetRam){\\t\\n\\t\\t\\tns.print('Started upgrade process for ' + server + ' (to ' + targetRam + 'GB of RAM)');\\n\\n\\t\\t\\twhile (ns.getPlayer().money < ns.getPurchasedServerUpgradeCost(serverInfo.hostname, targetRam)) {\\n\\t\\t\\t\\tns.print('Current money: ' + ns.getPlayer().money);\\n\\t\\t\\t\\tns.print('Cost of next upgrade for ' + serverInfo.hostname + ': ' + ns.getPurchasedServerUpgradeCost(serverInfo.hostname, targetRam));\\n\\t\\t\\t\\tawait ns.sleep(60000);\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.upgradePurchasedServer(serverInfo.hostname, targetRam);\\n\\t\\t\\tns.print('Server ' + server + ' upgraded to ' + targetRam + 'GB of RAM');\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"servers.equalize.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"servers.equalize.js\",\"url\":\"blob:file:///b4c2f3e3-750d-464e-b57a-603bb995c1ff\",\"moduleSequenceNumber\":49915}],\"dependents\":[],\"ramUsage\":6.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10673,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPurchasedServerUpgradeCost\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"upgradePurchasedServer\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\n\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\tvar selectedHosts = selectHosts(hosts);\\n\\tvar rampedUpHosts = [];\\n\\n\\tfor (let host of selectedHosts) {\\n\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\t\\tif (\\n\\t\\t\\tns.getServerSecurityLevel(host.hostname) <= securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) > moneyThreshold\\n\\t\\t) {\\n\\t\\t\\trampedUpHosts.push(host.hostname);\\n\\t\\t}\\n\\t}\\n\\t\\n\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedUpHosts), \\\"w\\\");\\n}\\n\\nfunction selectHosts(hosts) {\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\",\"filename\":\"routine.update-ramped-up-servers-list.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"routine.update-ramped-up-servers-list.js\",\"url\":\"blob:file:///895eb498-5750-4ede-b8c5-ba31bea9e13b\",\"moduleSequenceNumber\":11975}],\"dependents\":[],\"ramUsage\":2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":11975,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.print(ns.hacknet.maxNumNodes());\\t\\n}\",\"filename\":\"test.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"test.js\",\"url\":\"blob:file:///7f2eddcd-4755-4957-b904-159d640a68ff\",\"moduleSequenceNumber\":153518}],\"dependents\":[],\"ramUsage\":5.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":10675,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || 'foodnstuff';\\n\\tvar stockSymbol = ns.args[1] || 'FNS';\\n\\tvar serverDetails = ns.getServer(target);\\n\\tvar moneyThreshold = serverDetails.moneyMax * 0.1;\\n\\n\\twhile (true) {\\n\\t\\tvar initialAskPrice = ns.stock.getAskPrice(stockSymbol);\\n\\t\\tvar initialBidPrice = ns.stock.getBidPrice(stockSymbol);\\n\\n\\t\\tawait rampUp(ns, target);\\n\\n\\t\\twhile (ns.getServerMoneyAvailable(target) > moneyThreshold) {\\n\\t\\t\\tawait ns.hack(target, { stock: true });\\n\\t\\t}\\n\\n\\t\\tlog(ns, '=============== SUMMARY ===============');\\n\\t\\tlog(ns, 'Initial ask price: ' + initialAskPrice);\\n\\t\\tlog(ns, 'Final ask price: ' + ns.stock.getAskPrice(stockSymbol));\\n\\t\\tlog(ns, 'Initial bid price: ' + initialBidPrice);\\n\\t\\tlog(ns, 'Final bid price: ' + ns.stock.getBidPrice(stockSymbol));\\n\\t\\tlog(ns, '=======================================');\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\\n\\n/** @param {NS} ns */\\nfunction log(ns, info) {\\n\\tvar date = new Date();\\n\\tvar info = '[' + date.toISOString() + '] ' + info + '\\\\n'\\n\\tns.write('/logs/stock.clean-target.log.txt', info, 'a');\\n}\\n\\nasync function rampUp(ns, target) {\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (\\n\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\tlog(ns, '========================');\\n\\t\\t\\tlog(ns, 'Weakening server ' + target);\\n\\t\\t\\tlog(ns, 'Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\tlog(ns, '========================');\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tlog(ns, '========================');\\n\\t\\tlog(ns, 'Growing server ' + target);\\n\\t\\tlog(ns, 'Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\tlog(ns, '========================');\\n\\t\\tawait ns.grow(target);\\n\\t}\\n}\",\"filename\":\"stock.clean-target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"stock.clean-target.js\",\"url\":\"blob:file:///7e25d67f-f8fa-4968-90fe-66194bdbadaa\",\"moduleSequenceNumber\":58215}],\"dependents\":[],\"ramUsage\":8.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":58215,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"pserv\",\"pserv-0\",\"pserv-1\",\"pserv-2\",\"pserv-3\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-7\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-14\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-20\",\"pserv-21\",\"pserv-22\",\"pserv-23\",\"darkweb\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.139999999999997,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":396266008,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.347999999999999,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":35941560,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.684,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":68750000,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":39336980,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.219999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":75000000,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.703999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":158325940,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.155999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":83544200,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.251999999999995,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":153107335,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.787999999999998,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":332502080,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8720000000000026,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1070930,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":27.599999999999998,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":131068.8,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":3.04,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":31535462.751318976,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"host-names.db.txt\",\"text\":\"[\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"zb-institute\\\",\\\"I.I.I.I\\\",\\\"aevum-police\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"deltaone\\\",\\\"unitalife\\\",\\\"solaris\\\",\\\"zeus-med\\\",\\\"infocomm\\\",\\\"applied-energetics\\\",\\\"run4theh111z\\\",\\\"stormtech\\\",\\\"omnitek\\\",\\\"4sigma\\\",\\\"clarkinc\\\",\\\"fulcrumassets\\\",\\\"b-and-a\\\",\\\"powerhouse-fitness\\\",\\\"megacorp\\\",\\\"The-Cave\\\",\\\"ecorp\\\",\\\"nova-med\\\",\\\"icarus\\\",\\\"univ-energy\\\",\\\"zb-def\\\",\\\"titan-labs\\\",\\\"fulcrumtech\\\",\\\"vitalife\\\",\\\"kuai-gong\\\",\\\"blade\\\",\\\"defcomm\\\",\\\"taiyang-digital\\\",\\\"microdyne\\\",\\\"helios\\\",\\\".\\\",\\\"nwo\\\",\\\"lexo-corp\\\",\\\"rho-construction\\\",\\\"alpha-ent\\\",\\\"galactic-cyber\\\",\\\"global-pharm\\\",\\\"snap-fitness\\\",\\\"netlink\\\",\\\"syscore\\\",\\\"sigma-cosmetics\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"computek\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"avmnite-02h\\\",\\\"catalyst\\\",\\\"rothman-uni\\\",\\\"summit-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"n00dles\\\",\\\"home\\\",\\\"pserv\\\",\\\"pserv-0\\\",\\\"pserv-1\\\",\\\"pserv-2\\\",\\\"pserv-3\\\",\\\"pserv-4\\\",\\\"pserv-5\\\",\\\"pserv-6\\\",\\\"pserv-7\\\",\\\"pserv-8\\\",\\\"pserv-9\\\",\\\"pserv-10\\\",\\\"pserv-11\\\",\\\"pserv-12\\\",\\\"pserv-13\\\",\\\"pserv-14\\\",\\\"pserv-15\\\",\\\"pserv-16\\\",\\\"pserv-17\\\",\\\"pserv-18\\\",\\\"pserv-19\\\",\\\"pserv-20\\\",\\\"pserv-21\\\",\\\"pserv-22\\\",\\\"pserv-23\\\",\\\"foodnstuff\\\",\\\"darkweb\\\",\\\"CSEC\\\"]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"/logs/hack.ramp-up.orchestrator.service.log.txt\",\"text\":\"[2023-04-29T13:21:22.317Z] ==============================\\n[2023-04-29T13:21:22.322Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:21:22.322Z] ==============================\\n[2023-04-29T13:21:22.322Z] Starting threads for n00dles\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for foodnstuff\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for joesguns\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for nectar-net\\n[2023-04-29T13:21:22.322Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for max-hardware\\n[2023-04-29T13:21:22.322Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for neo-net\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for zer0\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for iron-gym\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for phantasy\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for omega-net\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for crush-fitness\\n[2023-04-29T13:21:22.322Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.322Z] Starting threads for the-hub\\n[2023-04-29T13:21:22.322Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:21:22.322Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for rothman-uni\\n[2023-04-29T13:21:22.323Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for johnson-ortho\\n[2023-04-29T13:21:22.323Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for rho-construction\\n[2023-04-29T13:21:22.323Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for computek\\n[2023-04-29T13:21:22.323Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:21:22.323Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:21:22.323Z] Starting threads for millenium-fitness\\n[2023-04-29T13:21:22.323Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] ==============================\\n[2023-04-29T13:27:21.154Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:27:21.154Z] ==============================\\n[2023-04-29T13:27:21.154Z] Starting threads for n00dles\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for foodnstuff\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for joesguns\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.154Z] Starting threads for nectar-net\\n[2023-04-29T13:27:21.154Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for max-hardware\\n[2023-04-29T13:27:21.155Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for neo-net\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for zer0\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for iron-gym\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for phantasy\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for omega-net\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for crush-fitness\\n[2023-04-29T13:27:21.155Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for the-hub\\n[2023-04-29T13:27:21.155Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for rothman-uni\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for johnson-ortho\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for rho-construction\\n[2023-04-29T13:27:21.155Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for computek\\n[2023-04-29T13:27:21.155Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:27:21.155Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:27:21.155Z] Starting threads for millenium-fitness\\n[2023-04-29T13:27:21.155Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] ==============================\\n[2023-04-29T13:37:21.165Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:37:21.165Z] ==============================\\n[2023-04-29T13:37:21.165Z] Starting threads for n00dles\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for foodnstuff\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for joesguns\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for nectar-net\\n[2023-04-29T13:37:21.165Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for max-hardware\\n[2023-04-29T13:37:21.165Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for neo-net\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for zer0\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for iron-gym\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for phantasy\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for omega-net\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for crush-fitness\\n[2023-04-29T13:37:21.165Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.165Z] Starting threads for the-hub\\n[2023-04-29T13:37:21.166Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for rothman-uni\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for johnson-ortho\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for rho-construction\\n[2023-04-29T13:37:21.166Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for computek\\n[2023-04-29T13:37:21.166Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:37:21.166Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:37:21.166Z] Starting threads for millenium-fitness\\n[2023-04-29T13:37:21.166Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.174Z] ==============================\\n[2023-04-29T13:47:21.174Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:47:21.174Z] ==============================\\n[2023-04-29T13:47:21.174Z] Starting threads for n00dles\\n[2023-04-29T13:47:21.174Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.174Z] Starting threads for foodnstuff\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for joesguns\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for nectar-net\\n[2023-04-29T13:47:21.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for max-hardware\\n[2023-04-29T13:47:21.175Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for neo-net\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for zer0\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for iron-gym\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for phantasy\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for omega-net\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for crush-fitness\\n[2023-04-29T13:47:21.175Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for the-hub\\n[2023-04-29T13:47:21.175Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for rothman-uni\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for johnson-ortho\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for rho-construction\\n[2023-04-29T13:47:21.175Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for computek\\n[2023-04-29T13:47:21.175Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T13:47:21.175Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T13:47:21.175Z] Starting threads for millenium-fitness\\n[2023-04-29T13:47:21.175Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] ==============================\\n[2023-04-29T13:57:21.193Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T13:57:21.193Z] ==============================\\n[2023-04-29T13:57:21.193Z] Starting threads for n00dles\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for foodnstuff\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for joesguns\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for nectar-net\\n[2023-04-29T13:57:21.193Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for max-hardware\\n[2023-04-29T13:57:21.193Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for neo-net\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for zer0\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for iron-gym\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for phantasy\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for omega-net\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for crush-fitness\\n[2023-04-29T13:57:21.193Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.193Z] Starting threads for the-hub\\n[2023-04-29T13:57:21.193Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for rothman-uni\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for johnson-ortho\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for rho-construction\\n[2023-04-29T13:57:21.194Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for computek\\n[2023-04-29T13:57:21.194Z] Server pserv-15 does not have capacity for all threads. Starting 1369.Threads left: 631\\n[2023-04-29T13:57:21.194Z] Server pserv-16 has capacity for all threads. Starting 631.ThreadsLeft: 0\\n[2023-04-29T13:57:21.194Z] Starting threads for millenium-fitness\\n[2023-04-29T13:57:21.194Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] ==============================\\n[2023-04-29T14:07:21.204Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:07:21.204Z] ==============================\\n[2023-04-29T14:07:21.204Z] Starting threads for n00dles\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for foodnstuff\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for joesguns\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for nectar-net\\n[2023-04-29T14:07:21.204Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for max-hardware\\n[2023-04-29T14:07:21.204Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for neo-net\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for zer0\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for iron-gym\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for phantasy\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for omega-net\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for crush-fitness\\n[2023-04-29T14:07:21.204Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for the-hub\\n[2023-04-29T14:07:21.204Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for rothman-uni\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for johnson-ortho\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for rho-construction\\n[2023-04-29T14:07:21.204Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:07:21.204Z] Starting threads for computek\\n[2023-04-29T14:07:21.204Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:07:21.205Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:07:21.205Z] Starting threads for millenium-fitness\\n[2023-04-29T14:07:21.205Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] ==============================\\n[2023-04-29T14:17:21.217Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:17:21.217Z] ==============================\\n[2023-04-29T14:17:21.217Z] Starting threads for n00dles\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for foodnstuff\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for joesguns\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for nectar-net\\n[2023-04-29T14:17:21.217Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for max-hardware\\n[2023-04-29T14:17:21.217Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for neo-net\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for zer0\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for iron-gym\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for phantasy\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for omega-net\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for crush-fitness\\n[2023-04-29T14:17:21.217Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.217Z] Starting threads for the-hub\\n[2023-04-29T14:17:21.217Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:17:21.217Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for rothman-uni\\n[2023-04-29T14:17:21.218Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for johnson-ortho\\n[2023-04-29T14:17:21.218Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for rho-construction\\n[2023-04-29T14:17:21.218Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for computek\\n[2023-04-29T14:17:21.218Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:17:21.218Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:17:21.218Z] Starting threads for millenium-fitness\\n[2023-04-29T14:17:21.218Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.220Z] ==============================\\n[2023-04-29T14:27:21.220Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:27:21.220Z] ==============================\\n[2023-04-29T14:27:21.220Z] Starting threads for n00dles\\n[2023-04-29T14:27:21.220Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for foodnstuff\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for joesguns\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.221Z] Starting threads for nectar-net\\n[2023-04-29T14:27:21.221Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for max-hardware\\n[2023-04-29T14:27:21.222Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for neo-net\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for zer0\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for iron-gym\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for phantasy\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.222Z] Starting threads for omega-net\\n[2023-04-29T14:27:21.222Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for crush-fitness\\n[2023-04-29T14:27:21.223Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for the-hub\\n[2023-04-29T14:27:21.223Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for rothman-uni\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for johnson-ortho\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for rho-construction\\n[2023-04-29T14:27:21.223Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:27:21.223Z] Starting threads for computek\\n[2023-04-29T14:27:21.223Z] Server pserv-15 does not have capacity for all threads. Starting 1369.Threads left: 631\\n[2023-04-29T14:27:21.224Z] Server pserv-16 has capacity for all threads. Starting 631.ThreadsLeft: 0\\n[2023-04-29T14:27:21.224Z] Starting threads for millenium-fitness\\n[2023-04-29T14:27:21.224Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] ==============================\\n[2023-04-29T14:37:21.230Z] Starting to ramp up 20 servers with a max of 3917 threads each\\n[2023-04-29T14:37:21.230Z] ==============================\\n[2023-04-29T14:37:21.230Z] Starting threads for n00dles\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for foodnstuff\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for joesguns\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for nectar-net\\n[2023-04-29T14:37:21.230Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for max-hardware\\n[2023-04-29T14:37:21.230Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for neo-net\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for zer0\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for iron-gym\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.230Z] Starting threads for phantasy\\n[2023-04-29T14:37:21.230Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for omega-net\\n[2023-04-29T14:37:21.231Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for crush-fitness\\n[2023-04-29T14:37:21.231Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for the-hub\\n[2023-04-29T14:37:21.231Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for rothman-uni\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for johnson-ortho\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for rho-construction\\n[2023-04-29T14:37:21.231Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for computek\\n[2023-04-29T14:37:21.231Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:37:21.231Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:37:21.231Z] Starting threads for millenium-fitness\\n[2023-04-29T14:37:21.231Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] ==============================\\n[2023-04-29T14:47:21.233Z] Starting to ramp up 21 servers with a max of 3731 threads each\\n[2023-04-29T14:47:21.233Z] ==============================\\n[2023-04-29T14:47:21.233Z] Starting threads for n00dles\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for foodnstuff\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for joesguns\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for nectar-net\\n[2023-04-29T14:47:21.233Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for max-hardware\\n[2023-04-29T14:47:21.233Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for neo-net\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for zer0\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for iron-gym\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for phantasy\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for omega-net\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for crush-fitness\\n[2023-04-29T14:47:21.233Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for the-hub\\n[2023-04-29T14:47:21.233Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for rothman-uni\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for johnson-ortho\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for rho-construction\\n[2023-04-29T14:47:21.233Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for computek\\n[2023-04-29T14:47:21.233Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T14:47:21.233Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for millenium-fitness\\n[2023-04-29T14:47:21.233Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:47:21.233Z] Starting threads for silver-helix\\n[2023-04-29T14:47:21.233Z] Server pserv-16 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] ==============================\\n[2023-04-29T14:57:21.253Z] Starting to ramp up 22 servers with a max of 3561 threads each\\n[2023-04-29T14:57:21.253Z] ==============================\\n[2023-04-29T14:57:21.253Z] Starting threads for n00dles\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for foodnstuff\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for joesguns\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.253Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:57:21.253Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for nectar-net\\n[2023-04-29T14:57:21.254Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for max-hardware\\n[2023-04-29T14:57:21.254Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for neo-net\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for zer0\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for iron-gym\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for phantasy\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for omega-net\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for crush-fitness\\n[2023-04-29T14:57:21.254Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for the-hub\\n[2023-04-29T14:57:21.254Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for rothman-uni\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for johnson-ortho\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for rho-construction\\n[2023-04-29T14:57:21.254Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for computek\\n[2023-04-29T14:57:21.254Z] Server pserv-15 does not have capacity for all threads. Starting 1369.Threads left: 631\\n[2023-04-29T14:57:21.254Z] Server pserv-16 has capacity for all threads. Starting 631.ThreadsLeft: 0\\n[2023-04-29T14:57:21.254Z] Starting threads for millenium-fitness\\n[2023-04-29T14:57:21.255Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.255Z] Starting threads for silver-helix\\n[2023-04-29T14:57:21.255Z] Server pserv-16 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T14:57:21.255Z] Starting threads for summit-uni\\n[2023-04-29T14:57:21.255Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.274Z] ==============================\\n[2023-04-29T15:07:21.274Z] Starting to ramp up 22 servers with a max of 3561 threads each\\n[2023-04-29T15:07:21.274Z] ==============================\\n[2023-04-29T15:07:21.274Z] Starting threads for n00dles\\n[2023-04-29T15:07:21.274Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for foodnstuff\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for joesguns\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for nectar-net\\n[2023-04-29T15:07:21.275Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for max-hardware\\n[2023-04-29T15:07:21.275Z] Server pserv-13 does not have capacity for all threads. Starting 123.Threads left: 877\\n[2023-04-29T15:07:21.275Z] Server pserv-14 has capacity for all threads. Starting 877.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for neo-net\\n[2023-04-29T15:07:21.275Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.275Z] Starting threads for zer0\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for iron-gym\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for phantasy\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for omega-net\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for crush-fitness\\n[2023-04-29T15:07:21.276Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for the-hub\\n[2023-04-29T15:07:21.276Z] Server pserv-14 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for rothman-uni\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for johnson-ortho\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for rho-construction\\n[2023-04-29T15:07:21.276Z] Server pserv-15 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for computek\\n[2023-04-29T15:07:21.276Z] Server pserv-15 does not have capacity for all threads. Starting 369.Threads left: 1631\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 1631.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for millenium-fitness\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for silver-helix\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:07:21.276Z] Starting threads for summit-uni\\n[2023-04-29T15:07:21.276Z] Server pserv-16 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] ==============================\\n[2023-04-29T15:17:21.283Z] Starting to ramp up 22 servers with a max of 7123 threads each\\n[2023-04-29T15:17:21.283Z] ==============================\\n[2023-04-29T15:17:21.283Z] Starting threads for n00dles\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for foodnstuff\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for joesguns\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for nectar-net\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for max-hardware\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for neo-net\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for zer0\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for iron-gym\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for phantasy\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for omega-net\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for crush-fitness\\n[2023-04-29T15:17:21.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.283Z] Starting threads for the-hub\\n[2023-04-29T15:17:21.283Z] Server pserv-13 does not have capacity for all threads. Starting 246.Threads left: 754\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 754.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for rothman-uni\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for johnson-ortho\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for rho-construction\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for computek\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for millenium-fitness\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for silver-helix\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:17:21.284Z] Starting threads for summit-uni\\n[2023-04-29T15:17:21.284Z] Server pserv-14 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] ==============================\\n[2023-04-29T15:27:21.295Z] Starting to ramp up 22 servers with a max of 14246 threads each\\n[2023-04-29T15:27:21.295Z] ==============================\\n[2023-04-29T15:27:21.295Z] Starting threads for n00dles\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for foodnstuff\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for joesguns\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for nectar-net\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.295Z] Starting threads for max-hardware\\n[2023-04-29T15:27:21.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for neo-net\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for zer0\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for iron-gym\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for phantasy\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for omega-net\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for crush-fitness\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for the-hub\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for rothman-uni\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for johnson-ortho\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for rho-construction\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for computek\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for millenium-fitness\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for silver-helix\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:27:21.296Z] Starting threads for summit-uni\\n[2023-04-29T15:27:21.296Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.282Z] ==============================\\n[2023-04-29T15:32:25.282Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T15:32:25.282Z] ==============================\\n[2023-04-29T15:32:25.282Z] Starting threads for n00dles\\n[2023-04-29T15:32:25.282Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.282Z] Starting threads for foodnstuff\\n[2023-04-29T15:32:25.282Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.282Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for joesguns\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for nectar-net\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for max-hardware\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for neo-net\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for zer0\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for iron-gym\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for phantasy\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for omega-net\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for crush-fitness\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for the-hub\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for rothman-uni\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for johnson-ortho\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for rho-construction\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for computek\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for millenium-fitness\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for silver-helix\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:32:25.283Z] Starting threads for summit-uni\\n[2023-04-29T15:32:25.283Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] ==============================\\n[2023-04-29T15:42:25.291Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T15:42:25.291Z] ==============================\\n[2023-04-29T15:42:25.291Z] Starting threads for n00dles\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for foodnstuff\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for joesguns\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for nectar-net\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for max-hardware\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for neo-net\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for zer0\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for iron-gym\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for phantasy\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for omega-net\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for crush-fitness\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for the-hub\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.291Z] Starting threads for rothman-uni\\n[2023-04-29T15:42:25.291Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for johnson-ortho\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for rho-construction\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for computek\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for millenium-fitness\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for silver-helix\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:42:25.292Z] Starting threads for summit-uni\\n[2023-04-29T15:42:25.292Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] ==============================\\n[2023-04-29T15:52:25.304Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T15:52:25.304Z] ==============================\\n[2023-04-29T15:52:25.304Z] Starting threads for n00dles\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for foodnstuff\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for joesguns\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for nectar-net\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for max-hardware\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for neo-net\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for zer0\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for iron-gym\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for phantasy\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for omega-net\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for crush-fitness\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for the-hub\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for rothman-uni\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for johnson-ortho\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for rho-construction\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for computek\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for millenium-fitness\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.304Z] Starting threads for silver-helix\\n[2023-04-29T15:52:25.304Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T15:52:25.305Z] Starting threads for summit-uni\\n[2023-04-29T15:52:25.305Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] ==============================\\n[2023-04-29T16:02:25.311Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:02:25.311Z] ==============================\\n[2023-04-29T16:02:25.311Z] Starting threads for n00dles\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for foodnstuff\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for joesguns\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for nectar-net\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for max-hardware\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for neo-net\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for zer0\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for iron-gym\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for phantasy\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for omega-net\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for crush-fitness\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for the-hub\\n[2023-04-29T16:02:25.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.311Z] Starting threads for rothman-uni\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for johnson-ortho\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for rho-construction\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for computek\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for millenium-fitness\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for silver-helix\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:02:25.312Z] Starting threads for summit-uni\\n[2023-04-29T16:02:25.312Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.318Z] ==============================\\n[2023-04-29T16:12:25.318Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:12:25.318Z] ==============================\\n[2023-04-29T16:12:25.319Z] Starting threads for n00dles\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for foodnstuff\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for joesguns\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for nectar-net\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for max-hardware\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for neo-net\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for zer0\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for iron-gym\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for phantasy\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for omega-net\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for crush-fitness\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for the-hub\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for rothman-uni\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for johnson-ortho\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for rho-construction\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for computek\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for millenium-fitness\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for silver-helix\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:12:25.319Z] Starting threads for summit-uni\\n[2023-04-29T16:12:25.319Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] ==============================\\n[2023-04-29T16:22:25.335Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:22:25.335Z] ==============================\\n[2023-04-29T16:22:25.335Z] Starting threads for n00dles\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for foodnstuff\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for joesguns\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for nectar-net\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for max-hardware\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for neo-net\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for zer0\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for iron-gym\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for phantasy\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for omega-net\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for crush-fitness\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for the-hub\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for rothman-uni\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for johnson-ortho\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for rho-construction\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for computek\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for millenium-fitness\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for silver-helix\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:22:25.335Z] Starting threads for summit-uni\\n[2023-04-29T16:22:25.335Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] ==============================\\n[2023-04-29T16:32:25.354Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:32:25.354Z] ==============================\\n[2023-04-29T16:32:25.354Z] Starting threads for n00dles\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for foodnstuff\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for joesguns\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for nectar-net\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for max-hardware\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for neo-net\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for zer0\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for iron-gym\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for phantasy\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for omega-net\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for crush-fitness\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for the-hub\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for rothman-uni\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for johnson-ortho\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for rho-construction\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for computek\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for millenium-fitness\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for silver-helix\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:32:25.354Z] Starting threads for summit-uni\\n[2023-04-29T16:32:25.354Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] ==============================\\n[2023-04-29T16:42:25.361Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:42:25.361Z] ==============================\\n[2023-04-29T16:42:25.361Z] Starting threads for n00dles\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for foodnstuff\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for joesguns\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for nectar-net\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for max-hardware\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for neo-net\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for zer0\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for iron-gym\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for phantasy\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for omega-net\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for crush-fitness\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for the-hub\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for rothman-uni\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for johnson-ortho\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for rho-construction\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for computek\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for millenium-fitness\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for silver-helix\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:42:25.361Z] Starting threads for summit-uni\\n[2023-04-29T16:42:25.361Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.368Z] ==============================\\n[2023-04-29T16:52:25.368Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T16:52:25.368Z] ==============================\\n[2023-04-29T16:52:25.369Z] Starting threads for n00dles\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for foodnstuff\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for joesguns\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for nectar-net\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for max-hardware\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for neo-net\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for zer0\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for iron-gym\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for phantasy\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for omega-net\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for crush-fitness\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for the-hub\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for rothman-uni\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for johnson-ortho\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for rho-construction\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for computek\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for millenium-fitness\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for silver-helix\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T16:52:25.369Z] Starting threads for summit-uni\\n[2023-04-29T16:52:25.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] ==============================\\n[2023-04-29T17:02:25.377Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:02:25.377Z] ==============================\\n[2023-04-29T17:02:25.377Z] Starting threads for n00dles\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for foodnstuff\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for joesguns\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for nectar-net\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for max-hardware\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for neo-net\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for zer0\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for iron-gym\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for phantasy\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for omega-net\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for crush-fitness\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for the-hub\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for rothman-uni\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for johnson-ortho\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for rho-construction\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for computek\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for millenium-fitness\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for silver-helix\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:02:25.377Z] Starting threads for summit-uni\\n[2023-04-29T17:02:25.377Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] ==============================\\n[2023-04-29T17:12:25.389Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:12:25.389Z] ==============================\\n[2023-04-29T17:12:25.389Z] Starting threads for n00dles\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for foodnstuff\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for joesguns\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for nectar-net\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for max-hardware\\n[2023-04-29T17:12:25.389Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.389Z] Starting threads for neo-net\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for zer0\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for iron-gym\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for phantasy\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for omega-net\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for crush-fitness\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for the-hub\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for rothman-uni\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for johnson-ortho\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for rho-construction\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for computek\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for millenium-fitness\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for silver-helix\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:12:25.390Z] Starting threads for summit-uni\\n[2023-04-29T17:12:25.390Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] ==============================\\n[2023-04-29T17:22:25.398Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:22:25.398Z] ==============================\\n[2023-04-29T17:22:25.398Z] Starting threads for n00dles\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for foodnstuff\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for joesguns\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for nectar-net\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for max-hardware\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for neo-net\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for zer0\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for iron-gym\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for phantasy\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for omega-net\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for crush-fitness\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for the-hub\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for rothman-uni\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for johnson-ortho\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for rho-construction\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for computek\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for millenium-fitness\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for silver-helix\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:22:25.398Z] Starting threads for summit-uni\\n[2023-04-29T17:22:25.398Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] ==============================\\n[2023-04-29T17:32:25.407Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:32:25.407Z] ==============================\\n[2023-04-29T17:32:25.407Z] Starting threads for n00dles\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for foodnstuff\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for joesguns\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.407Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:32:25.407Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for nectar-net\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for max-hardware\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for neo-net\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for zer0\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for iron-gym\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for phantasy\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for omega-net\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for crush-fitness\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for the-hub\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for rothman-uni\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for johnson-ortho\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for rho-construction\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for computek\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for millenium-fitness\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for silver-helix\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:32:25.408Z] Starting threads for summit-uni\\n[2023-04-29T17:32:25.408Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] ==============================\\n[2023-04-29T17:42:25.426Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:42:25.426Z] ==============================\\n[2023-04-29T17:42:25.426Z] Starting threads for n00dles\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for foodnstuff\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for joesguns\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for nectar-net\\n[2023-04-29T17:42:25.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.426Z] Starting threads for max-hardware\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for neo-net\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for zer0\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for iron-gym\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for phantasy\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for omega-net\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for crush-fitness\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for the-hub\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for rothman-uni\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for johnson-ortho\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for rho-construction\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for computek\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for millenium-fitness\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for silver-helix\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:42:25.427Z] Starting threads for summit-uni\\n[2023-04-29T17:42:25.427Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] ==============================\\n[2023-04-29T17:52:25.430Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T17:52:25.430Z] ==============================\\n[2023-04-29T17:52:25.430Z] Starting threads for n00dles\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for foodnstuff\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for joesguns\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for nectar-net\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for max-hardware\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for neo-net\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for zer0\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for iron-gym\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for phantasy\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.430Z] Starting threads for omega-net\\n[2023-04-29T17:52:25.430Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for crush-fitness\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for the-hub\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for rothman-uni\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for johnson-ortho\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for rho-construction\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for computek\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for millenium-fitness\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for silver-helix\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T17:52:25.431Z] Starting threads for summit-uni\\n[2023-04-29T17:52:25.431Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.443Z] ==============================\\n[2023-04-29T18:02:25.443Z] Starting to ramp up 22 servers with a max of 51807 threads each\\n[2023-04-29T18:02:25.443Z] ==============================\\n[2023-04-29T18:02:25.443Z] Starting threads for n00dles\\n[2023-04-29T18:02:25.443Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.443Z] Starting threads for foodnstuff\\n[2023-04-29T18:02:25.443Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.443Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:02:25.443Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for joesguns\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for nectar-net\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for max-hardware\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for neo-net\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for zer0\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for iron-gym\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for phantasy\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for omega-net\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for crush-fitness\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for the-hub\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for rothman-uni\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for johnson-ortho\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for rho-construction\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for computek\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for millenium-fitness\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for silver-helix\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-29T18:02:25.444Z] Starting threads for summit-uni\\n[2023-04-29T18:02:25.444Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-29T18:42:34.119Z] ==============================\\n[2023-04-29T18:42:34.119Z] Starting to ramp up 6 servers with a max of 102 threads each\\n[2023-04-29T18:42:34.119Z] ==============================\\n[2023-04-29T18:42:34.119Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:42:34.119Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-14 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for n00dles\\n[2023-04-29T18:42:34.124Z] Server pserv-14 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-15 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for foodnstuff\\n[2023-04-29T18:42:34.124Z] Server pserv-15 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-16 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:42:34.124Z] Server pserv-16 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-17 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for joesguns\\n[2023-04-29T18:42:34.124Z] Server pserv-17 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-18 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:42:34.124Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:42:34.124Z] Server pserv-18 does not have capacity for all threads. Starting 55.Threads left: 47\\n[2023-04-29T18:42:34.124Z] Server pserv-19 has capacity for all threads. Starting 47.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] ==============================\\n[2023-04-29T18:44:02.569Z] Starting to ramp up 7 servers with a max of 87 threads each\\n[2023-04-29T18:44:02.569Z] ==============================\\n[2023-04-29T18:44:02.569Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:44:02.569Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-14 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for n00dles\\n[2023-04-29T18:44:02.569Z] Server pserv-14 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-15 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for foodnstuff\\n[2023-04-29T18:44:02.569Z] Server pserv-15 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-16 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:44:02.569Z] Server pserv-16 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-17 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for joesguns\\n[2023-04-29T18:44:02.569Z] Server pserv-17 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-18 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:44:02.569Z] Server pserv-18 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-19 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:44:02.569Z] Starting threads for nectar-net\\n[2023-04-29T18:44:02.569Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 32\\n[2023-04-29T18:44:02.569Z] Server pserv-20 has capacity for all threads. Starting 32.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] ==============================\\n[2023-04-29T18:48:50.449Z] Starting to ramp up 7 servers with a max of 349 threads each\\n[2023-04-29T18:48:50.449Z] ==============================\\n[2023-04-29T18:48:50.449Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:48:50.449Z] Server pserv-13 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-14 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for n00dles\\n[2023-04-29T18:48:50.449Z] Server pserv-14 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-15 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for foodnstuff\\n[2023-04-29T18:48:50.449Z] Server pserv-15 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-16 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:48:50.449Z] Server pserv-16 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-17 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for joesguns\\n[2023-04-29T18:48:50.449Z] Server pserv-17 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-18 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:48:50.449Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-19 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:48:50.449Z] Starting threads for nectar-net\\n[2023-04-29T18:48:50.449Z] Server pserv-19 does not have capacity for all threads. Starting 222.Threads left: 127\\n[2023-04-29T18:48:50.449Z] Server pserv-20 has capacity for all threads. Starting 127.ThreadsLeft: 0\\n[2023-04-29T18:52:29.139Z] ==============================\\n[2023-04-29T18:52:29.139Z] Starting to ramp up 8 servers with a max of 306 threads each\\n[2023-04-29T18:52:29.139Z] ==============================\\n[2023-04-29T18:52:29.139Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:52:29.139Z] Server pserv-13 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.139Z] Server pserv-14 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for n00dles\\n[2023-04-29T18:52:29.140Z] Server pserv-14 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-15 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for foodnstuff\\n[2023-04-29T18:52:29.140Z] Server pserv-15 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-16 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:52:29.140Z] Server pserv-16 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for joesguns\\n[2023-04-29T18:52:29.140Z] Server pserv-17 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-18 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:52:29.140Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-19 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for nectar-net\\n[2023-04-29T18:52:29.140Z] Server pserv-19 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-20 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:52:29.140Z] Starting threads for neo-net\\n[2023-04-29T18:52:29.140Z] Server pserv-20 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:52:29.140Z] Server pserv-21 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:54:10.915Z] ==============================\\n[2023-04-29T18:54:10.915Z] Starting to ramp up 8 servers with a max of 306 threads each\\n[2023-04-29T18:54:10.915Z] ==============================\\n[2023-04-29T18:54:10.915Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:54:10.915Z] Server pserv-13 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T18:54:10.915Z] Server pserv-14 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for n00dles\\n[2023-04-29T18:54:10.916Z] Server pserv-14 does not have capacity for all threads. Starting 138.Threads left: 168\\n[2023-04-29T18:54:10.916Z] Server pserv-15 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for foodnstuff\\n[2023-04-29T18:54:10.916Z] Server pserv-15 does not have capacity for all threads. Starting 54.Threads left: 252\\n[2023-04-29T18:54:10.916Z] Server pserv-16 does not have capacity for all threads. Starting 222.Threads left: 30\\n[2023-04-29T18:54:10.916Z] Server pserv-17 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:54:10.916Z] Server pserv-17 does not have capacity for all threads. Starting 192.Threads left: 114\\n[2023-04-29T18:54:10.916Z] Server pserv-18 has capacity for all threads. Starting 114.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for joesguns\\n[2023-04-29T18:54:10.916Z] Server pserv-18 does not have capacity for all threads. Starting 108.Threads left: 198\\n[2023-04-29T18:54:10.916Z] Server pserv-19 has capacity for all threads. Starting 198.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:54:10.916Z] Server pserv-19 does not have capacity for all threads. Starting 24.Threads left: 282\\n[2023-04-29T18:54:10.916Z] Server pserv-20 does not have capacity for all threads. Starting 222.Threads left: 60\\n[2023-04-29T18:54:10.916Z] Server pserv-21 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for nectar-net\\n[2023-04-29T18:54:10.916Z] Server pserv-21 does not have capacity for all threads. Starting 162.Threads left: 144\\n[2023-04-29T18:54:10.916Z] Server pserv-22 has capacity for all threads. Starting 144.ThreadsLeft: 0\\n[2023-04-29T18:54:10.916Z] Starting threads for neo-net\\n[2023-04-29T18:54:10.916Z] Server pserv-22 does not have capacity for all threads. Starting 78.Threads left: 228\\n[2023-04-29T18:54:10.916Z] Server pserv-23 does not have capacity for all threads. Starting 222.Threads left: 6\\n[2023-04-29T19:04:10.922Z] ==============================\\n[2023-04-29T19:04:10.922Z] Starting to ramp up 10 servers with a max of 489 threads each\\n[2023-04-29T19:04:10.922Z] ==============================\\n[2023-04-29T19:04:10.922Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:04:10.922Z] Server pserv-13 does not have capacity for all threads. Starting 445.Threads left: 44\\n[2023-04-29T19:04:10.922Z] Server pserv-14 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for n00dles\\n[2023-04-29T19:04:10.922Z] Server pserv-14 does not have capacity for all threads. Starting 401.Threads left: 88\\n[2023-04-29T19:04:10.922Z] Server pserv-15 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for foodnstuff\\n[2023-04-29T19:04:10.922Z] Server pserv-15 does not have capacity for all threads. Starting 357.Threads left: 132\\n[2023-04-29T19:04:10.922Z] Server pserv-16 has capacity for all threads. Starting 132.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:04:10.922Z] Server pserv-16 does not have capacity for all threads. Starting 313.Threads left: 176\\n[2023-04-29T19:04:10.922Z] Server pserv-17 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for joesguns\\n[2023-04-29T19:04:10.922Z] Server pserv-17 does not have capacity for all threads. Starting 269.Threads left: 220\\n[2023-04-29T19:04:10.922Z] Server pserv-18 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:04:10.922Z] Server pserv-18 does not have capacity for all threads. Starting 225.Threads left: 264\\n[2023-04-29T19:04:10.922Z] Server pserv-19 has capacity for all threads. Starting 264.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for nectar-net\\n[2023-04-29T19:04:10.922Z] Server pserv-19 does not have capacity for all threads. Starting 181.Threads left: 308\\n[2023-04-29T19:04:10.922Z] Server pserv-20 has capacity for all threads. Starting 308.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for neo-net\\n[2023-04-29T19:04:10.922Z] Server pserv-20 does not have capacity for all threads. Starting 137.Threads left: 352\\n[2023-04-29T19:04:10.922Z] Server pserv-21 has capacity for all threads. Starting 352.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for phantasy\\n[2023-04-29T19:04:10.922Z] Server pserv-21 does not have capacity for all threads. Starting 93.Threads left: 396\\n[2023-04-29T19:04:10.922Z] Server pserv-22 has capacity for all threads. Starting 396.ThreadsLeft: 0\\n[2023-04-29T19:04:10.922Z] Starting threads for max-hardware\\n[2023-04-29T19:04:10.922Z] Server pserv-22 does not have capacity for all threads. Starting 49.Threads left: 440\\n[2023-04-29T19:04:10.922Z] Server pserv-23 has capacity for all threads. Starting 440.ThreadsLeft: 0\\n[2023-04-29T19:07:20.117Z] ==============================\\n[2023-04-29T19:07:20.117Z] Starting to ramp up 11 servers with a max of 445 threads each\\n[2023-04-29T19:07:20.117Z] ==============================\\n[2023-04-29T19:07:20.117Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:07:20.117Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.135Z] Starting threads for n00dles\\n[2023-04-29T19:07:20.135Z] No more threads possible on server 0 - pserv-13\\n[2023-04-29T19:07:20.135Z] Server pserv-14 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.153Z] Starting threads for foodnstuff\\n[2023-04-29T19:07:20.153Z] No more threads possible on server 1 - pserv-14\\n[2023-04-29T19:07:20.153Z] Server pserv-15 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.170Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:07:20.170Z] No more threads possible on server 2 - pserv-15\\n[2023-04-29T19:07:20.170Z] Server pserv-16 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.189Z] Starting threads for joesguns\\n[2023-04-29T19:07:20.189Z] No more threads possible on server 3 - pserv-16\\n[2023-04-29T19:07:20.189Z] Server pserv-17 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.207Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:07:20.207Z] No more threads possible on server 4 - pserv-17\\n[2023-04-29T19:07:20.207Z] Server pserv-18 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.226Z] Starting threads for nectar-net\\n[2023-04-29T19:07:20.226Z] No more threads possible on server 5 - pserv-18\\n[2023-04-29T19:07:20.226Z] Server pserv-19 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.244Z] Starting threads for neo-net\\n[2023-04-29T19:07:20.244Z] No more threads possible on server 6 - pserv-19\\n[2023-04-29T19:07:20.244Z] Server pserv-20 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.264Z] Starting threads for phantasy\\n[2023-04-29T19:07:20.264Z] No more threads possible on server 7 - pserv-20\\n[2023-04-29T19:07:20.264Z] Server pserv-21 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.283Z] Starting threads for max-hardware\\n[2023-04-29T19:07:20.283Z] No more threads possible on server 8 - pserv-21\\n[2023-04-29T19:07:20.283Z] Server pserv-22 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:07:20.303Z] Starting threads for zer0\\n[2023-04-29T19:07:20.303Z] No more threads possible on server 9 - pserv-22\\n[2023-04-29T19:07:20.303Z] Server pserv-23 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] ==============================\\n[2023-04-29T19:10:44.416Z] Starting to ramp up 11 servers with a max of 445 threads each\\n[2023-04-29T19:10:44.416Z] ==============================\\n[2023-04-29T19:10:44.416Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:10:44.416Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for n00dles\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 0 - pserv-13\\n[2023-04-29T19:10:44.416Z] Server pserv-14 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for foodnstuff\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 1 - pserv-14\\n[2023-04-29T19:10:44.416Z] Server pserv-15 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 2 - pserv-15\\n[2023-04-29T19:10:44.416Z] Server pserv-16 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for joesguns\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 3 - pserv-16\\n[2023-04-29T19:10:44.416Z] Server pserv-17 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 4 - pserv-17\\n[2023-04-29T19:10:44.416Z] Server pserv-18 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for nectar-net\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 5 - pserv-18\\n[2023-04-29T19:10:44.416Z] Server pserv-19 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for neo-net\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 6 - pserv-19\\n[2023-04-29T19:10:44.416Z] Server pserv-20 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for phantasy\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 7 - pserv-20\\n[2023-04-29T19:10:44.416Z] Server pserv-21 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for max-hardware\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 8 - pserv-21\\n[2023-04-29T19:10:44.416Z] Server pserv-22 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:10:44.416Z] Starting threads for zer0\\n[2023-04-29T19:10:44.416Z] No more threads possible on server 9 - pserv-22\\n[2023-04-29T19:10:44.416Z] Server pserv-23 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-29T19:20:45.012Z] ==============================\\n[2023-04-29T19:20:45.012Z] Starting to ramp up 12 servers with a max of 408 threads each\\n[2023-04-29T19:20:45.012Z] ==============================\\n[2023-04-29T19:20:45.012Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:20:45.012Z] Server pserv-13 has capacity for all threads. Starting 408.ThreadsLeft: 0\\n[2023-04-29T19:20:45.031Z] Starting threads for n00dles\\n[2023-04-29T19:20:45.031Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 371\\n[2023-04-29T19:20:45.052Z] Server pserv-14 has capacity for all threads. Starting 371.ThreadsLeft: 0\\n[2023-04-29T19:20:45.072Z] Starting threads for foodnstuff\\n[2023-04-29T19:20:45.072Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 334\\n[2023-04-29T19:20:45.093Z] Server pserv-15 has capacity for all threads. Starting 334.ThreadsLeft: 0\\n[2023-04-29T19:20:45.113Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:20:45.113Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 297\\n[2023-04-29T19:20:45.151Z] Server pserv-16 has capacity for all threads. Starting 297.ThreadsLeft: 0\\n[2023-04-29T19:20:45.191Z] Starting threads for joesguns\\n[2023-04-29T19:20:45.191Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 260\\n[2023-04-29T19:20:45.211Z] Server pserv-17 has capacity for all threads. Starting 260.ThreadsLeft: 0\\n[2023-04-29T19:20:45.233Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:20:45.234Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 223\\n[2023-04-29T19:20:45.253Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T19:20:45.275Z] Starting threads for nectar-net\\n[2023-04-29T19:20:45.275Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 186\\n[2023-04-29T19:20:45.298Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T19:20:45.321Z] Starting threads for neo-net\\n[2023-04-29T19:20:45.321Z] Server pserv-19 does not have capacity for all threads. Starting 259.Threads left: 149\\n[2023-04-29T19:20:45.345Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T19:20:45.367Z] Starting threads for phantasy\\n[2023-04-29T19:20:45.367Z] Server pserv-20 does not have capacity for all threads. Starting 296.Threads left: 112\\n[2023-04-29T19:20:45.390Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T19:20:45.411Z] Starting threads for max-hardware\\n[2023-04-29T19:20:45.411Z] Server pserv-21 does not have capacity for all threads. Starting 333.Threads left: 75\\n[2023-04-29T19:20:45.434Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T19:20:45.456Z] Starting threads for zer0\\n[2023-04-29T19:20:45.456Z] Server pserv-22 does not have capacity for all threads. Starting 370.Threads left: 38\\n[2023-04-29T19:20:45.478Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T19:20:45.503Z] Starting threads for iron-gym\\n[2023-04-29T19:20:45.503Z] Server pserv-23 does not have capacity for all threads. Starting 407.Threads left: 1\\n[2023-04-29T19:30:45.532Z] ==============================\\n[2023-04-29T19:30:45.532Z] Starting to ramp up 12 servers with a max of 408 threads each\\n[2023-04-29T19:30:45.532Z] ==============================\\n[2023-04-29T19:30:45.532Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:30:45.532Z] Server pserv-13 has capacity for all threads. Starting 408.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for n00dles\\n[2023-04-29T19:30:45.532Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 371\\n[2023-04-29T19:30:45.532Z] Server pserv-14 has capacity for all threads. Starting 371.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for foodnstuff\\n[2023-04-29T19:30:45.532Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 334\\n[2023-04-29T19:30:45.532Z] Server pserv-15 has capacity for all threads. Starting 334.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:30:45.532Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 297\\n[2023-04-29T19:30:45.532Z] Server pserv-16 has capacity for all threads. Starting 297.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for joesguns\\n[2023-04-29T19:30:45.532Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 260\\n[2023-04-29T19:30:45.532Z] Server pserv-17 has capacity for all threads. Starting 260.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:30:45.532Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 223\\n[2023-04-29T19:30:45.532Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T19:30:45.532Z] Starting threads for nectar-net\\n[2023-04-29T19:30:45.533Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 186\\n[2023-04-29T19:30:45.533Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for neo-net\\n[2023-04-29T19:30:45.533Z] Server pserv-19 does not have capacity for all threads. Starting 259.Threads left: 149\\n[2023-04-29T19:30:45.533Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for phantasy\\n[2023-04-29T19:30:45.533Z] Server pserv-20 does not have capacity for all threads. Starting 296.Threads left: 112\\n[2023-04-29T19:30:45.533Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for max-hardware\\n[2023-04-29T19:30:45.533Z] Server pserv-21 does not have capacity for all threads. Starting 333.Threads left: 75\\n[2023-04-29T19:30:45.533Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for zer0\\n[2023-04-29T19:30:45.533Z] Server pserv-22 does not have capacity for all threads. Starting 370.Threads left: 38\\n[2023-04-29T19:30:45.533Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T19:30:45.533Z] Starting threads for iron-gym\\n[2023-04-29T19:30:45.533Z] Server pserv-23 does not have capacity for all threads. Starting 407.Threads left: 1\\n[2023-04-29T19:40:45.533Z] ==============================\\n[2023-04-29T19:40:45.533Z] Starting to ramp up 12 servers with a max of 408 threads each\\n[2023-04-29T19:40:45.533Z] ==============================\\n[2023-04-29T19:40:45.533Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:40:45.533Z] Server pserv-13 has capacity for all threads. Starting 408.ThreadsLeft: 0\\n[2023-04-29T19:40:45.533Z] Starting threads for n00dles\\n[2023-04-29T19:40:45.533Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 371\\n[2023-04-29T19:40:45.533Z] Server pserv-14 has capacity for all threads. Starting 371.ThreadsLeft: 0\\n[2023-04-29T19:40:45.533Z] Starting threads for foodnstuff\\n[2023-04-29T19:40:45.533Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 334\\n[2023-04-29T19:40:45.533Z] Server pserv-15 has capacity for all threads. Starting 334.ThreadsLeft: 0\\n[2023-04-29T19:40:45.533Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:40:45.533Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 297\\n[2023-04-29T19:40:45.533Z] Server pserv-16 has capacity for all threads. Starting 297.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for joesguns\\n[2023-04-29T19:40:45.534Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 260\\n[2023-04-29T19:40:45.534Z] Server pserv-17 has capacity for all threads. Starting 260.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:40:45.534Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 223\\n[2023-04-29T19:40:45.534Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for nectar-net\\n[2023-04-29T19:40:45.534Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 186\\n[2023-04-29T19:40:45.534Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for neo-net\\n[2023-04-29T19:40:45.534Z] Server pserv-19 does not have capacity for all threads. Starting 259.Threads left: 149\\n[2023-04-29T19:40:45.534Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for phantasy\\n[2023-04-29T19:40:45.534Z] Server pserv-20 does not have capacity for all threads. Starting 296.Threads left: 112\\n[2023-04-29T19:40:45.534Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for max-hardware\\n[2023-04-29T19:40:45.534Z] Server pserv-21 does not have capacity for all threads. Starting 333.Threads left: 75\\n[2023-04-29T19:40:45.534Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for zer0\\n[2023-04-29T19:40:45.534Z] Server pserv-22 does not have capacity for all threads. Starting 370.Threads left: 38\\n[2023-04-29T19:40:45.534Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T19:40:45.534Z] Starting threads for iron-gym\\n[2023-04-29T19:40:45.534Z] Server pserv-23 does not have capacity for all threads. Starting 407.Threads left: 1\\n[2023-04-29T19:50:45.541Z] ==============================\\n[2023-04-29T19:50:45.541Z] Starting to ramp up 15 servers with a max of 326 threads each\\n[2023-04-29T19:50:45.541Z] ==============================\\n[2023-04-29T19:50:45.541Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:50:45.541Z] Server pserv-13 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for n00dles\\n[2023-04-29T19:50:45.541Z] Server pserv-13 does not have capacity for all threads. Starting 119.Threads left: 207\\n[2023-04-29T19:50:45.541Z] Server pserv-14 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for foodnstuff\\n[2023-04-29T19:50:45.541Z] Server pserv-14 does not have capacity for all threads. Starting 238.Threads left: 88\\n[2023-04-29T19:50:45.541Z] Server pserv-15 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:50:45.541Z] Server pserv-15 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for joesguns\\n[2023-04-29T19:50:45.541Z] Server pserv-15 does not have capacity for all threads. Starting 31.Threads left: 295\\n[2023-04-29T19:50:45.541Z] Server pserv-16 has capacity for all threads. Starting 295.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:50:45.541Z] Server pserv-16 does not have capacity for all threads. Starting 150.Threads left: 176\\n[2023-04-29T19:50:45.541Z] Server pserv-17 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for nectar-net\\n[2023-04-29T19:50:45.541Z] Server pserv-17 does not have capacity for all threads. Starting 269.Threads left: 57\\n[2023-04-29T19:50:45.541Z] Server pserv-18 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for neo-net\\n[2023-04-29T19:50:45.541Z] Server pserv-18 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for phantasy\\n[2023-04-29T19:50:45.541Z] Server pserv-18 does not have capacity for all threads. Starting 62.Threads left: 264\\n[2023-04-29T19:50:45.541Z] Server pserv-19 has capacity for all threads. Starting 264.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for max-hardware\\n[2023-04-29T19:50:45.541Z] Server pserv-19 does not have capacity for all threads. Starting 181.Threads left: 145\\n[2023-04-29T19:50:45.541Z] Server pserv-20 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for zer0\\n[2023-04-29T19:50:45.541Z] Server pserv-20 does not have capacity for all threads. Starting 300.Threads left: 26\\n[2023-04-29T19:50:45.541Z] Server pserv-21 has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-29T19:50:45.541Z] Starting threads for iron-gym\\n[2023-04-29T19:50:45.542Z] Server pserv-21 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T19:50:45.542Z] Starting threads for silver-helix\\n[2023-04-29T19:50:45.542Z] Server pserv-21 does not have capacity for all threads. Starting 93.Threads left: 233\\n[2023-04-29T19:50:45.542Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T19:50:45.542Z] Starting threads for omega-net\\n[2023-04-29T19:50:45.542Z] Server pserv-22 does not have capacity for all threads. Starting 212.Threads left: 114\\n[2023-04-29T19:50:45.542Z] Server pserv-23 has capacity for all threads. Starting 114.ThreadsLeft: 0\\n[2023-04-29T19:50:45.542Z] Starting threads for the-hub\\n[2023-04-29T19:50:45.542Z] Server pserv-23 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] ==============================\\n[2023-04-29T20:00:45.548Z] Starting to ramp up 15 servers with a max of 326 threads each\\n[2023-04-29T20:00:45.548Z] ==============================\\n[2023-04-29T20:00:45.548Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:00:45.548Z] Server pserv-13 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for n00dles\\n[2023-04-29T20:00:45.548Z] Server pserv-13 does not have capacity for all threads. Starting 119.Threads left: 207\\n[2023-04-29T20:00:45.548Z] Server pserv-14 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for foodnstuff\\n[2023-04-29T20:00:45.548Z] Server pserv-14 does not have capacity for all threads. Starting 238.Threads left: 88\\n[2023-04-29T20:00:45.548Z] Server pserv-15 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:00:45.548Z] Server pserv-15 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for joesguns\\n[2023-04-29T20:00:45.548Z] Server pserv-15 does not have capacity for all threads. Starting 31.Threads left: 295\\n[2023-04-29T20:00:45.548Z] Server pserv-16 has capacity for all threads. Starting 295.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:00:45.548Z] Server pserv-16 does not have capacity for all threads. Starting 150.Threads left: 176\\n[2023-04-29T20:00:45.548Z] Server pserv-17 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for nectar-net\\n[2023-04-29T20:00:45.548Z] Server pserv-17 does not have capacity for all threads. Starting 269.Threads left: 57\\n[2023-04-29T20:00:45.548Z] Server pserv-18 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for neo-net\\n[2023-04-29T20:00:45.548Z] Server pserv-18 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for phantasy\\n[2023-04-29T20:00:45.548Z] Server pserv-18 does not have capacity for all threads. Starting 62.Threads left: 264\\n[2023-04-29T20:00:45.548Z] Server pserv-19 has capacity for all threads. Starting 264.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for max-hardware\\n[2023-04-29T20:00:45.548Z] Server pserv-19 does not have capacity for all threads. Starting 181.Threads left: 145\\n[2023-04-29T20:00:45.548Z] Server pserv-20 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-29T20:00:45.548Z] Starting threads for zer0\\n[2023-04-29T20:00:45.548Z] Server pserv-20 does not have capacity for all threads. Starting 300.Threads left: 26\\n[2023-04-29T20:00:45.549Z] Server pserv-21 has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for iron-gym\\n[2023-04-29T20:00:45.549Z] Server pserv-21 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for silver-helix\\n[2023-04-29T20:00:45.549Z] Server pserv-21 does not have capacity for all threads. Starting 93.Threads left: 233\\n[2023-04-29T20:00:45.549Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for omega-net\\n[2023-04-29T20:00:45.549Z] Server pserv-22 does not have capacity for all threads. Starting 212.Threads left: 114\\n[2023-04-29T20:00:45.549Z] Server pserv-23 has capacity for all threads. Starting 114.ThreadsLeft: 0\\n[2023-04-29T20:00:45.549Z] Starting threads for the-hub\\n[2023-04-29T20:00:45.549Z] Server pserv-23 has capacity for all threads. Starting 326.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] ==============================\\n[2023-04-29T20:10:45.549Z] Starting to ramp up 16 servers with a max of 306 threads each\\n[2023-04-29T20:10:45.549Z] ==============================\\n[2023-04-29T20:10:45.549Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:10:45.549Z] Server pserv-13 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for n00dles\\n[2023-04-29T20:10:45.549Z] Server pserv-13 does not have capacity for all threads. Starting 139.Threads left: 167\\n[2023-04-29T20:10:45.549Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for foodnstuff\\n[2023-04-29T20:10:45.549Z] Server pserv-14 does not have capacity for all threads. Starting 278.Threads left: 28\\n[2023-04-29T20:10:45.549Z] Server pserv-15 has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:10:45.549Z] Server pserv-15 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for joesguns\\n[2023-04-29T20:10:45.549Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 195\\n[2023-04-29T20:10:45.549Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:10:45.549Z] Server pserv-16 does not have capacity for all threads. Starting 250.Threads left: 56\\n[2023-04-29T20:10:45.549Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for nectar-net\\n[2023-04-29T20:10:45.549Z] Server pserv-17 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for neo-net\\n[2023-04-29T20:10:45.549Z] Server pserv-17 does not have capacity for all threads. Starting 83.Threads left: 223\\n[2023-04-29T20:10:45.549Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T20:10:45.549Z] Starting threads for phantasy\\n[2023-04-29T20:10:45.549Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-29T20:10:45.550Z] Server pserv-19 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for max-hardware\\n[2023-04-29T20:10:45.550Z] Server pserv-19 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for zer0\\n[2023-04-29T20:10:45.550Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 251\\n[2023-04-29T20:10:45.550Z] Server pserv-20 has capacity for all threads. Starting 251.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for iron-gym\\n[2023-04-29T20:10:45.550Z] Server pserv-20 does not have capacity for all threads. Starting 194.Threads left: 112\\n[2023-04-29T20:10:45.550Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for silver-helix\\n[2023-04-29T20:10:45.550Z] Server pserv-21 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for omega-net\\n[2023-04-29T20:10:45.550Z] Server pserv-21 does not have capacity for all threads. Starting 27.Threads left: 279\\n[2023-04-29T20:10:45.550Z] Server pserv-22 has capacity for all threads. Starting 279.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for the-hub\\n[2023-04-29T20:10:45.550Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 140\\n[2023-04-29T20:10:45.550Z] Server pserv-23 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-29T20:10:45.550Z] Starting threads for crush-fitness\\n[2023-04-29T20:10:45.550Z] Server pserv-23 does not have capacity for all threads. Starting 305.Threads left: 1\\n[2023-04-29T20:20:45.556Z] ==============================\\n[2023-04-29T20:20:45.556Z] Starting to ramp up 17 servers with a max of 288 threads each\\n[2023-04-29T20:20:45.556Z] ==============================\\n[2023-04-29T20:20:45.557Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:20:45.557Z] Server pserv-13 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for n00dles\\n[2023-04-29T20:20:45.557Z] Server pserv-13 does not have capacity for all threads. Starting 157.Threads left: 131\\n[2023-04-29T20:20:45.557Z] Server pserv-14 has capacity for all threads. Starting 131.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for foodnstuff\\n[2023-04-29T20:20:45.557Z] Server pserv-14 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:20:45.557Z] Server pserv-14 does not have capacity for all threads. Starting 26.Threads left: 262\\n[2023-04-29T20:20:45.557Z] Server pserv-15 has capacity for all threads. Starting 262.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for joesguns\\n[2023-04-29T20:20:45.557Z] Server pserv-15 does not have capacity for all threads. Starting 183.Threads left: 105\\n[2023-04-29T20:20:45.557Z] Server pserv-16 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:20:45.557Z] Server pserv-16 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for nectar-net\\n[2023-04-29T20:20:45.557Z] Server pserv-16 does not have capacity for all threads. Starting 52.Threads left: 236\\n[2023-04-29T20:20:45.557Z] Server pserv-17 has capacity for all threads. Starting 236.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for neo-net\\n[2023-04-29T20:20:45.557Z] Server pserv-17 does not have capacity for all threads. Starting 209.Threads left: 79\\n[2023-04-29T20:20:45.557Z] Server pserv-18 has capacity for all threads. Starting 79.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for phantasy\\n[2023-04-29T20:20:45.557Z] Server pserv-18 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for max-hardware\\n[2023-04-29T20:20:45.557Z] Server pserv-18 does not have capacity for all threads. Starting 78.Threads left: 210\\n[2023-04-29T20:20:45.557Z] Server pserv-19 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for zer0\\n[2023-04-29T20:20:45.557Z] Server pserv-19 does not have capacity for all threads. Starting 235.Threads left: 53\\n[2023-04-29T20:20:45.557Z] Server pserv-20 has capacity for all threads. Starting 53.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for iron-gym\\n[2023-04-29T20:20:45.557Z] Server pserv-20 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for silver-helix\\n[2023-04-29T20:20:45.557Z] Server pserv-20 does not have capacity for all threads. Starting 104.Threads left: 184\\n[2023-04-29T20:20:45.557Z] Server pserv-21 has capacity for all threads. Starting 184.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for omega-net\\n[2023-04-29T20:20:45.557Z] Server pserv-21 does not have capacity for all threads. Starting 261.Threads left: 27\\n[2023-04-29T20:20:45.557Z] Server pserv-22 has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for the-hub\\n[2023-04-29T20:20:45.557Z] Server pserv-22 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for crush-fitness\\n[2023-04-29T20:20:45.557Z] Server pserv-22 does not have capacity for all threads. Starting 130.Threads left: 158\\n[2023-04-29T20:20:45.557Z] Server pserv-23 has capacity for all threads. Starting 158.ThreadsLeft: 0\\n[2023-04-29T20:20:45.557Z] Starting threads for johnson-ortho\\n[2023-04-29T20:20:45.557Z] Server pserv-23 does not have capacity for all threads. Starting 287.Threads left: 1\\n[2023-04-29T20:30:45.564Z] ==============================\\n[2023-04-29T20:30:45.564Z] Starting to ramp up 17 servers with a max of 288 threads each\\n[2023-04-29T20:30:45.564Z] ==============================\\n[2023-04-29T20:30:45.564Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:30:45.564Z] Server pserv-13 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for n00dles\\n[2023-04-29T20:30:45.564Z] Server pserv-13 does not have capacity for all threads. Starting 157.Threads left: 131\\n[2023-04-29T20:30:45.564Z] Server pserv-14 has capacity for all threads. Starting 131.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for foodnstuff\\n[2023-04-29T20:30:45.564Z] Server pserv-14 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:30:45.564Z] Server pserv-14 does not have capacity for all threads. Starting 26.Threads left: 262\\n[2023-04-29T20:30:45.564Z] Server pserv-15 has capacity for all threads. Starting 262.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for joesguns\\n[2023-04-29T20:30:45.564Z] Server pserv-15 does not have capacity for all threads. Starting 183.Threads left: 105\\n[2023-04-29T20:30:45.564Z] Server pserv-16 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T20:30:45.564Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:30:45.565Z] Server pserv-16 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for nectar-net\\n[2023-04-29T20:30:45.565Z] Server pserv-16 does not have capacity for all threads. Starting 52.Threads left: 236\\n[2023-04-29T20:30:45.565Z] Server pserv-17 has capacity for all threads. Starting 236.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for neo-net\\n[2023-04-29T20:30:45.565Z] Server pserv-17 does not have capacity for all threads. Starting 209.Threads left: 79\\n[2023-04-29T20:30:45.565Z] Server pserv-18 has capacity for all threads. Starting 79.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for phantasy\\n[2023-04-29T20:30:45.565Z] Server pserv-18 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for max-hardware\\n[2023-04-29T20:30:45.565Z] Server pserv-18 does not have capacity for all threads. Starting 78.Threads left: 210\\n[2023-04-29T20:30:45.565Z] Server pserv-19 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for zer0\\n[2023-04-29T20:30:45.565Z] Server pserv-19 does not have capacity for all threads. Starting 235.Threads left: 53\\n[2023-04-29T20:30:45.565Z] Server pserv-20 has capacity for all threads. Starting 53.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for iron-gym\\n[2023-04-29T20:30:45.565Z] Server pserv-20 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for silver-helix\\n[2023-04-29T20:30:45.565Z] Server pserv-20 does not have capacity for all threads. Starting 104.Threads left: 184\\n[2023-04-29T20:30:45.565Z] Server pserv-21 has capacity for all threads. Starting 184.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for omega-net\\n[2023-04-29T20:30:45.565Z] Server pserv-21 does not have capacity for all threads. Starting 261.Threads left: 27\\n[2023-04-29T20:30:45.565Z] Server pserv-22 has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for the-hub\\n[2023-04-29T20:30:45.565Z] Server pserv-22 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for crush-fitness\\n[2023-04-29T20:30:45.565Z] Server pserv-22 does not have capacity for all threads. Starting 130.Threads left: 158\\n[2023-04-29T20:30:45.565Z] Server pserv-23 has capacity for all threads. Starting 158.ThreadsLeft: 0\\n[2023-04-29T20:30:45.565Z] Starting threads for johnson-ortho\\n[2023-04-29T20:30:45.565Z] Server pserv-23 does not have capacity for all threads. Starting 287.Threads left: 1\\n[2023-04-29T20:40:45.566Z] ==============================\\n[2023-04-29T20:40:45.566Z] Starting to ramp up 17 servers with a max of 288 threads each\\n[2023-04-29T20:40:45.566Z] ==============================\\n[2023-04-29T20:40:45.566Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:40:45.566Z] Server pserv-13 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.566Z] Starting threads for n00dles\\n[2023-04-29T20:40:45.566Z] Server pserv-13 does not have capacity for all threads. Starting 157.Threads left: 131\\n[2023-04-29T20:40:45.566Z] Server pserv-14 has capacity for all threads. Starting 131.ThreadsLeft: 0\\n[2023-04-29T20:40:45.566Z] Starting threads for foodnstuff\\n[2023-04-29T20:40:45.566Z] Server pserv-14 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:40:45.567Z] Server pserv-14 does not have capacity for all threads. Starting 26.Threads left: 262\\n[2023-04-29T20:40:45.567Z] Server pserv-15 has capacity for all threads. Starting 262.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for joesguns\\n[2023-04-29T20:40:45.567Z] Server pserv-15 does not have capacity for all threads. Starting 183.Threads left: 105\\n[2023-04-29T20:40:45.567Z] Server pserv-16 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:40:45.567Z] Server pserv-16 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for nectar-net\\n[2023-04-29T20:40:45.567Z] Server pserv-16 does not have capacity for all threads. Starting 52.Threads left: 236\\n[2023-04-29T20:40:45.567Z] Server pserv-17 has capacity for all threads. Starting 236.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for neo-net\\n[2023-04-29T20:40:45.567Z] Server pserv-17 does not have capacity for all threads. Starting 209.Threads left: 79\\n[2023-04-29T20:40:45.567Z] Server pserv-18 has capacity for all threads. Starting 79.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for phantasy\\n[2023-04-29T20:40:45.567Z] Server pserv-18 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for max-hardware\\n[2023-04-29T20:40:45.567Z] Server pserv-18 does not have capacity for all threads. Starting 78.Threads left: 210\\n[2023-04-29T20:40:45.567Z] Server pserv-19 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for zer0\\n[2023-04-29T20:40:45.567Z] Server pserv-19 does not have capacity for all threads. Starting 235.Threads left: 53\\n[2023-04-29T20:40:45.567Z] Server pserv-20 has capacity for all threads. Starting 53.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for iron-gym\\n[2023-04-29T20:40:45.567Z] Server pserv-20 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for silver-helix\\n[2023-04-29T20:40:45.567Z] Server pserv-20 does not have capacity for all threads. Starting 104.Threads left: 184\\n[2023-04-29T20:40:45.567Z] Server pserv-21 has capacity for all threads. Starting 184.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for omega-net\\n[2023-04-29T20:40:45.567Z] Server pserv-21 does not have capacity for all threads. Starting 261.Threads left: 27\\n[2023-04-29T20:40:45.567Z] Server pserv-22 has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for the-hub\\n[2023-04-29T20:40:45.567Z] Server pserv-22 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for crush-fitness\\n[2023-04-29T20:40:45.567Z] Server pserv-22 does not have capacity for all threads. Starting 130.Threads left: 158\\n[2023-04-29T20:40:45.567Z] Server pserv-23 has capacity for all threads. Starting 158.ThreadsLeft: 0\\n[2023-04-29T20:40:45.567Z] Starting threads for johnson-ortho\\n[2023-04-29T20:40:45.567Z] Server pserv-23 does not have capacity for all threads. Starting 287.Threads left: 1\\n[2023-04-29T20:50:45.574Z] ==============================\\n[2023-04-29T20:50:45.574Z] Starting to ramp up 18 servers with a max of 272 threads each\\n[2023-04-29T20:50:45.574Z] ==============================\\n[2023-04-29T20:50:45.574Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:50:45.574Z] Server pserv-13 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.574Z] Starting threads for n00dles\\n[2023-04-29T20:50:45.574Z] Server pserv-13 does not have capacity for all threads. Starting 173.Threads left: 99\\n[2023-04-29T20:50:45.574Z] Server pserv-14 has capacity for all threads. Starting 99.ThreadsLeft: 0\\n[2023-04-29T20:50:45.574Z] Starting threads for foodnstuff\\n[2023-04-29T20:50:45.574Z] Server pserv-14 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:50:45.575Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 198\\n[2023-04-29T20:50:45.575Z] Server pserv-15 has capacity for all threads. Starting 198.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for joesguns\\n[2023-04-29T20:50:45.575Z] Server pserv-15 does not have capacity for all threads. Starting 247.Threads left: 25\\n[2023-04-29T20:50:45.575Z] Server pserv-16 has capacity for all threads. Starting 25.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:50:45.575Z] Server pserv-16 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for nectar-net\\n[2023-04-29T20:50:45.575Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 124\\n[2023-04-29T20:50:45.575Z] Server pserv-17 has capacity for all threads. Starting 124.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for neo-net\\n[2023-04-29T20:50:45.575Z] Server pserv-17 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for phantasy\\n[2023-04-29T20:50:45.575Z] Server pserv-17 does not have capacity for all threads. Starting 49.Threads left: 223\\n[2023-04-29T20:50:45.575Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for max-hardware\\n[2023-04-29T20:50:45.575Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 50\\n[2023-04-29T20:50:45.575Z] Server pserv-19 has capacity for all threads. Starting 50.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for zer0\\n[2023-04-29T20:50:45.575Z] Server pserv-19 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for iron-gym\\n[2023-04-29T20:50:45.575Z] Server pserv-19 does not have capacity for all threads. Starting 123.Threads left: 149\\n[2023-04-29T20:50:45.575Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for silver-helix\\n[2023-04-29T20:50:45.575Z] Server pserv-20 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for omega-net\\n[2023-04-29T20:50:45.575Z] Server pserv-20 does not have capacity for all threads. Starting 24.Threads left: 248\\n[2023-04-29T20:50:45.575Z] Server pserv-21 has capacity for all threads. Starting 248.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for the-hub\\n[2023-04-29T20:50:45.575Z] Server pserv-21 does not have capacity for all threads. Starting 197.Threads left: 75\\n[2023-04-29T20:50:45.575Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for crush-fitness\\n[2023-04-29T20:50:45.575Z] Server pserv-22 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for johnson-ortho\\n[2023-04-29T20:50:45.575Z] Server pserv-22 does not have capacity for all threads. Starting 98.Threads left: 174\\n[2023-04-29T20:50:45.575Z] Server pserv-23 has capacity for all threads. Starting 174.ThreadsLeft: 0\\n[2023-04-29T20:50:45.575Z] Starting threads for rothman-uni\\n[2023-04-29T20:50:45.575Z] Server pserv-23 does not have capacity for all threads. Starting 271.Threads left: 1\\n[2023-04-29T21:00:45.581Z] ==============================\\n[2023-04-29T21:00:45.581Z] Starting to ramp up 18 servers with a max of 272 threads each\\n[2023-04-29T21:00:45.581Z] ==============================\\n[2023-04-29T21:00:45.581Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:00:45.581Z] Server pserv-13 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for n00dles\\n[2023-04-29T21:00:45.581Z] Server pserv-13 does not have capacity for all threads. Starting 173.Threads left: 99\\n[2023-04-29T21:00:45.581Z] Server pserv-14 has capacity for all threads. Starting 99.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for foodnstuff\\n[2023-04-29T21:00:45.581Z] Server pserv-14 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:00:45.581Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 198\\n[2023-04-29T21:00:45.581Z] Server pserv-15 has capacity for all threads. Starting 198.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for joesguns\\n[2023-04-29T21:00:45.581Z] Server pserv-15 does not have capacity for all threads. Starting 247.Threads left: 25\\n[2023-04-29T21:00:45.581Z] Server pserv-16 has capacity for all threads. Starting 25.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:00:45.581Z] Server pserv-16 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for nectar-net\\n[2023-04-29T21:00:45.581Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 124\\n[2023-04-29T21:00:45.581Z] Server pserv-17 has capacity for all threads. Starting 124.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for neo-net\\n[2023-04-29T21:00:45.581Z] Server pserv-17 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for phantasy\\n[2023-04-29T21:00:45.581Z] Server pserv-17 does not have capacity for all threads. Starting 49.Threads left: 223\\n[2023-04-29T21:00:45.581Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for max-hardware\\n[2023-04-29T21:00:45.581Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 50\\n[2023-04-29T21:00:45.581Z] Server pserv-19 has capacity for all threads. Starting 50.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for zer0\\n[2023-04-29T21:00:45.581Z] Server pserv-19 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for iron-gym\\n[2023-04-29T21:00:45.581Z] Server pserv-19 does not have capacity for all threads. Starting 123.Threads left: 149\\n[2023-04-29T21:00:45.581Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for silver-helix\\n[2023-04-29T21:00:45.581Z] Server pserv-20 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for omega-net\\n[2023-04-29T21:00:45.581Z] Server pserv-20 does not have capacity for all threads. Starting 24.Threads left: 248\\n[2023-04-29T21:00:45.581Z] Server pserv-21 has capacity for all threads. Starting 248.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for the-hub\\n[2023-04-29T21:00:45.581Z] Server pserv-21 does not have capacity for all threads. Starting 197.Threads left: 75\\n[2023-04-29T21:00:45.581Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for crush-fitness\\n[2023-04-29T21:00:45.581Z] Server pserv-22 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-29T21:00:45.581Z] Starting threads for johnson-ortho\\n[2023-04-29T21:00:45.582Z] Server pserv-22 does not have capacity for all threads. Starting 98.Threads left: 174\\n[2023-04-29T21:00:45.582Z] Server pserv-23 has capacity for all threads. Starting 174.ThreadsLeft: 0\\n[2023-04-29T21:00:45.582Z] Starting threads for rothman-uni\\n[2023-04-29T21:00:45.582Z] Server pserv-23 does not have capacity for all threads. Starting 271.Threads left: 1\\n[2023-04-29T21:10:45.583Z] ==============================\\n[2023-04-29T21:10:45.583Z] Starting to ramp up 19 servers with a max of 257 threads each\\n[2023-04-29T21:10:45.583Z] ==============================\\n[2023-04-29T21:10:45.583Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:10:45.583Z] Server pserv-13 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.583Z] Starting threads for n00dles\\n[2023-04-29T21:10:45.583Z] Server pserv-13 does not have capacity for all threads. Starting 188.Threads left: 69\\n[2023-04-29T21:10:45.583Z] Server pserv-14 has capacity for all threads. Starting 69.ThreadsLeft: 0\\n[2023-04-29T21:10:45.583Z] Starting threads for foodnstuff\\n[2023-04-29T21:10:45.583Z] Server pserv-14 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.583Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:10:45.583Z] Server pserv-14 does not have capacity for all threads. Starting 119.Threads left: 138\\n[2023-04-29T21:10:45.583Z] Server pserv-15 has capacity for all threads. Starting 138.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for joesguns\\n[2023-04-29T21:10:45.584Z] Server pserv-15 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:10:45.584Z] Server pserv-15 does not have capacity for all threads. Starting 50.Threads left: 207\\n[2023-04-29T21:10:45.584Z] Server pserv-16 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for nectar-net\\n[2023-04-29T21:10:45.584Z] Server pserv-16 does not have capacity for all threads. Starting 238.Threads left: 19\\n[2023-04-29T21:10:45.584Z] Server pserv-17 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for neo-net\\n[2023-04-29T21:10:45.584Z] Server pserv-17 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for phantasy\\n[2023-04-29T21:10:45.584Z] Server pserv-17 does not have capacity for all threads. Starting 169.Threads left: 88\\n[2023-04-29T21:10:45.584Z] Server pserv-18 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for max-hardware\\n[2023-04-29T21:10:45.584Z] Server pserv-18 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for zer0\\n[2023-04-29T21:10:45.584Z] Server pserv-18 does not have capacity for all threads. Starting 100.Threads left: 157\\n[2023-04-29T21:10:45.584Z] Server pserv-19 has capacity for all threads. Starting 157.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for iron-gym\\n[2023-04-29T21:10:45.584Z] Server pserv-19 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for silver-helix\\n[2023-04-29T21:10:45.584Z] Server pserv-19 does not have capacity for all threads. Starting 31.Threads left: 226\\n[2023-04-29T21:10:45.584Z] Server pserv-20 has capacity for all threads. Starting 226.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for omega-net\\n[2023-04-29T21:10:45.584Z] Server pserv-20 does not have capacity for all threads. Starting 219.Threads left: 38\\n[2023-04-29T21:10:45.584Z] Server pserv-21 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for the-hub\\n[2023-04-29T21:10:45.584Z] Server pserv-21 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for crush-fitness\\n[2023-04-29T21:10:45.584Z] Server pserv-21 does not have capacity for all threads. Starting 150.Threads left: 107\\n[2023-04-29T21:10:45.584Z] Server pserv-22 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for johnson-ortho\\n[2023-04-29T21:10:45.584Z] Server pserv-22 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for rothman-uni\\n[2023-04-29T21:10:45.584Z] Server pserv-22 does not have capacity for all threads. Starting 81.Threads left: 176\\n[2023-04-29T21:10:45.584Z] Server pserv-23 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T21:10:45.584Z] Starting threads for computek\\n[2023-04-29T21:10:45.584Z] Server pserv-23 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] ==============================\\n[2023-04-29T21:20:45.592Z] Starting to ramp up 19 servers with a max of 257 threads each\\n[2023-04-29T21:20:45.592Z] ==============================\\n[2023-04-29T21:20:45.592Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:20:45.592Z] Server pserv-13 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for n00dles\\n[2023-04-29T21:20:45.592Z] Server pserv-13 does not have capacity for all threads. Starting 188.Threads left: 69\\n[2023-04-29T21:20:45.592Z] Server pserv-14 has capacity for all threads. Starting 69.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for foodnstuff\\n[2023-04-29T21:20:45.592Z] Server pserv-14 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:20:45.592Z] Server pserv-14 does not have capacity for all threads. Starting 119.Threads left: 138\\n[2023-04-29T21:20:45.592Z] Server pserv-15 has capacity for all threads. Starting 138.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for joesguns\\n[2023-04-29T21:20:45.592Z] Server pserv-15 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:20:45.592Z] Server pserv-15 does not have capacity for all threads. Starting 50.Threads left: 207\\n[2023-04-29T21:20:45.592Z] Server pserv-16 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for nectar-net\\n[2023-04-29T21:20:45.592Z] Server pserv-16 does not have capacity for all threads. Starting 238.Threads left: 19\\n[2023-04-29T21:20:45.592Z] Server pserv-17 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for neo-net\\n[2023-04-29T21:20:45.592Z] Server pserv-17 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for phantasy\\n[2023-04-29T21:20:45.592Z] Server pserv-17 does not have capacity for all threads. Starting 169.Threads left: 88\\n[2023-04-29T21:20:45.592Z] Server pserv-18 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for max-hardware\\n[2023-04-29T21:20:45.592Z] Server pserv-18 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for zer0\\n[2023-04-29T21:20:45.592Z] Server pserv-18 does not have capacity for all threads. Starting 100.Threads left: 157\\n[2023-04-29T21:20:45.592Z] Server pserv-19 has capacity for all threads. Starting 157.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for iron-gym\\n[2023-04-29T21:20:45.592Z] Server pserv-19 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for silver-helix\\n[2023-04-29T21:20:45.592Z] Server pserv-19 does not have capacity for all threads. Starting 31.Threads left: 226\\n[2023-04-29T21:20:45.592Z] Server pserv-20 has capacity for all threads. Starting 226.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for omega-net\\n[2023-04-29T21:20:45.592Z] Server pserv-20 does not have capacity for all threads. Starting 219.Threads left: 38\\n[2023-04-29T21:20:45.592Z] Server pserv-21 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for the-hub\\n[2023-04-29T21:20:45.592Z] Server pserv-21 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for crush-fitness\\n[2023-04-29T21:20:45.592Z] Server pserv-21 does not have capacity for all threads. Starting 150.Threads left: 107\\n[2023-04-29T21:20:45.592Z] Server pserv-22 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for johnson-ortho\\n[2023-04-29T21:20:45.592Z] Server pserv-22 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:20:45.592Z] Starting threads for rothman-uni\\n[2023-04-29T21:20:45.593Z] Server pserv-22 does not have capacity for all threads. Starting 81.Threads left: 176\\n[2023-04-29T21:20:45.593Z] Server pserv-23 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T21:20:45.593Z] Starting threads for computek\\n[2023-04-29T21:20:45.593Z] Server pserv-23 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.600Z] ==============================\\n[2023-04-29T21:30:45.600Z] Starting to ramp up 19 servers with a max of 257 threads each\\n[2023-04-29T21:30:45.600Z] ==============================\\n[2023-04-29T21:30:45.600Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:30:45.600Z] Server pserv-13 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for n00dles\\n[2023-04-29T21:30:45.601Z] Server pserv-13 does not have capacity for all threads. Starting 188.Threads left: 69\\n[2023-04-29T21:30:45.601Z] Server pserv-14 has capacity for all threads. Starting 69.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for foodnstuff\\n[2023-04-29T21:30:45.601Z] Server pserv-14 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:30:45.601Z] Server pserv-14 does not have capacity for all threads. Starting 119.Threads left: 138\\n[2023-04-29T21:30:45.601Z] Server pserv-15 has capacity for all threads. Starting 138.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for joesguns\\n[2023-04-29T21:30:45.601Z] Server pserv-15 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:30:45.601Z] Server pserv-15 does not have capacity for all threads. Starting 50.Threads left: 207\\n[2023-04-29T21:30:45.601Z] Server pserv-16 has capacity for all threads. Starting 207.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for nectar-net\\n[2023-04-29T21:30:45.601Z] Server pserv-16 does not have capacity for all threads. Starting 238.Threads left: 19\\n[2023-04-29T21:30:45.601Z] Server pserv-17 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for neo-net\\n[2023-04-29T21:30:45.601Z] Server pserv-17 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for phantasy\\n[2023-04-29T21:30:45.601Z] Server pserv-17 does not have capacity for all threads. Starting 169.Threads left: 88\\n[2023-04-29T21:30:45.601Z] Server pserv-18 has capacity for all threads. Starting 88.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for max-hardware\\n[2023-04-29T21:30:45.601Z] Server pserv-18 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for zer0\\n[2023-04-29T21:30:45.601Z] Server pserv-18 does not have capacity for all threads. Starting 100.Threads left: 157\\n[2023-04-29T21:30:45.601Z] Server pserv-19 has capacity for all threads. Starting 157.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for iron-gym\\n[2023-04-29T21:30:45.601Z] Server pserv-19 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for silver-helix\\n[2023-04-29T21:30:45.601Z] Server pserv-19 does not have capacity for all threads. Starting 31.Threads left: 226\\n[2023-04-29T21:30:45.601Z] Server pserv-20 has capacity for all threads. Starting 226.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for omega-net\\n[2023-04-29T21:30:45.601Z] Server pserv-20 does not have capacity for all threads. Starting 219.Threads left: 38\\n[2023-04-29T21:30:45.601Z] Server pserv-21 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for the-hub\\n[2023-04-29T21:30:45.601Z] Server pserv-21 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for crush-fitness\\n[2023-04-29T21:30:45.601Z] Server pserv-21 does not have capacity for all threads. Starting 150.Threads left: 107\\n[2023-04-29T21:30:45.601Z] Server pserv-22 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for johnson-ortho\\n[2023-04-29T21:30:45.601Z] Server pserv-22 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:30:45.601Z] Starting threads for rothman-uni\\n[2023-04-29T21:30:45.601Z] Server pserv-22 does not have capacity for all threads. Starting 81.Threads left: 176\\n[2023-04-29T21:30:45.601Z] Server pserv-23 has capacity for all threads. Starting 176.ThreadsLeft: 0\\n[2023-04-29T21:30:45.602Z] Starting threads for computek\\n[2023-04-29T21:30:45.602Z] Server pserv-23 has capacity for all threads. Starting 257.ThreadsLeft: 0\\n[2023-04-29T21:40:45.603Z] ==============================\\n[2023-04-29T21:40:45.604Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T21:40:45.604Z] ==============================\\n[2023-04-29T21:40:45.604Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:40:45.604Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for n00dles\\n[2023-04-29T21:40:45.604Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T21:40:45.604Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for foodnstuff\\n[2023-04-29T21:40:45.604Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:40:45.604Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T21:40:45.604Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for joesguns\\n[2023-04-29T21:40:45.604Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:40:45.604Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T21:40:45.604Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for nectar-net\\n[2023-04-29T21:40:45.604Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for neo-net\\n[2023-04-29T21:40:45.604Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T21:40:45.604Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for phantasy\\n[2023-04-29T21:40:45.604Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for max-hardware\\n[2023-04-29T21:40:45.604Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T21:40:45.604Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for zer0\\n[2023-04-29T21:40:45.604Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T21:40:45.604Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for iron-gym\\n[2023-04-29T21:40:45.604Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for silver-helix\\n[2023-04-29T21:40:45.604Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T21:40:45.604Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for omega-net\\n[2023-04-29T21:40:45.604Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for the-hub\\n[2023-04-29T21:40:45.604Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T21:40:45.604Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for crush-fitness\\n[2023-04-29T21:40:45.604Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for johnson-ortho\\n[2023-04-29T21:40:45.604Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T21:40:45.604Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for rothman-uni\\n[2023-04-29T21:40:45.604Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for computek\\n[2023-04-29T21:40:45.604Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T21:40:45.604Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T21:40:45.604Z] Starting threads for rho-construction\\n[2023-04-29T21:40:45.604Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] ==============================\\n[2023-04-29T21:50:45.611Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T21:50:45.611Z] ==============================\\n[2023-04-29T21:50:45.611Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:50:45.611Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for n00dles\\n[2023-04-29T21:50:45.611Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T21:50:45.611Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for foodnstuff\\n[2023-04-29T21:50:45.611Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:50:45.611Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T21:50:45.611Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for joesguns\\n[2023-04-29T21:50:45.611Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:50:45.611Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T21:50:45.611Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for nectar-net\\n[2023-04-29T21:50:45.611Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.611Z] Starting threads for neo-net\\n[2023-04-29T21:50:45.611Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T21:50:45.612Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for phantasy\\n[2023-04-29T21:50:45.612Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for max-hardware\\n[2023-04-29T21:50:45.612Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T21:50:45.612Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for zer0\\n[2023-04-29T21:50:45.612Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T21:50:45.612Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for iron-gym\\n[2023-04-29T21:50:45.612Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for silver-helix\\n[2023-04-29T21:50:45.612Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T21:50:45.612Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for omega-net\\n[2023-04-29T21:50:45.612Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for the-hub\\n[2023-04-29T21:50:45.612Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T21:50:45.612Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for crush-fitness\\n[2023-04-29T21:50:45.612Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for johnson-ortho\\n[2023-04-29T21:50:45.612Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T21:50:45.612Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for rothman-uni\\n[2023-04-29T21:50:45.612Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for computek\\n[2023-04-29T21:50:45.612Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T21:50:45.612Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T21:50:45.612Z] Starting threads for rho-construction\\n[2023-04-29T21:50:45.612Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] ==============================\\n[2023-04-29T22:00:45.619Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T22:00:45.619Z] ==============================\\n[2023-04-29T22:00:45.619Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:00:45.619Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for n00dles\\n[2023-04-29T22:00:45.619Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T22:00:45.619Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for foodnstuff\\n[2023-04-29T22:00:45.619Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:00:45.619Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T22:00:45.619Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for joesguns\\n[2023-04-29T22:00:45.619Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:00:45.619Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T22:00:45.619Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for nectar-net\\n[2023-04-29T22:00:45.619Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for neo-net\\n[2023-04-29T22:00:45.619Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T22:00:45.619Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for phantasy\\n[2023-04-29T22:00:45.619Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for max-hardware\\n[2023-04-29T22:00:45.619Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T22:00:45.619Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for zer0\\n[2023-04-29T22:00:45.619Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T22:00:45.619Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for iron-gym\\n[2023-04-29T22:00:45.619Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for silver-helix\\n[2023-04-29T22:00:45.619Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T22:00:45.619Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for omega-net\\n[2023-04-29T22:00:45.619Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for the-hub\\n[2023-04-29T22:00:45.619Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T22:00:45.619Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for crush-fitness\\n[2023-04-29T22:00:45.619Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for johnson-ortho\\n[2023-04-29T22:00:45.619Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T22:00:45.619Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for rothman-uni\\n[2023-04-29T22:00:45.619Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for computek\\n[2023-04-29T22:00:45.619Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T22:00:45.619Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T22:00:45.619Z] Starting threads for rho-construction\\n[2023-04-29T22:00:45.619Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.630Z] ==============================\\n[2023-04-29T22:10:45.630Z] Starting to ramp up 20 servers with a max of 244 threads each\\n[2023-04-29T22:10:45.630Z] ==============================\\n[2023-04-29T22:10:45.630Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:10:45.630Z] Server pserv-13 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for n00dles\\n[2023-04-29T22:10:45.631Z] Server pserv-13 does not have capacity for all threads. Starting 201.Threads left: 43\\n[2023-04-29T22:10:45.631Z] Server pserv-14 has capacity for all threads. Starting 43.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for foodnstuff\\n[2023-04-29T22:10:45.631Z] Server pserv-14 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:10:45.631Z] Server pserv-14 does not have capacity for all threads. Starting 158.Threads left: 86\\n[2023-04-29T22:10:45.631Z] Server pserv-15 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for joesguns\\n[2023-04-29T22:10:45.631Z] Server pserv-15 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:10:45.631Z] Server pserv-15 does not have capacity for all threads. Starting 115.Threads left: 129\\n[2023-04-29T22:10:45.631Z] Server pserv-16 has capacity for all threads. Starting 129.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for nectar-net\\n[2023-04-29T22:10:45.631Z] Server pserv-16 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for neo-net\\n[2023-04-29T22:10:45.631Z] Server pserv-16 does not have capacity for all threads. Starting 72.Threads left: 172\\n[2023-04-29T22:10:45.631Z] Server pserv-17 has capacity for all threads. Starting 172.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for phantasy\\n[2023-04-29T22:10:45.631Z] Server pserv-17 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for max-hardware\\n[2023-04-29T22:10:45.631Z] Server pserv-17 does not have capacity for all threads. Starting 29.Threads left: 215\\n[2023-04-29T22:10:45.631Z] Server pserv-18 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for zer0\\n[2023-04-29T22:10:45.631Z] Server pserv-18 does not have capacity for all threads. Starting 230.Threads left: 14\\n[2023-04-29T22:10:45.631Z] Server pserv-19 has capacity for all threads. Starting 14.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for iron-gym\\n[2023-04-29T22:10:45.631Z] Server pserv-19 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for silver-helix\\n[2023-04-29T22:10:45.631Z] Server pserv-19 does not have capacity for all threads. Starting 187.Threads left: 57\\n[2023-04-29T22:10:45.631Z] Server pserv-20 has capacity for all threads. Starting 57.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for omega-net\\n[2023-04-29T22:10:45.631Z] Server pserv-20 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for the-hub\\n[2023-04-29T22:10:45.631Z] Server pserv-20 does not have capacity for all threads. Starting 144.Threads left: 100\\n[2023-04-29T22:10:45.631Z] Server pserv-21 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for crush-fitness\\n[2023-04-29T22:10:45.631Z] Server pserv-21 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for johnson-ortho\\n[2023-04-29T22:10:45.631Z] Server pserv-21 does not have capacity for all threads. Starting 101.Threads left: 143\\n[2023-04-29T22:10:45.631Z] Server pserv-22 has capacity for all threads. Starting 143.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for rothman-uni\\n[2023-04-29T22:10:45.631Z] Server pserv-22 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for computek\\n[2023-04-29T22:10:45.631Z] Server pserv-22 does not have capacity for all threads. Starting 58.Threads left: 186\\n[2023-04-29T22:10:45.631Z] Server pserv-23 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-29T22:10:45.631Z] Starting threads for rho-construction\\n[2023-04-29T22:10:45.631Z] Server pserv-23 has capacity for all threads. Starting 244.ThreadsLeft: 0\\n[2023-04-29T22:20:45.637Z] ==============================\\n[2023-04-29T22:20:45.637Z] Starting to ramp up 21 servers with a max of 233 threads each\\n[2023-04-29T22:20:45.637Z] ==============================\\n[2023-04-29T22:20:45.637Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:20:45.637Z] Server pserv-13 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.637Z] Starting threads for n00dles\\n[2023-04-29T22:20:45.637Z] Server pserv-13 does not have capacity for all threads. Starting 212.Threads left: 21\\n[2023-04-29T22:20:45.637Z] Server pserv-14 has capacity for all threads. Starting 21.ThreadsLeft: 0\\n[2023-04-29T22:20:45.637Z] Starting threads for foodnstuff\\n[2023-04-29T22:20:45.637Z] Server pserv-14 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:20:45.638Z] Server pserv-14 does not have capacity for all threads. Starting 191.Threads left: 42\\n[2023-04-29T22:20:45.638Z] Server pserv-15 has capacity for all threads. Starting 42.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for joesguns\\n[2023-04-29T22:20:45.638Z] Server pserv-15 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:20:45.638Z] Server pserv-15 does not have capacity for all threads. Starting 170.Threads left: 63\\n[2023-04-29T22:20:45.638Z] Server pserv-16 has capacity for all threads. Starting 63.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for nectar-net\\n[2023-04-29T22:20:45.638Z] Server pserv-16 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for neo-net\\n[2023-04-29T22:20:45.638Z] Server pserv-16 does not have capacity for all threads. Starting 149.Threads left: 84\\n[2023-04-29T22:20:45.638Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for phantasy\\n[2023-04-29T22:20:45.638Z] Server pserv-17 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for max-hardware\\n[2023-04-29T22:20:45.638Z] Server pserv-17 does not have capacity for all threads. Starting 128.Threads left: 105\\n[2023-04-29T22:20:45.638Z] Server pserv-18 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for zer0\\n[2023-04-29T22:20:45.638Z] Server pserv-18 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for iron-gym\\n[2023-04-29T22:20:45.638Z] Server pserv-18 does not have capacity for all threads. Starting 107.Threads left: 126\\n[2023-04-29T22:20:45.638Z] Server pserv-19 has capacity for all threads. Starting 126.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for silver-helix\\n[2023-04-29T22:20:45.638Z] Server pserv-19 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for omega-net\\n[2023-04-29T22:20:45.638Z] Server pserv-19 does not have capacity for all threads. Starting 86.Threads left: 147\\n[2023-04-29T22:20:45.638Z] Server pserv-20 has capacity for all threads. Starting 147.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for the-hub\\n[2023-04-29T22:20:45.638Z] Server pserv-20 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for crush-fitness\\n[2023-04-29T22:20:45.638Z] Server pserv-20 does not have capacity for all threads. Starting 65.Threads left: 168\\n[2023-04-29T22:20:45.638Z] Server pserv-21 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for johnson-ortho\\n[2023-04-29T22:20:45.638Z] Server pserv-21 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for rothman-uni\\n[2023-04-29T22:20:45.638Z] Server pserv-21 does not have capacity for all threads. Starting 44.Threads left: 189\\n[2023-04-29T22:20:45.638Z] Server pserv-22 has capacity for all threads. Starting 189.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for computek\\n[2023-04-29T22:20:45.638Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for rho-construction\\n[2023-04-29T22:20:45.638Z] Server pserv-22 does not have capacity for all threads. Starting 23.Threads left: 210\\n[2023-04-29T22:20:45.638Z] Server pserv-23 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T22:20:45.638Z] Starting threads for alpha-ent\\n[2023-04-29T22:20:45.638Z] Server pserv-23 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.645Z] ==============================\\n[2023-04-29T22:30:45.645Z] Starting to ramp up 21 servers with a max of 233 threads each\\n[2023-04-29T22:30:45.645Z] ==============================\\n[2023-04-29T22:30:45.645Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:30:45.646Z] Server pserv-13 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for n00dles\\n[2023-04-29T22:30:45.646Z] Server pserv-13 does not have capacity for all threads. Starting 212.Threads left: 21\\n[2023-04-29T22:30:45.646Z] Server pserv-14 has capacity for all threads. Starting 21.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for foodnstuff\\n[2023-04-29T22:30:45.646Z] Server pserv-14 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:30:45.646Z] Server pserv-14 does not have capacity for all threads. Starting 191.Threads left: 42\\n[2023-04-29T22:30:45.646Z] Server pserv-15 has capacity for all threads. Starting 42.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for joesguns\\n[2023-04-29T22:30:45.646Z] Server pserv-15 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:30:45.646Z] Server pserv-15 does not have capacity for all threads. Starting 170.Threads left: 63\\n[2023-04-29T22:30:45.646Z] Server pserv-16 has capacity for all threads. Starting 63.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for nectar-net\\n[2023-04-29T22:30:45.646Z] Server pserv-16 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for neo-net\\n[2023-04-29T22:30:45.646Z] Server pserv-16 does not have capacity for all threads. Starting 149.Threads left: 84\\n[2023-04-29T22:30:45.646Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for phantasy\\n[2023-04-29T22:30:45.646Z] Server pserv-17 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for max-hardware\\n[2023-04-29T22:30:45.646Z] Server pserv-17 does not have capacity for all threads. Starting 128.Threads left: 105\\n[2023-04-29T22:30:45.646Z] Server pserv-18 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for zer0\\n[2023-04-29T22:30:45.646Z] Server pserv-18 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for iron-gym\\n[2023-04-29T22:30:45.646Z] Server pserv-18 does not have capacity for all threads. Starting 107.Threads left: 126\\n[2023-04-29T22:30:45.646Z] Server pserv-19 has capacity for all threads. Starting 126.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for silver-helix\\n[2023-04-29T22:30:45.646Z] Server pserv-19 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for omega-net\\n[2023-04-29T22:30:45.646Z] Server pserv-19 does not have capacity for all threads. Starting 86.Threads left: 147\\n[2023-04-29T22:30:45.646Z] Server pserv-20 has capacity for all threads. Starting 147.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for the-hub\\n[2023-04-29T22:30:45.646Z] Server pserv-20 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for crush-fitness\\n[2023-04-29T22:30:45.646Z] Server pserv-20 does not have capacity for all threads. Starting 65.Threads left: 168\\n[2023-04-29T22:30:45.646Z] Server pserv-21 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for johnson-ortho\\n[2023-04-29T22:30:45.646Z] Server pserv-21 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for rothman-uni\\n[2023-04-29T22:30:45.646Z] Server pserv-21 does not have capacity for all threads. Starting 44.Threads left: 189\\n[2023-04-29T22:30:45.646Z] Server pserv-22 has capacity for all threads. Starting 189.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for computek\\n[2023-04-29T22:30:45.646Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for rho-construction\\n[2023-04-29T22:30:45.646Z] Server pserv-22 does not have capacity for all threads. Starting 23.Threads left: 210\\n[2023-04-29T22:30:45.646Z] Server pserv-23 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T22:30:45.646Z] Starting threads for alpha-ent\\n[2023-04-29T22:30:45.646Z] Server pserv-23 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] ==============================\\n[2023-04-29T22:40:45.647Z] Starting to ramp up 21 servers with a max of 233 threads each\\n[2023-04-29T22:40:45.647Z] ==============================\\n[2023-04-29T22:40:45.647Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:40:45.647Z] Server pserv-13 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for n00dles\\n[2023-04-29T22:40:45.647Z] Server pserv-13 does not have capacity for all threads. Starting 212.Threads left: 21\\n[2023-04-29T22:40:45.647Z] Server pserv-14 has capacity for all threads. Starting 21.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for foodnstuff\\n[2023-04-29T22:40:45.647Z] Server pserv-14 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:40:45.647Z] Server pserv-14 does not have capacity for all threads. Starting 191.Threads left: 42\\n[2023-04-29T22:40:45.647Z] Server pserv-15 has capacity for all threads. Starting 42.ThreadsLeft: 0\\n[2023-04-29T22:40:45.647Z] Starting threads for joesguns\\n[2023-04-29T22:40:45.647Z] Server pserv-15 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:40:45.648Z] Server pserv-15 does not have capacity for all threads. Starting 170.Threads left: 63\\n[2023-04-29T22:40:45.648Z] Server pserv-16 has capacity for all threads. Starting 63.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for nectar-net\\n[2023-04-29T22:40:45.648Z] Server pserv-16 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for neo-net\\n[2023-04-29T22:40:45.648Z] Server pserv-16 does not have capacity for all threads. Starting 149.Threads left: 84\\n[2023-04-29T22:40:45.648Z] Server pserv-17 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for phantasy\\n[2023-04-29T22:40:45.648Z] Server pserv-17 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for max-hardware\\n[2023-04-29T22:40:45.648Z] Server pserv-17 does not have capacity for all threads. Starting 128.Threads left: 105\\n[2023-04-29T22:40:45.648Z] Server pserv-18 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for zer0\\n[2023-04-29T22:40:45.648Z] Server pserv-18 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for iron-gym\\n[2023-04-29T22:40:45.648Z] Server pserv-18 does not have capacity for all threads. Starting 107.Threads left: 126\\n[2023-04-29T22:40:45.648Z] Server pserv-19 has capacity for all threads. Starting 126.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for silver-helix\\n[2023-04-29T22:40:45.648Z] Server pserv-19 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for omega-net\\n[2023-04-29T22:40:45.648Z] Server pserv-19 does not have capacity for all threads. Starting 86.Threads left: 147\\n[2023-04-29T22:40:45.648Z] Server pserv-20 has capacity for all threads. Starting 147.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for the-hub\\n[2023-04-29T22:40:45.648Z] Server pserv-20 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for crush-fitness\\n[2023-04-29T22:40:45.648Z] Server pserv-20 does not have capacity for all threads. Starting 65.Threads left: 168\\n[2023-04-29T22:40:45.648Z] Server pserv-21 has capacity for all threads. Starting 168.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for johnson-ortho\\n[2023-04-29T22:40:45.648Z] Server pserv-21 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for rothman-uni\\n[2023-04-29T22:40:45.648Z] Server pserv-21 does not have capacity for all threads. Starting 44.Threads left: 189\\n[2023-04-29T22:40:45.648Z] Server pserv-22 has capacity for all threads. Starting 189.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for computek\\n[2023-04-29T22:40:45.648Z] Server pserv-22 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for rho-construction\\n[2023-04-29T22:40:45.648Z] Server pserv-22 does not have capacity for all threads. Starting 23.Threads left: 210\\n[2023-04-29T22:40:45.648Z] Server pserv-23 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-29T22:40:45.648Z] Starting threads for alpha-ent\\n[2023-04-29T22:40:45.648Z] Server pserv-23 has capacity for all threads. Starting 233.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] ==============================\\n[2023-04-29T22:50:45.655Z] Starting to ramp up 22 servers with a max of 222 threads each\\n[2023-04-29T22:50:45.655Z] ==============================\\n[2023-04-29T22:50:45.655Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:50:45.655Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for n00dles\\n[2023-04-29T22:50:45.655Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for foodnstuff\\n[2023-04-29T22:50:45.655Z] Server pserv-13 does not have capacity for all threads. Starting 1.Threads left: 221\\n[2023-04-29T22:50:45.655Z] Server pserv-14 has capacity for all threads. Starting 221.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:50:45.655Z] Server pserv-14 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for joesguns\\n[2023-04-29T22:50:45.655Z] Server pserv-14 does not have capacity for all threads. Starting 2.Threads left: 220\\n[2023-04-29T22:50:45.655Z] Server pserv-15 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:50:45.655Z] Server pserv-15 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for nectar-net\\n[2023-04-29T22:50:45.655Z] Server pserv-15 does not have capacity for all threads. Starting 3.Threads left: 219\\n[2023-04-29T22:50:45.655Z] Server pserv-16 has capacity for all threads. Starting 219.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for neo-net\\n[2023-04-29T22:50:45.655Z] Server pserv-16 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for phantasy\\n[2023-04-29T22:50:45.655Z] Server pserv-16 does not have capacity for all threads. Starting 4.Threads left: 218\\n[2023-04-29T22:50:45.655Z] Server pserv-17 has capacity for all threads. Starting 218.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for max-hardware\\n[2023-04-29T22:50:45.655Z] Server pserv-17 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for zer0\\n[2023-04-29T22:50:45.655Z] Server pserv-17 does not have capacity for all threads. Starting 5.Threads left: 217\\n[2023-04-29T22:50:45.655Z] Server pserv-18 has capacity for all threads. Starting 217.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for iron-gym\\n[2023-04-29T22:50:45.655Z] Server pserv-18 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for silver-helix\\n[2023-04-29T22:50:45.655Z] Server pserv-18 does not have capacity for all threads. Starting 6.Threads left: 216\\n[2023-04-29T22:50:45.655Z] Server pserv-19 has capacity for all threads. Starting 216.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for omega-net\\n[2023-04-29T22:50:45.655Z] Server pserv-19 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for the-hub\\n[2023-04-29T22:50:45.655Z] Server pserv-19 does not have capacity for all threads. Starting 7.Threads left: 215\\n[2023-04-29T22:50:45.655Z] Server pserv-20 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T22:50:45.655Z] Starting threads for crush-fitness\\n[2023-04-29T22:50:45.655Z] Server pserv-20 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for johnson-ortho\\n[2023-04-29T22:50:45.656Z] Server pserv-20 does not have capacity for all threads. Starting 8.Threads left: 214\\n[2023-04-29T22:50:45.656Z] Server pserv-21 has capacity for all threads. Starting 214.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for rothman-uni\\n[2023-04-29T22:50:45.656Z] Server pserv-21 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for computek\\n[2023-04-29T22:50:45.656Z] Server pserv-21 does not have capacity for all threads. Starting 9.Threads left: 213\\n[2023-04-29T22:50:45.656Z] Server pserv-22 has capacity for all threads. Starting 213.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for rho-construction\\n[2023-04-29T22:50:45.656Z] Server pserv-22 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for alpha-ent\\n[2023-04-29T22:50:45.656Z] Server pserv-22 does not have capacity for all threads. Starting 10.Threads left: 212\\n[2023-04-29T22:50:45.656Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T22:50:45.656Z] Starting threads for millenium-fitness\\n[2023-04-29T22:50:45.656Z] Server pserv-23 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] ==============================\\n[2023-04-29T23:00:45.662Z] Starting to ramp up 22 servers with a max of 222 threads each\\n[2023-04-29T23:00:45.662Z] ==============================\\n[2023-04-29T23:00:45.662Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:00:45.662Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for n00dles\\n[2023-04-29T23:00:45.662Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for foodnstuff\\n[2023-04-29T23:00:45.662Z] Server pserv-13 does not have capacity for all threads. Starting 1.Threads left: 221\\n[2023-04-29T23:00:45.662Z] Server pserv-14 has capacity for all threads. Starting 221.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:00:45.662Z] Server pserv-14 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for joesguns\\n[2023-04-29T23:00:45.662Z] Server pserv-14 does not have capacity for all threads. Starting 2.Threads left: 220\\n[2023-04-29T23:00:45.662Z] Server pserv-15 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:00:45.662Z] Server pserv-15 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.662Z] Starting threads for nectar-net\\n[2023-04-29T23:00:45.662Z] Server pserv-15 does not have capacity for all threads. Starting 3.Threads left: 219\\n[2023-04-29T23:00:45.663Z] Server pserv-16 has capacity for all threads. Starting 219.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for neo-net\\n[2023-04-29T23:00:45.663Z] Server pserv-16 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for phantasy\\n[2023-04-29T23:00:45.663Z] Server pserv-16 does not have capacity for all threads. Starting 4.Threads left: 218\\n[2023-04-29T23:00:45.663Z] Server pserv-17 has capacity for all threads. Starting 218.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for max-hardware\\n[2023-04-29T23:00:45.663Z] Server pserv-17 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for zer0\\n[2023-04-29T23:00:45.663Z] Server pserv-17 does not have capacity for all threads. Starting 5.Threads left: 217\\n[2023-04-29T23:00:45.663Z] Server pserv-18 has capacity for all threads. Starting 217.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for iron-gym\\n[2023-04-29T23:00:45.663Z] Server pserv-18 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for silver-helix\\n[2023-04-29T23:00:45.663Z] Server pserv-18 does not have capacity for all threads. Starting 6.Threads left: 216\\n[2023-04-29T23:00:45.663Z] Server pserv-19 has capacity for all threads. Starting 216.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for omega-net\\n[2023-04-29T23:00:45.663Z] Server pserv-19 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for the-hub\\n[2023-04-29T23:00:45.663Z] Server pserv-19 does not have capacity for all threads. Starting 7.Threads left: 215\\n[2023-04-29T23:00:45.663Z] Server pserv-20 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for crush-fitness\\n[2023-04-29T23:00:45.663Z] Server pserv-20 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for johnson-ortho\\n[2023-04-29T23:00:45.663Z] Server pserv-20 does not have capacity for all threads. Starting 8.Threads left: 214\\n[2023-04-29T23:00:45.663Z] Server pserv-21 has capacity for all threads. Starting 214.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for rothman-uni\\n[2023-04-29T23:00:45.663Z] Server pserv-21 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for computek\\n[2023-04-29T23:00:45.663Z] Server pserv-21 does not have capacity for all threads. Starting 9.Threads left: 213\\n[2023-04-29T23:00:45.663Z] Server pserv-22 has capacity for all threads. Starting 213.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for rho-construction\\n[2023-04-29T23:00:45.663Z] Server pserv-22 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for alpha-ent\\n[2023-04-29T23:00:45.663Z] Server pserv-22 does not have capacity for all threads. Starting 10.Threads left: 212\\n[2023-04-29T23:00:45.663Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:00:45.663Z] Starting threads for millenium-fitness\\n[2023-04-29T23:00:45.663Z] Server pserv-23 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] ==============================\\n[2023-04-29T23:10:45.664Z] Starting to ramp up 22 servers with a max of 222 threads each\\n[2023-04-29T23:10:45.664Z] ==============================\\n[2023-04-29T23:10:45.664Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:10:45.664Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for n00dles\\n[2023-04-29T23:10:45.664Z] Server pserv-13 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for foodnstuff\\n[2023-04-29T23:10:45.664Z] Server pserv-13 does not have capacity for all threads. Starting 1.Threads left: 221\\n[2023-04-29T23:10:45.664Z] Server pserv-14 has capacity for all threads. Starting 221.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:10:45.664Z] Server pserv-14 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for joesguns\\n[2023-04-29T23:10:45.664Z] Server pserv-14 does not have capacity for all threads. Starting 2.Threads left: 220\\n[2023-04-29T23:10:45.664Z] Server pserv-15 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:10:45.664Z] Server pserv-15 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for nectar-net\\n[2023-04-29T23:10:45.664Z] Server pserv-15 does not have capacity for all threads. Starting 3.Threads left: 219\\n[2023-04-29T23:10:45.664Z] Server pserv-16 has capacity for all threads. Starting 219.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for neo-net\\n[2023-04-29T23:10:45.664Z] Server pserv-16 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for phantasy\\n[2023-04-29T23:10:45.664Z] Server pserv-16 does not have capacity for all threads. Starting 4.Threads left: 218\\n[2023-04-29T23:10:45.664Z] Server pserv-17 has capacity for all threads. Starting 218.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for max-hardware\\n[2023-04-29T23:10:45.664Z] Server pserv-17 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for zer0\\n[2023-04-29T23:10:45.664Z] Server pserv-17 does not have capacity for all threads. Starting 5.Threads left: 217\\n[2023-04-29T23:10:45.664Z] Server pserv-18 has capacity for all threads. Starting 217.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for iron-gym\\n[2023-04-29T23:10:45.664Z] Server pserv-18 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for silver-helix\\n[2023-04-29T23:10:45.664Z] Server pserv-18 does not have capacity for all threads. Starting 6.Threads left: 216\\n[2023-04-29T23:10:45.664Z] Server pserv-19 has capacity for all threads. Starting 216.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for omega-net\\n[2023-04-29T23:10:45.664Z] Server pserv-19 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for the-hub\\n[2023-04-29T23:10:45.664Z] Server pserv-19 does not have capacity for all threads. Starting 7.Threads left: 215\\n[2023-04-29T23:10:45.664Z] Server pserv-20 has capacity for all threads. Starting 215.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for crush-fitness\\n[2023-04-29T23:10:45.664Z] Server pserv-20 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for johnson-ortho\\n[2023-04-29T23:10:45.664Z] Server pserv-20 does not have capacity for all threads. Starting 8.Threads left: 214\\n[2023-04-29T23:10:45.664Z] Server pserv-21 has capacity for all threads. Starting 214.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for rothman-uni\\n[2023-04-29T23:10:45.664Z] Server pserv-21 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for computek\\n[2023-04-29T23:10:45.664Z] Server pserv-21 does not have capacity for all threads. Starting 9.Threads left: 213\\n[2023-04-29T23:10:45.664Z] Server pserv-22 has capacity for all threads. Starting 213.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for rho-construction\\n[2023-04-29T23:10:45.664Z] Server pserv-22 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for alpha-ent\\n[2023-04-29T23:10:45.664Z] Server pserv-22 does not have capacity for all threads. Starting 10.Threads left: 212\\n[2023-04-29T23:10:45.664Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:10:45.664Z] Starting threads for millenium-fitness\\n[2023-04-29T23:10:45.664Z] Server pserv-23 has capacity for all threads. Starting 222.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] ==============================\\n[2023-04-29T23:20:45.670Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:20:45.670Z] ==============================\\n[2023-04-29T23:20:45.670Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:20:45.670Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for n00dles\\n[2023-04-29T23:20:45.670Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for foodnstuff\\n[2023-04-29T23:20:45.670Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:20:45.670Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:20:45.670Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for joesguns\\n[2023-04-29T23:20:45.670Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:20:45.670Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:20:45.670Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for nectar-net\\n[2023-04-29T23:20:45.670Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:20:45.670Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for neo-net\\n[2023-04-29T23:20:45.670Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for phantasy\\n[2023-04-29T23:20:45.670Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:20:45.670Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for max-hardware\\n[2023-04-29T23:20:45.670Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for zer0\\n[2023-04-29T23:20:45.670Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:20:45.670Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for iron-gym\\n[2023-04-29T23:20:45.670Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for silver-helix\\n[2023-04-29T23:20:45.670Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:20:45.670Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for omega-net\\n[2023-04-29T23:20:45.670Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for the-hub\\n[2023-04-29T23:20:45.670Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:20:45.670Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for crush-fitness\\n[2023-04-29T23:20:45.670Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.670Z] Starting threads for johnson-ortho\\n[2023-04-29T23:20:45.670Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:20:45.671Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for rothman-uni\\n[2023-04-29T23:20:45.671Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for computek\\n[2023-04-29T23:20:45.671Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:20:45.671Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for rho-construction\\n[2023-04-29T23:20:45.671Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for alpha-ent\\n[2023-04-29T23:20:45.671Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:20:45.671Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for millenium-fitness\\n[2023-04-29T23:20:45.671Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:20:45.671Z] Starting threads for summit-uni\\n[2023-04-29T23:20:45.671Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] ==============================\\n[2023-04-29T23:30:45.691Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:30:45.691Z] ==============================\\n[2023-04-29T23:30:45.691Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:30:45.691Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for n00dles\\n[2023-04-29T23:30:45.691Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for foodnstuff\\n[2023-04-29T23:30:45.691Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:30:45.691Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:30:45.691Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for joesguns\\n[2023-04-29T23:30:45.691Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:30:45.691Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:30:45.691Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for nectar-net\\n[2023-04-29T23:30:45.691Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:30:45.691Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for neo-net\\n[2023-04-29T23:30:45.691Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for phantasy\\n[2023-04-29T23:30:45.691Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:30:45.691Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for max-hardware\\n[2023-04-29T23:30:45.691Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for zer0\\n[2023-04-29T23:30:45.691Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:30:45.691Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for iron-gym\\n[2023-04-29T23:30:45.691Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for silver-helix\\n[2023-04-29T23:30:45.691Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:30:45.691Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for omega-net\\n[2023-04-29T23:30:45.691Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for the-hub\\n[2023-04-29T23:30:45.691Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:30:45.691Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for crush-fitness\\n[2023-04-29T23:30:45.691Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for johnson-ortho\\n[2023-04-29T23:30:45.691Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:30:45.691Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for rothman-uni\\n[2023-04-29T23:30:45.691Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for computek\\n[2023-04-29T23:30:45.691Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:30:45.691Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for rho-construction\\n[2023-04-29T23:30:45.691Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for alpha-ent\\n[2023-04-29T23:30:45.691Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:30:45.691Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for millenium-fitness\\n[2023-04-29T23:30:45.691Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:30:45.691Z] Starting threads for summit-uni\\n[2023-04-29T23:30:45.691Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.693Z] ==============================\\n[2023-04-29T23:40:45.693Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:40:45.693Z] ==============================\\n[2023-04-29T23:40:45.694Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:40:45.694Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for n00dles\\n[2023-04-29T23:40:45.694Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for foodnstuff\\n[2023-04-29T23:40:45.694Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:40:45.694Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:40:45.694Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for joesguns\\n[2023-04-29T23:40:45.694Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:40:45.694Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:40:45.694Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for nectar-net\\n[2023-04-29T23:40:45.694Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:40:45.694Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for neo-net\\n[2023-04-29T23:40:45.694Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.694Z] Starting threads for phantasy\\n[2023-04-29T23:40:45.694Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:40:45.695Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for max-hardware\\n[2023-04-29T23:40:45.695Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for zer0\\n[2023-04-29T23:40:45.695Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:40:45.695Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for iron-gym\\n[2023-04-29T23:40:45.695Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for silver-helix\\n[2023-04-29T23:40:45.695Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:40:45.695Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for omega-net\\n[2023-04-29T23:40:45.695Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for the-hub\\n[2023-04-29T23:40:45.695Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:40:45.695Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for crush-fitness\\n[2023-04-29T23:40:45.695Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.695Z] Starting threads for johnson-ortho\\n[2023-04-29T23:40:45.695Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:40:45.695Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for rothman-uni\\n[2023-04-29T23:40:45.696Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for computek\\n[2023-04-29T23:40:45.696Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:40:45.696Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for rho-construction\\n[2023-04-29T23:40:45.696Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for alpha-ent\\n[2023-04-29T23:40:45.696Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:40:45.696Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for millenium-fitness\\n[2023-04-29T23:40:45.696Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:40:45.696Z] Starting threads for summit-uni\\n[2023-04-29T23:40:45.696Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] ==============================\\n[2023-04-29T23:50:45.705Z] Starting to ramp up 23 servers with a max of 212 threads each\\n[2023-04-29T23:50:45.705Z] ==============================\\n[2023-04-29T23:50:45.705Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:50:45.705Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for n00dles\\n[2023-04-29T23:50:45.705Z] Server pserv-13 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for foodnstuff\\n[2023-04-29T23:50:45.705Z] Server pserv-13 does not have capacity for all threads. Starting 21.Threads left: 191\\n[2023-04-29T23:50:45.705Z] Server pserv-14 has capacity for all threads. Starting 191.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:50:45.705Z] Server pserv-14 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.705Z] Starting threads for joesguns\\n[2023-04-29T23:50:45.705Z] Server pserv-14 does not have capacity for all threads. Starting 42.Threads left: 170\\n[2023-04-29T23:50:45.706Z] Server pserv-15 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:50:45.706Z] Server pserv-15 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for nectar-net\\n[2023-04-29T23:50:45.706Z] Server pserv-15 does not have capacity for all threads. Starting 63.Threads left: 149\\n[2023-04-29T23:50:45.706Z] Server pserv-16 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for neo-net\\n[2023-04-29T23:50:45.706Z] Server pserv-16 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for phantasy\\n[2023-04-29T23:50:45.706Z] Server pserv-16 does not have capacity for all threads. Starting 84.Threads left: 128\\n[2023-04-29T23:50:45.706Z] Server pserv-17 has capacity for all threads. Starting 128.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for max-hardware\\n[2023-04-29T23:50:45.706Z] Server pserv-17 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for zer0\\n[2023-04-29T23:50:45.706Z] Server pserv-17 does not have capacity for all threads. Starting 105.Threads left: 107\\n[2023-04-29T23:50:45.706Z] Server pserv-18 has capacity for all threads. Starting 107.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for iron-gym\\n[2023-04-29T23:50:45.706Z] Server pserv-18 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for silver-helix\\n[2023-04-29T23:50:45.706Z] Server pserv-18 does not have capacity for all threads. Starting 126.Threads left: 86\\n[2023-04-29T23:50:45.706Z] Server pserv-19 has capacity for all threads. Starting 86.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for omega-net\\n[2023-04-29T23:50:45.706Z] Server pserv-19 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for the-hub\\n[2023-04-29T23:50:45.706Z] Server pserv-19 does not have capacity for all threads. Starting 147.Threads left: 65\\n[2023-04-29T23:50:45.706Z] Server pserv-20 has capacity for all threads. Starting 65.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for crush-fitness\\n[2023-04-29T23:50:45.706Z] Server pserv-20 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for johnson-ortho\\n[2023-04-29T23:50:45.706Z] Server pserv-20 does not have capacity for all threads. Starting 168.Threads left: 44\\n[2023-04-29T23:50:45.706Z] Server pserv-21 has capacity for all threads. Starting 44.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for rothman-uni\\n[2023-04-29T23:50:45.706Z] Server pserv-21 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for computek\\n[2023-04-29T23:50:45.706Z] Server pserv-21 does not have capacity for all threads. Starting 189.Threads left: 23\\n[2023-04-29T23:50:45.706Z] Server pserv-22 has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for rho-construction\\n[2023-04-29T23:50:45.706Z] Server pserv-22 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for alpha-ent\\n[2023-04-29T23:50:45.706Z] Server pserv-22 does not have capacity for all threads. Starting 210.Threads left: 2\\n[2023-04-29T23:50:45.706Z] Server pserv-23 has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for millenium-fitness\\n[2023-04-29T23:50:45.706Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-29T23:50:45.706Z] Starting threads for summit-uni\\n[2023-04-29T23:50:45.706Z] Server pserv-23 has capacity for all threads. Starting 212.ThreadsLeft: 0\\n[2023-04-30T00:00:45.731Z] ==============================\\n[2023-04-30T00:00:45.731Z] Starting to ramp up 24 servers with a max of 204 threads each\\n[2023-04-30T00:00:45.731Z] ==============================\\n[2023-04-30T00:00:45.731Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:00:45.731Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.731Z] Starting threads for n00dles\\n[2023-04-30T00:00:45.731Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.731Z] Starting threads for foodnstuff\\n[2023-04-30T00:00:45.731Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 167\\n[2023-04-30T00:00:45.732Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:00:45.732Z] Server pserv-14 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for joesguns\\n[2023-04-30T00:00:45.732Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 130\\n[2023-04-30T00:00:45.732Z] Server pserv-15 has capacity for all threads. Starting 130.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:00:45.732Z] Server pserv-15 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for nectar-net\\n[2023-04-30T00:00:45.732Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 93\\n[2023-04-30T00:00:45.732Z] Server pserv-16 has capacity for all threads. Starting 93.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for neo-net\\n[2023-04-30T00:00:45.732Z] Server pserv-16 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for phantasy\\n[2023-04-30T00:00:45.732Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 56\\n[2023-04-30T00:00:45.732Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for max-hardware\\n[2023-04-30T00:00:45.732Z] Server pserv-17 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for zer0\\n[2023-04-30T00:00:45.732Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 19\\n[2023-04-30T00:00:45.732Z] Server pserv-18 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for iron-gym\\n[2023-04-30T00:00:45.732Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.732Z] Starting threads for silver-helix\\n[2023-04-30T00:00:45.733Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for omega-net\\n[2023-04-30T00:00:45.733Z] Server pserv-18 does not have capacity for all threads. Starting 18.Threads left: 186\\n[2023-04-30T00:00:45.733Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for the-hub\\n[2023-04-30T00:00:45.733Z] Server pserv-19 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for crush-fitness\\n[2023-04-30T00:00:45.733Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 149\\n[2023-04-30T00:00:45.733Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for johnson-ortho\\n[2023-04-30T00:00:45.733Z] Server pserv-20 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for rothman-uni\\n[2023-04-30T00:00:45.733Z] Server pserv-20 does not have capacity for all threads. Starting 92.Threads left: 112\\n[2023-04-30T00:00:45.733Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for computek\\n[2023-04-30T00:00:45.733Z] Server pserv-21 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for rho-construction\\n[2023-04-30T00:00:45.733Z] Server pserv-21 does not have capacity for all threads. Starting 129.Threads left: 75\\n[2023-04-30T00:00:45.733Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for alpha-ent\\n[2023-04-30T00:00:45.733Z] Server pserv-22 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.733Z] Starting threads for millenium-fitness\\n[2023-04-30T00:00:45.733Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 38\\n[2023-04-30T00:00:45.733Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-30T00:00:45.734Z] Starting threads for summit-uni\\n[2023-04-30T00:00:45.734Z] Server pserv-23 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:00:45.734Z] Starting threads for snap-fitness\\n[2023-04-30T00:00:45.734Z] Server pserv-23 does not have capacity for all threads. Starting 203.Threads left: 1\\n[2023-04-30T00:10:45.735Z] ==============================\\n[2023-04-30T00:10:45.735Z] Starting to ramp up 24 servers with a max of 204 threads each\\n[2023-04-30T00:10:45.735Z] ==============================\\n[2023-04-30T00:10:45.735Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:10:45.735Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for n00dles\\n[2023-04-30T00:10:45.735Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for foodnstuff\\n[2023-04-30T00:10:45.735Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 167\\n[2023-04-30T00:10:45.735Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:10:45.735Z] Server pserv-14 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for joesguns\\n[2023-04-30T00:10:45.735Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 130\\n[2023-04-30T00:10:45.735Z] Server pserv-15 has capacity for all threads. Starting 130.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:10:45.735Z] Server pserv-15 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for nectar-net\\n[2023-04-30T00:10:45.735Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 93\\n[2023-04-30T00:10:45.735Z] Server pserv-16 has capacity for all threads. Starting 93.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for neo-net\\n[2023-04-30T00:10:45.735Z] Server pserv-16 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for phantasy\\n[2023-04-30T00:10:45.735Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 56\\n[2023-04-30T00:10:45.735Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for max-hardware\\n[2023-04-30T00:10:45.735Z] Server pserv-17 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for zer0\\n[2023-04-30T00:10:45.735Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 19\\n[2023-04-30T00:10:45.735Z] Server pserv-18 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for iron-gym\\n[2023-04-30T00:10:45.735Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for silver-helix\\n[2023-04-30T00:10:45.735Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for omega-net\\n[2023-04-30T00:10:45.735Z] Server pserv-18 does not have capacity for all threads. Starting 18.Threads left: 186\\n[2023-04-30T00:10:45.735Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for the-hub\\n[2023-04-30T00:10:45.735Z] Server pserv-19 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for crush-fitness\\n[2023-04-30T00:10:45.735Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 149\\n[2023-04-30T00:10:45.735Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for johnson-ortho\\n[2023-04-30T00:10:45.735Z] Server pserv-20 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for rothman-uni\\n[2023-04-30T00:10:45.735Z] Server pserv-20 does not have capacity for all threads. Starting 92.Threads left: 112\\n[2023-04-30T00:10:45.735Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for computek\\n[2023-04-30T00:10:45.735Z] Server pserv-21 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for rho-construction\\n[2023-04-30T00:10:45.735Z] Server pserv-21 does not have capacity for all threads. Starting 129.Threads left: 75\\n[2023-04-30T00:10:45.735Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for alpha-ent\\n[2023-04-30T00:10:45.735Z] Server pserv-22 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for millenium-fitness\\n[2023-04-30T00:10:45.735Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 38\\n[2023-04-30T00:10:45.735Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for summit-uni\\n[2023-04-30T00:10:45.735Z] Server pserv-23 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:10:45.735Z] Starting threads for snap-fitness\\n[2023-04-30T00:10:45.735Z] Server pserv-23 does not have capacity for all threads. Starting 203.Threads left: 1\\n[2023-04-30T00:20:45.744Z] ==============================\\n[2023-04-30T00:20:45.744Z] Starting to ramp up 24 servers with a max of 204 threads each\\n[2023-04-30T00:20:45.744Z] ==============================\\n[2023-04-30T00:20:45.744Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:20:45.744Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for n00dles\\n[2023-04-30T00:20:45.744Z] Server pserv-13 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for foodnstuff\\n[2023-04-30T00:20:45.744Z] Server pserv-13 does not have capacity for all threads. Starting 37.Threads left: 167\\n[2023-04-30T00:20:45.744Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:20:45.744Z] Server pserv-14 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for joesguns\\n[2023-04-30T00:20:45.744Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 130\\n[2023-04-30T00:20:45.744Z] Server pserv-15 has capacity for all threads. Starting 130.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:20:45.744Z] Server pserv-15 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for nectar-net\\n[2023-04-30T00:20:45.744Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 93\\n[2023-04-30T00:20:45.744Z] Server pserv-16 has capacity for all threads. Starting 93.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for neo-net\\n[2023-04-30T00:20:45.744Z] Server pserv-16 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for phantasy\\n[2023-04-30T00:20:45.744Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 56\\n[2023-04-30T00:20:45.744Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for max-hardware\\n[2023-04-30T00:20:45.744Z] Server pserv-17 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for zer0\\n[2023-04-30T00:20:45.744Z] Server pserv-17 does not have capacity for all threads. Starting 185.Threads left: 19\\n[2023-04-30T00:20:45.744Z] Server pserv-18 has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for iron-gym\\n[2023-04-30T00:20:45.744Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for silver-helix\\n[2023-04-30T00:20:45.744Z] Server pserv-18 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for omega-net\\n[2023-04-30T00:20:45.744Z] Server pserv-18 does not have capacity for all threads. Starting 18.Threads left: 186\\n[2023-04-30T00:20:45.744Z] Server pserv-19 has capacity for all threads. Starting 186.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for the-hub\\n[2023-04-30T00:20:45.744Z] Server pserv-19 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for crush-fitness\\n[2023-04-30T00:20:45.744Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 149\\n[2023-04-30T00:20:45.744Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for johnson-ortho\\n[2023-04-30T00:20:45.744Z] Server pserv-20 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for rothman-uni\\n[2023-04-30T00:20:45.744Z] Server pserv-20 does not have capacity for all threads. Starting 92.Threads left: 112\\n[2023-04-30T00:20:45.744Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for computek\\n[2023-04-30T00:20:45.744Z] Server pserv-21 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for rho-construction\\n[2023-04-30T00:20:45.744Z] Server pserv-21 does not have capacity for all threads. Starting 129.Threads left: 75\\n[2023-04-30T00:20:45.744Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-30T00:20:45.744Z] Starting threads for alpha-ent\\n[2023-04-30T00:20:45.745Z] Server pserv-22 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.745Z] Starting threads for millenium-fitness\\n[2023-04-30T00:20:45.745Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 38\\n[2023-04-30T00:20:45.745Z] Server pserv-23 has capacity for all threads. Starting 38.ThreadsLeft: 0\\n[2023-04-30T00:20:45.745Z] Starting threads for summit-uni\\n[2023-04-30T00:20:45.745Z] Server pserv-23 has capacity for all threads. Starting 204.ThreadsLeft: 0\\n[2023-04-30T00:20:45.745Z] Starting threads for snap-fitness\\n[2023-04-30T00:20:45.745Z] Server pserv-23 does not have capacity for all threads. Starting 203.Threads left: 1\\n[2023-04-30T00:30:45.750Z] ==============================\\n[2023-04-30T00:30:45.750Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T00:30:45.750Z] ==============================\\n[2023-04-30T00:30:45.750Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:30:45.750Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for n00dles\\n[2023-04-30T00:30:45.750Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for foodnstuff\\n[2023-04-30T00:30:45.750Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T00:30:45.750Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:30:45.750Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for joesguns\\n[2023-04-30T00:30:45.750Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T00:30:45.750Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:30:45.750Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for nectar-net\\n[2023-04-30T00:30:45.750Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T00:30:45.750Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for neo-net\\n[2023-04-30T00:30:45.750Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for phantasy\\n[2023-04-30T00:30:45.750Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for max-hardware\\n[2023-04-30T00:30:45.750Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T00:30:45.750Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for zer0\\n[2023-04-30T00:30:45.750Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for iron-gym\\n[2023-04-30T00:30:45.750Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T00:30:45.750Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for silver-helix\\n[2023-04-30T00:30:45.750Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for omega-net\\n[2023-04-30T00:30:45.750Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T00:30:45.750Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for the-hub\\n[2023-04-30T00:30:45.750Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for crush-fitness\\n[2023-04-30T00:30:45.750Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T00:30:45.750Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for johnson-ortho\\n[2023-04-30T00:30:45.750Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for rothman-uni\\n[2023-04-30T00:30:45.750Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for computek\\n[2023-04-30T00:30:45.750Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T00:30:45.750Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T00:30:45.750Z] Starting threads for rho-construction\\n[2023-04-30T00:30:45.751Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for alpha-ent\\n[2023-04-30T00:30:45.751Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T00:30:45.751Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for millenium-fitness\\n[2023-04-30T00:30:45.751Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for summit-uni\\n[2023-04-30T00:30:45.751Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T00:30:45.751Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for snap-fitness\\n[2023-04-30T00:30:45.751Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:30:45.751Z] Starting threads for catalyst\\n[2023-04-30T00:30:45.751Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] ==============================\\n[2023-04-30T00:40:45.752Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T00:40:45.752Z] ==============================\\n[2023-04-30T00:40:45.752Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:40:45.752Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for n00dles\\n[2023-04-30T00:40:45.752Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for foodnstuff\\n[2023-04-30T00:40:45.752Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T00:40:45.752Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:40:45.752Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for joesguns\\n[2023-04-30T00:40:45.752Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T00:40:45.752Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:40:45.752Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for nectar-net\\n[2023-04-30T00:40:45.752Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T00:40:45.752Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for neo-net\\n[2023-04-30T00:40:45.752Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for phantasy\\n[2023-04-30T00:40:45.752Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for max-hardware\\n[2023-04-30T00:40:45.752Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T00:40:45.752Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for zer0\\n[2023-04-30T00:40:45.752Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for iron-gym\\n[2023-04-30T00:40:45.752Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T00:40:45.752Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for silver-helix\\n[2023-04-30T00:40:45.752Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for omega-net\\n[2023-04-30T00:40:45.752Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T00:40:45.752Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for the-hub\\n[2023-04-30T00:40:45.752Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for crush-fitness\\n[2023-04-30T00:40:45.752Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T00:40:45.752Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for johnson-ortho\\n[2023-04-30T00:40:45.752Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for rothman-uni\\n[2023-04-30T00:40:45.752Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for computek\\n[2023-04-30T00:40:45.752Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T00:40:45.752Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for rho-construction\\n[2023-04-30T00:40:45.752Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for alpha-ent\\n[2023-04-30T00:40:45.752Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T00:40:45.752Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for millenium-fitness\\n[2023-04-30T00:40:45.752Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.752Z] Starting threads for summit-uni\\n[2023-04-30T00:40:45.752Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T00:40:45.752Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T00:40:45.753Z] Starting threads for snap-fitness\\n[2023-04-30T00:40:45.753Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:40:45.753Z] Starting threads for catalyst\\n[2023-04-30T00:40:45.753Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] ==============================\\n[2023-04-30T00:50:45.759Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T00:50:45.759Z] ==============================\\n[2023-04-30T00:50:45.759Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:50:45.759Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for n00dles\\n[2023-04-30T00:50:45.759Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for foodnstuff\\n[2023-04-30T00:50:45.759Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T00:50:45.759Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:50:45.759Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for joesguns\\n[2023-04-30T00:50:45.759Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T00:50:45.759Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:50:45.759Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for nectar-net\\n[2023-04-30T00:50:45.759Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T00:50:45.759Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for neo-net\\n[2023-04-30T00:50:45.759Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for phantasy\\n[2023-04-30T00:50:45.759Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for max-hardware\\n[2023-04-30T00:50:45.759Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T00:50:45.759Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for zer0\\n[2023-04-30T00:50:45.759Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for iron-gym\\n[2023-04-30T00:50:45.759Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T00:50:45.759Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for silver-helix\\n[2023-04-30T00:50:45.759Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for omega-net\\n[2023-04-30T00:50:45.759Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T00:50:45.759Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for the-hub\\n[2023-04-30T00:50:45.759Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for crush-fitness\\n[2023-04-30T00:50:45.759Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T00:50:45.759Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for johnson-ortho\\n[2023-04-30T00:50:45.759Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for rothman-uni\\n[2023-04-30T00:50:45.759Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for computek\\n[2023-04-30T00:50:45.759Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T00:50:45.759Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for rho-construction\\n[2023-04-30T00:50:45.759Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.759Z] Starting threads for alpha-ent\\n[2023-04-30T00:50:45.759Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T00:50:45.760Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for millenium-fitness\\n[2023-04-30T00:50:45.760Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for summit-uni\\n[2023-04-30T00:50:45.760Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T00:50:45.760Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for snap-fitness\\n[2023-04-30T00:50:45.760Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T00:50:45.760Z] Starting threads for catalyst\\n[2023-04-30T00:50:45.760Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.765Z] ==============================\\n[2023-04-30T01:00:45.765Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:00:45.765Z] ==============================\\n[2023-04-30T01:00:45.765Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:00:45.765Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.765Z] Starting threads for n00dles\\n[2023-04-30T01:00:45.765Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.765Z] Starting threads for foodnstuff\\n[2023-04-30T01:00:45.765Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:00:45.766Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:00:45.766Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for joesguns\\n[2023-04-30T01:00:45.766Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:00:45.766Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:00:45.766Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for nectar-net\\n[2023-04-30T01:00:45.766Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:00:45.766Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for neo-net\\n[2023-04-30T01:00:45.766Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for phantasy\\n[2023-04-30T01:00:45.766Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for max-hardware\\n[2023-04-30T01:00:45.766Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:00:45.766Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for zer0\\n[2023-04-30T01:00:45.766Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for iron-gym\\n[2023-04-30T01:00:45.766Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:00:45.766Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for silver-helix\\n[2023-04-30T01:00:45.766Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for omega-net\\n[2023-04-30T01:00:45.766Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:00:45.766Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for the-hub\\n[2023-04-30T01:00:45.766Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for crush-fitness\\n[2023-04-30T01:00:45.766Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:00:45.766Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for johnson-ortho\\n[2023-04-30T01:00:45.766Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for rothman-uni\\n[2023-04-30T01:00:45.766Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for computek\\n[2023-04-30T01:00:45.766Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:00:45.766Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for rho-construction\\n[2023-04-30T01:00:45.766Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for alpha-ent\\n[2023-04-30T01:00:45.766Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:00:45.766Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for millenium-fitness\\n[2023-04-30T01:00:45.766Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for summit-uni\\n[2023-04-30T01:00:45.766Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:00:45.766Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for snap-fitness\\n[2023-04-30T01:00:45.766Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:00:45.766Z] Starting threads for catalyst\\n[2023-04-30T01:00:45.766Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] ==============================\\n[2023-04-30T01:10:45.768Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:10:45.768Z] ==============================\\n[2023-04-30T01:10:45.768Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:10:45.768Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for n00dles\\n[2023-04-30T01:10:45.768Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for foodnstuff\\n[2023-04-30T01:10:45.768Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:10:45.768Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:10:45.768Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for joesguns\\n[2023-04-30T01:10:45.768Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:10:45.768Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:10:45.768Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for nectar-net\\n[2023-04-30T01:10:45.768Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:10:45.768Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:10:45.768Z] Starting threads for neo-net\\n[2023-04-30T01:10:45.768Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for phantasy\\n[2023-04-30T01:10:45.769Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for max-hardware\\n[2023-04-30T01:10:45.769Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:10:45.769Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for zer0\\n[2023-04-30T01:10:45.769Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for iron-gym\\n[2023-04-30T01:10:45.769Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:10:45.769Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for silver-helix\\n[2023-04-30T01:10:45.769Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for omega-net\\n[2023-04-30T01:10:45.769Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:10:45.769Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for the-hub\\n[2023-04-30T01:10:45.769Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for crush-fitness\\n[2023-04-30T01:10:45.769Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:10:45.769Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for johnson-ortho\\n[2023-04-30T01:10:45.769Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for rothman-uni\\n[2023-04-30T01:10:45.769Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.769Z] Starting threads for computek\\n[2023-04-30T01:10:45.769Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:10:45.770Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for rho-construction\\n[2023-04-30T01:10:45.770Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for alpha-ent\\n[2023-04-30T01:10:45.770Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:10:45.770Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for millenium-fitness\\n[2023-04-30T01:10:45.770Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for summit-uni\\n[2023-04-30T01:10:45.770Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:10:45.770Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for snap-fitness\\n[2023-04-30T01:10:45.770Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:10:45.770Z] Starting threads for catalyst\\n[2023-04-30T01:10:45.770Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] ==============================\\n[2023-04-30T01:20:45.782Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:20:45.782Z] ==============================\\n[2023-04-30T01:20:45.782Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:20:45.782Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for n00dles\\n[2023-04-30T01:20:45.782Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for foodnstuff\\n[2023-04-30T01:20:45.782Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:20:45.782Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:20:45.782Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for joesguns\\n[2023-04-30T01:20:45.782Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:20:45.782Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:20:45.782Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.782Z] Starting threads for nectar-net\\n[2023-04-30T01:20:45.782Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:20:45.783Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for neo-net\\n[2023-04-30T01:20:45.783Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for phantasy\\n[2023-04-30T01:20:45.783Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for max-hardware\\n[2023-04-30T01:20:45.783Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:20:45.783Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for zer0\\n[2023-04-30T01:20:45.783Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for iron-gym\\n[2023-04-30T01:20:45.783Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:20:45.783Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for silver-helix\\n[2023-04-30T01:20:45.783Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for omega-net\\n[2023-04-30T01:20:45.783Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:20:45.783Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for the-hub\\n[2023-04-30T01:20:45.783Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for crush-fitness\\n[2023-04-30T01:20:45.783Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:20:45.783Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for johnson-ortho\\n[2023-04-30T01:20:45.783Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for rothman-uni\\n[2023-04-30T01:20:45.783Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for computek\\n[2023-04-30T01:20:45.783Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:20:45.783Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for rho-construction\\n[2023-04-30T01:20:45.783Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for alpha-ent\\n[2023-04-30T01:20:45.783Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:20:45.783Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for millenium-fitness\\n[2023-04-30T01:20:45.783Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for summit-uni\\n[2023-04-30T01:20:45.783Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:20:45.783Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for snap-fitness\\n[2023-04-30T01:20:45.783Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:20:45.783Z] Starting threads for catalyst\\n[2023-04-30T01:20:45.783Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] ==============================\\n[2023-04-30T01:30:45.803Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:30:45.803Z] ==============================\\n[2023-04-30T01:30:45.803Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:30:45.803Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for n00dles\\n[2023-04-30T01:30:45.803Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for foodnstuff\\n[2023-04-30T01:30:45.803Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:30:45.803Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:30:45.803Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for joesguns\\n[2023-04-30T01:30:45.803Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:30:45.803Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:30:45.803Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for nectar-net\\n[2023-04-30T01:30:45.803Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:30:45.803Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for neo-net\\n[2023-04-30T01:30:45.803Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for phantasy\\n[2023-04-30T01:30:45.803Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for max-hardware\\n[2023-04-30T01:30:45.803Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:30:45.803Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for zer0\\n[2023-04-30T01:30:45.803Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for iron-gym\\n[2023-04-30T01:30:45.803Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:30:45.803Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for silver-helix\\n[2023-04-30T01:30:45.803Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for omega-net\\n[2023-04-30T01:30:45.803Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:30:45.803Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for the-hub\\n[2023-04-30T01:30:45.803Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for crush-fitness\\n[2023-04-30T01:30:45.803Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:30:45.803Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for johnson-ortho\\n[2023-04-30T01:30:45.803Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.803Z] Starting threads for rothman-uni\\n[2023-04-30T01:30:45.804Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for computek\\n[2023-04-30T01:30:45.804Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:30:45.804Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for rho-construction\\n[2023-04-30T01:30:45.804Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for alpha-ent\\n[2023-04-30T01:30:45.804Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:30:45.804Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for millenium-fitness\\n[2023-04-30T01:30:45.804Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for summit-uni\\n[2023-04-30T01:30:45.804Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:30:45.804Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for snap-fitness\\n[2023-04-30T01:30:45.804Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:30:45.804Z] Starting threads for catalyst\\n[2023-04-30T01:30:45.804Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.804Z] ==============================\\n[2023-04-30T01:40:45.805Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:40:45.805Z] ==============================\\n[2023-04-30T01:40:45.805Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:40:45.805Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for n00dles\\n[2023-04-30T01:40:45.805Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for foodnstuff\\n[2023-04-30T01:40:45.805Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:40:45.805Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:40:45.805Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for joesguns\\n[2023-04-30T01:40:45.805Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:40:45.805Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:40:45.805Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:40:45.805Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for nectar-net\\n[2023-04-30T01:40:45.806Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:40:45.806Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for neo-net\\n[2023-04-30T01:40:45.806Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for phantasy\\n[2023-04-30T01:40:45.806Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for max-hardware\\n[2023-04-30T01:40:45.806Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:40:45.806Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for zer0\\n[2023-04-30T01:40:45.806Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for iron-gym\\n[2023-04-30T01:40:45.806Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:40:45.806Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for silver-helix\\n[2023-04-30T01:40:45.806Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for omega-net\\n[2023-04-30T01:40:45.806Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:40:45.806Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:40:45.806Z] Starting threads for the-hub\\n[2023-04-30T01:40:45.807Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for crush-fitness\\n[2023-04-30T01:40:45.807Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:40:45.807Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for johnson-ortho\\n[2023-04-30T01:40:45.807Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for rothman-uni\\n[2023-04-30T01:40:45.807Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for computek\\n[2023-04-30T01:40:45.807Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:40:45.807Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for rho-construction\\n[2023-04-30T01:40:45.807Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for alpha-ent\\n[2023-04-30T01:40:45.807Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:40:45.807Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for millenium-fitness\\n[2023-04-30T01:40:45.807Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for summit-uni\\n[2023-04-30T01:40:45.807Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:40:45.807Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for snap-fitness\\n[2023-04-30T01:40:45.807Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:40:45.807Z] Starting threads for catalyst\\n[2023-04-30T01:40:45.808Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] ==============================\\n[2023-04-30T01:50:45.817Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T01:50:45.817Z] ==============================\\n[2023-04-30T01:50:45.817Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:50:45.817Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for n00dles\\n[2023-04-30T01:50:45.817Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for foodnstuff\\n[2023-04-30T01:50:45.817Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T01:50:45.817Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:50:45.817Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for joesguns\\n[2023-04-30T01:50:45.817Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T01:50:45.817Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:50:45.817Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for nectar-net\\n[2023-04-30T01:50:45.817Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T01:50:45.817Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for neo-net\\n[2023-04-30T01:50:45.817Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for phantasy\\n[2023-04-30T01:50:45.817Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.817Z] Starting threads for max-hardware\\n[2023-04-30T01:50:45.817Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T01:50:45.818Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for zer0\\n[2023-04-30T01:50:45.818Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for iron-gym\\n[2023-04-30T01:50:45.818Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T01:50:45.818Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for silver-helix\\n[2023-04-30T01:50:45.818Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for omega-net\\n[2023-04-30T01:50:45.818Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T01:50:45.818Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for the-hub\\n[2023-04-30T01:50:45.818Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for crush-fitness\\n[2023-04-30T01:50:45.818Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T01:50:45.818Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for johnson-ortho\\n[2023-04-30T01:50:45.818Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for rothman-uni\\n[2023-04-30T01:50:45.818Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for computek\\n[2023-04-30T01:50:45.818Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T01:50:45.818Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for rho-construction\\n[2023-04-30T01:50:45.818Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for alpha-ent\\n[2023-04-30T01:50:45.818Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T01:50:45.818Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for millenium-fitness\\n[2023-04-30T01:50:45.818Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for summit-uni\\n[2023-04-30T01:50:45.818Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T01:50:45.818Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for snap-fitness\\n[2023-04-30T01:50:45.818Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T01:50:45.818Z] Starting threads for catalyst\\n[2023-04-30T01:50:45.818Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] ==============================\\n[2023-04-30T02:00:45.827Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:00:45.827Z] ==============================\\n[2023-04-30T02:00:45.827Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:00:45.827Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for n00dles\\n[2023-04-30T02:00:45.827Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for foodnstuff\\n[2023-04-30T02:00:45.827Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:00:45.827Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:00:45.827Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for joesguns\\n[2023-04-30T02:00:45.827Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:00:45.827Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:00:45.827Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for nectar-net\\n[2023-04-30T02:00:45.827Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:00:45.827Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for neo-net\\n[2023-04-30T02:00:45.827Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for phantasy\\n[2023-04-30T02:00:45.827Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for max-hardware\\n[2023-04-30T02:00:45.827Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:00:45.827Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for zer0\\n[2023-04-30T02:00:45.827Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for iron-gym\\n[2023-04-30T02:00:45.827Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:00:45.827Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for silver-helix\\n[2023-04-30T02:00:45.827Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for omega-net\\n[2023-04-30T02:00:45.827Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:00:45.827Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for the-hub\\n[2023-04-30T02:00:45.827Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for crush-fitness\\n[2023-04-30T02:00:45.827Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:00:45.827Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for johnson-ortho\\n[2023-04-30T02:00:45.827Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for rothman-uni\\n[2023-04-30T02:00:45.827Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for computek\\n[2023-04-30T02:00:45.827Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:00:45.827Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for rho-construction\\n[2023-04-30T02:00:45.827Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for alpha-ent\\n[2023-04-30T02:00:45.827Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:00:45.827Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for millenium-fitness\\n[2023-04-30T02:00:45.827Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for summit-uni\\n[2023-04-30T02:00:45.827Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:00:45.827Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for snap-fitness\\n[2023-04-30T02:00:45.827Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:00:45.827Z] Starting threads for catalyst\\n[2023-04-30T02:00:45.827Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] ==============================\\n[2023-04-30T02:10:45.829Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:10:45.829Z] ==============================\\n[2023-04-30T02:10:45.829Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:10:45.829Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for n00dles\\n[2023-04-30T02:10:45.829Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for foodnstuff\\n[2023-04-30T02:10:45.829Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:10:45.829Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:10:45.829Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for joesguns\\n[2023-04-30T02:10:45.829Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:10:45.829Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:10:45.829Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.829Z] Starting threads for nectar-net\\n[2023-04-30T02:10:45.829Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:10:45.829Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for neo-net\\n[2023-04-30T02:10:45.830Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for phantasy\\n[2023-04-30T02:10:45.830Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for max-hardware\\n[2023-04-30T02:10:45.830Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:10:45.830Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for zer0\\n[2023-04-30T02:10:45.830Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for iron-gym\\n[2023-04-30T02:10:45.830Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:10:45.830Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for silver-helix\\n[2023-04-30T02:10:45.830Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for omega-net\\n[2023-04-30T02:10:45.830Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:10:45.830Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for the-hub\\n[2023-04-30T02:10:45.830Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for crush-fitness\\n[2023-04-30T02:10:45.830Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:10:45.830Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:10:45.830Z] Starting threads for johnson-ortho\\n[2023-04-30T02:10:45.831Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for rothman-uni\\n[2023-04-30T02:10:45.831Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for computek\\n[2023-04-30T02:10:45.831Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:10:45.831Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for rho-construction\\n[2023-04-30T02:10:45.831Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for alpha-ent\\n[2023-04-30T02:10:45.831Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:10:45.831Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for millenium-fitness\\n[2023-04-30T02:10:45.831Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for summit-uni\\n[2023-04-30T02:10:45.831Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:10:45.831Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for snap-fitness\\n[2023-04-30T02:10:45.831Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:10:45.831Z] Starting threads for catalyst\\n[2023-04-30T02:10:45.831Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] ==============================\\n[2023-04-30T02:20:45.845Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:20:45.845Z] ==============================\\n[2023-04-30T02:20:45.845Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:20:45.845Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for n00dles\\n[2023-04-30T02:20:45.845Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for foodnstuff\\n[2023-04-30T02:20:45.845Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:20:45.845Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:20:45.845Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for joesguns\\n[2023-04-30T02:20:45.845Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:20:45.845Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:20:45.845Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for nectar-net\\n[2023-04-30T02:20:45.845Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:20:45.845Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for neo-net\\n[2023-04-30T02:20:45.845Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for phantasy\\n[2023-04-30T02:20:45.845Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.845Z] Starting threads for max-hardware\\n[2023-04-30T02:20:45.845Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:20:45.846Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for zer0\\n[2023-04-30T02:20:45.846Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for iron-gym\\n[2023-04-30T02:20:45.846Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:20:45.846Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for silver-helix\\n[2023-04-30T02:20:45.846Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for omega-net\\n[2023-04-30T02:20:45.846Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:20:45.846Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for the-hub\\n[2023-04-30T02:20:45.846Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for crush-fitness\\n[2023-04-30T02:20:45.846Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:20:45.846Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for johnson-ortho\\n[2023-04-30T02:20:45.846Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for rothman-uni\\n[2023-04-30T02:20:45.846Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for computek\\n[2023-04-30T02:20:45.846Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:20:45.846Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for rho-construction\\n[2023-04-30T02:20:45.846Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for alpha-ent\\n[2023-04-30T02:20:45.846Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:20:45.846Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for millenium-fitness\\n[2023-04-30T02:20:45.846Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for summit-uni\\n[2023-04-30T02:20:45.846Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:20:45.846Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for snap-fitness\\n[2023-04-30T02:20:45.846Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:20:45.846Z] Starting threads for catalyst\\n[2023-04-30T02:20:45.846Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] ==============================\\n[2023-04-30T02:30:45.852Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:30:45.852Z] ==============================\\n[2023-04-30T02:30:45.852Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:30:45.852Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for n00dles\\n[2023-04-30T02:30:45.852Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for foodnstuff\\n[2023-04-30T02:30:45.852Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:30:45.852Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:30:45.852Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for joesguns\\n[2023-04-30T02:30:45.852Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:30:45.852Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:30:45.852Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for nectar-net\\n[2023-04-30T02:30:45.852Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:30:45.852Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for neo-net\\n[2023-04-30T02:30:45.852Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for phantasy\\n[2023-04-30T02:30:45.852Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for max-hardware\\n[2023-04-30T02:30:45.852Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:30:45.852Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for zer0\\n[2023-04-30T02:30:45.852Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for iron-gym\\n[2023-04-30T02:30:45.852Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:30:45.852Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for silver-helix\\n[2023-04-30T02:30:45.852Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for omega-net\\n[2023-04-30T02:30:45.852Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:30:45.852Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for the-hub\\n[2023-04-30T02:30:45.852Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for crush-fitness\\n[2023-04-30T02:30:45.852Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:30:45.852Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for johnson-ortho\\n[2023-04-30T02:30:45.852Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for rothman-uni\\n[2023-04-30T02:30:45.852Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for computek\\n[2023-04-30T02:30:45.852Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:30:45.852Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for rho-construction\\n[2023-04-30T02:30:45.852Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for alpha-ent\\n[2023-04-30T02:30:45.852Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:30:45.852Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for millenium-fitness\\n[2023-04-30T02:30:45.852Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for summit-uni\\n[2023-04-30T02:30:45.852Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:30:45.852Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for snap-fitness\\n[2023-04-30T02:30:45.852Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:30:45.852Z] Starting threads for catalyst\\n[2023-04-30T02:30:45.852Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.855Z] ==============================\\n[2023-04-30T02:40:45.855Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:40:45.855Z] ==============================\\n[2023-04-30T02:40:45.855Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:40:45.855Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.855Z] Starting threads for n00dles\\n[2023-04-30T02:40:45.855Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.855Z] Starting threads for foodnstuff\\n[2023-04-30T02:40:45.856Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:40:45.856Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:40:45.856Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for joesguns\\n[2023-04-30T02:40:45.856Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:40:45.856Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:40:45.856Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for nectar-net\\n[2023-04-30T02:40:45.856Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:40:45.856Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for neo-net\\n[2023-04-30T02:40:45.856Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for phantasy\\n[2023-04-30T02:40:45.856Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for max-hardware\\n[2023-04-30T02:40:45.856Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:40:45.856Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for zer0\\n[2023-04-30T02:40:45.856Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.856Z] Starting threads for iron-gym\\n[2023-04-30T02:40:45.857Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:40:45.857Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for silver-helix\\n[2023-04-30T02:40:45.857Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for omega-net\\n[2023-04-30T02:40:45.857Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:40:45.857Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for the-hub\\n[2023-04-30T02:40:45.857Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for crush-fitness\\n[2023-04-30T02:40:45.857Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:40:45.857Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for johnson-ortho\\n[2023-04-30T02:40:45.857Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for rothman-uni\\n[2023-04-30T02:40:45.857Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for computek\\n[2023-04-30T02:40:45.857Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:40:45.857Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for rho-construction\\n[2023-04-30T02:40:45.857Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.857Z] Starting threads for alpha-ent\\n[2023-04-30T02:40:45.857Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:40:45.857Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for millenium-fitness\\n[2023-04-30T02:40:45.858Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for summit-uni\\n[2023-04-30T02:40:45.858Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:40:45.858Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for snap-fitness\\n[2023-04-30T02:40:45.858Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:40:45.858Z] Starting threads for catalyst\\n[2023-04-30T02:40:45.858Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] ==============================\\n[2023-04-30T02:50:45.864Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T02:50:45.864Z] ==============================\\n[2023-04-30T02:50:45.864Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:50:45.864Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for n00dles\\n[2023-04-30T02:50:45.864Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for foodnstuff\\n[2023-04-30T02:50:45.864Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T02:50:45.864Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:50:45.864Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for joesguns\\n[2023-04-30T02:50:45.864Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T02:50:45.864Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:50:45.864Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for nectar-net\\n[2023-04-30T02:50:45.864Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T02:50:45.864Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for neo-net\\n[2023-04-30T02:50:45.864Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for phantasy\\n[2023-04-30T02:50:45.864Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for max-hardware\\n[2023-04-30T02:50:45.864Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T02:50:45.864Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for zer0\\n[2023-04-30T02:50:45.864Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for iron-gym\\n[2023-04-30T02:50:45.864Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T02:50:45.864Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for silver-helix\\n[2023-04-30T02:50:45.864Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for omega-net\\n[2023-04-30T02:50:45.864Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T02:50:45.864Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for the-hub\\n[2023-04-30T02:50:45.864Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for crush-fitness\\n[2023-04-30T02:50:45.864Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T02:50:45.864Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for johnson-ortho\\n[2023-04-30T02:50:45.864Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for rothman-uni\\n[2023-04-30T02:50:45.864Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.864Z] Starting threads for computek\\n[2023-04-30T02:50:45.864Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T02:50:45.865Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for rho-construction\\n[2023-04-30T02:50:45.865Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for alpha-ent\\n[2023-04-30T02:50:45.865Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T02:50:45.865Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for millenium-fitness\\n[2023-04-30T02:50:45.865Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for summit-uni\\n[2023-04-30T02:50:45.865Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T02:50:45.865Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for snap-fitness\\n[2023-04-30T02:50:45.865Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T02:50:45.865Z] Starting threads for catalyst\\n[2023-04-30T02:50:45.865Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.874Z] ==============================\\n[2023-04-30T03:00:45.874Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:00:45.874Z] ==============================\\n[2023-04-30T03:00:45.874Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:00:45.874Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.874Z] Starting threads for n00dles\\n[2023-04-30T03:00:45.874Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.874Z] Starting threads for foodnstuff\\n[2023-04-30T03:00:45.874Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:00:45.875Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:00:45.875Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for joesguns\\n[2023-04-30T03:00:45.875Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:00:45.875Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:00:45.875Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for nectar-net\\n[2023-04-30T03:00:45.875Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:00:45.875Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for neo-net\\n[2023-04-30T03:00:45.875Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for phantasy\\n[2023-04-30T03:00:45.875Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for max-hardware\\n[2023-04-30T03:00:45.875Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:00:45.875Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for zer0\\n[2023-04-30T03:00:45.875Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for iron-gym\\n[2023-04-30T03:00:45.875Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:00:45.875Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for silver-helix\\n[2023-04-30T03:00:45.875Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for omega-net\\n[2023-04-30T03:00:45.875Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:00:45.875Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for the-hub\\n[2023-04-30T03:00:45.875Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for crush-fitness\\n[2023-04-30T03:00:45.875Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:00:45.875Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for johnson-ortho\\n[2023-04-30T03:00:45.875Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for rothman-uni\\n[2023-04-30T03:00:45.875Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for computek\\n[2023-04-30T03:00:45.875Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:00:45.875Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for rho-construction\\n[2023-04-30T03:00:45.875Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for alpha-ent\\n[2023-04-30T03:00:45.875Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:00:45.875Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for millenium-fitness\\n[2023-04-30T03:00:45.875Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for summit-uni\\n[2023-04-30T03:00:45.875Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:00:45.875Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for snap-fitness\\n[2023-04-30T03:00:45.875Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:00:45.875Z] Starting threads for catalyst\\n[2023-04-30T03:00:45.875Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] ==============================\\n[2023-04-30T03:10:45.876Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:10:45.876Z] ==============================\\n[2023-04-30T03:10:45.876Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:10:45.876Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for n00dles\\n[2023-04-30T03:10:45.876Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for foodnstuff\\n[2023-04-30T03:10:45.876Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:10:45.876Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:10:45.876Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for joesguns\\n[2023-04-30T03:10:45.876Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:10:45.876Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:10:45.876Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.876Z] Starting threads for nectar-net\\n[2023-04-30T03:10:45.877Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:10:45.877Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for neo-net\\n[2023-04-30T03:10:45.877Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for phantasy\\n[2023-04-30T03:10:45.877Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for max-hardware\\n[2023-04-30T03:10:45.877Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:10:45.877Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for zer0\\n[2023-04-30T03:10:45.877Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for iron-gym\\n[2023-04-30T03:10:45.877Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:10:45.877Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for silver-helix\\n[2023-04-30T03:10:45.877Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for omega-net\\n[2023-04-30T03:10:45.877Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:10:45.877Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for the-hub\\n[2023-04-30T03:10:45.877Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for crush-fitness\\n[2023-04-30T03:10:45.877Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:10:45.877Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for johnson-ortho\\n[2023-04-30T03:10:45.877Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for rothman-uni\\n[2023-04-30T03:10:45.877Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for computek\\n[2023-04-30T03:10:45.877Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:10:45.877Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for rho-construction\\n[2023-04-30T03:10:45.877Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for alpha-ent\\n[2023-04-30T03:10:45.877Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:10:45.877Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for millenium-fitness\\n[2023-04-30T03:10:45.877Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for summit-uni\\n[2023-04-30T03:10:45.877Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:10:45.877Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for snap-fitness\\n[2023-04-30T03:10:45.877Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:10:45.877Z] Starting threads for catalyst\\n[2023-04-30T03:10:45.877Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] ==============================\\n[2023-04-30T03:20:45.887Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:20:45.887Z] ==============================\\n[2023-04-30T03:20:45.887Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:20:45.887Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for n00dles\\n[2023-04-30T03:20:45.887Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for foodnstuff\\n[2023-04-30T03:20:45.887Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:20:45.887Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:20:45.887Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for joesguns\\n[2023-04-30T03:20:45.887Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:20:45.887Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:20:45.887Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for nectar-net\\n[2023-04-30T03:20:45.887Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:20:45.887Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for neo-net\\n[2023-04-30T03:20:45.887Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for phantasy\\n[2023-04-30T03:20:45.887Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.887Z] Starting threads for max-hardware\\n[2023-04-30T03:20:45.887Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:20:45.887Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for zer0\\n[2023-04-30T03:20:45.888Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for iron-gym\\n[2023-04-30T03:20:45.888Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:20:45.888Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for silver-helix\\n[2023-04-30T03:20:45.888Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for omega-net\\n[2023-04-30T03:20:45.888Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:20:45.888Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for the-hub\\n[2023-04-30T03:20:45.888Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for crush-fitness\\n[2023-04-30T03:20:45.888Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:20:45.888Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for johnson-ortho\\n[2023-04-30T03:20:45.888Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for rothman-uni\\n[2023-04-30T03:20:45.888Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for computek\\n[2023-04-30T03:20:45.888Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:20:45.888Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for rho-construction\\n[2023-04-30T03:20:45.888Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for alpha-ent\\n[2023-04-30T03:20:45.888Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:20:45.888Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for millenium-fitness\\n[2023-04-30T03:20:45.888Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for summit-uni\\n[2023-04-30T03:20:45.888Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:20:45.888Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for snap-fitness\\n[2023-04-30T03:20:45.888Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:20:45.888Z] Starting threads for catalyst\\n[2023-04-30T03:20:45.888Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] ==============================\\n[2023-04-30T03:30:45.893Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:30:45.893Z] ==============================\\n[2023-04-30T03:30:45.893Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:30:45.893Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for n00dles\\n[2023-04-30T03:30:45.893Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for foodnstuff\\n[2023-04-30T03:30:45.893Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:30:45.893Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:30:45.893Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for joesguns\\n[2023-04-30T03:30:45.893Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:30:45.893Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:30:45.893Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for nectar-net\\n[2023-04-30T03:30:45.893Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:30:45.893Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for neo-net\\n[2023-04-30T03:30:45.893Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for phantasy\\n[2023-04-30T03:30:45.893Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for max-hardware\\n[2023-04-30T03:30:45.893Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:30:45.893Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for zer0\\n[2023-04-30T03:30:45.893Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for iron-gym\\n[2023-04-30T03:30:45.893Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:30:45.893Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for silver-helix\\n[2023-04-30T03:30:45.893Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for omega-net\\n[2023-04-30T03:30:45.893Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:30:45.893Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:30:45.893Z] Starting threads for the-hub\\n[2023-04-30T03:30:45.894Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for crush-fitness\\n[2023-04-30T03:30:45.894Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:30:45.894Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for johnson-ortho\\n[2023-04-30T03:30:45.894Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for rothman-uni\\n[2023-04-30T03:30:45.894Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for computek\\n[2023-04-30T03:30:45.894Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:30:45.894Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for rho-construction\\n[2023-04-30T03:30:45.894Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for alpha-ent\\n[2023-04-30T03:30:45.894Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:30:45.894Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for millenium-fitness\\n[2023-04-30T03:30:45.894Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for summit-uni\\n[2023-04-30T03:30:45.894Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:30:45.894Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for snap-fitness\\n[2023-04-30T03:30:45.894Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:30:45.894Z] Starting threads for catalyst\\n[2023-04-30T03:30:45.894Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] ==============================\\n[2023-04-30T03:40:45.896Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:40:45.896Z] ==============================\\n[2023-04-30T03:40:45.896Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:40:45.896Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for n00dles\\n[2023-04-30T03:40:45.896Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for foodnstuff\\n[2023-04-30T03:40:45.896Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:40:45.896Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:40:45.896Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for joesguns\\n[2023-04-30T03:40:45.896Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:40:45.896Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:40:45.896Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.896Z] Starting threads for nectar-net\\n[2023-04-30T03:40:45.896Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:40:45.896Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for neo-net\\n[2023-04-30T03:40:45.897Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for phantasy\\n[2023-04-30T03:40:45.897Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for max-hardware\\n[2023-04-30T03:40:45.897Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:40:45.897Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for zer0\\n[2023-04-30T03:40:45.897Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for iron-gym\\n[2023-04-30T03:40:45.897Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:40:45.897Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for silver-helix\\n[2023-04-30T03:40:45.897Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.897Z] Starting threads for omega-net\\n[2023-04-30T03:40:45.898Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:40:45.898Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for the-hub\\n[2023-04-30T03:40:45.898Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for crush-fitness\\n[2023-04-30T03:40:45.898Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:40:45.898Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for johnson-ortho\\n[2023-04-30T03:40:45.898Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for rothman-uni\\n[2023-04-30T03:40:45.898Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for computek\\n[2023-04-30T03:40:45.898Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:40:45.898Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for rho-construction\\n[2023-04-30T03:40:45.898Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for alpha-ent\\n[2023-04-30T03:40:45.898Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:40:45.898Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for millenium-fitness\\n[2023-04-30T03:40:45.898Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.898Z] Starting threads for summit-uni\\n[2023-04-30T03:40:45.898Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:40:45.899Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:40:45.899Z] Starting threads for snap-fitness\\n[2023-04-30T03:40:45.899Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:40:45.899Z] Starting threads for catalyst\\n[2023-04-30T03:40:45.899Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.426Z] ==============================\\n[2023-04-30T03:50:46.426Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T03:50:46.426Z] ==============================\\n[2023-04-30T03:50:46.426Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:50:46.426Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.436Z] Starting threads for n00dles\\n[2023-04-30T03:50:46.436Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.445Z] Starting threads for foodnstuff\\n[2023-04-30T03:50:46.445Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T03:50:46.455Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T03:50:46.466Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:50:46.466Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.475Z] Starting threads for joesguns\\n[2023-04-30T03:50:46.475Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T03:50:46.485Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T03:50:46.495Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:50:46.495Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.506Z] Starting threads for nectar-net\\n[2023-04-30T03:50:46.506Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T03:50:46.515Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T03:50:46.525Z] Starting threads for neo-net\\n[2023-04-30T03:50:46.525Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.537Z] Starting threads for phantasy\\n[2023-04-30T03:50:46.537Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.547Z] Starting threads for max-hardware\\n[2023-04-30T03:50:46.547Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T03:50:46.557Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T03:50:46.567Z] Starting threads for zer0\\n[2023-04-30T03:50:46.567Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.579Z] Starting threads for iron-gym\\n[2023-04-30T03:50:46.579Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T03:50:46.590Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T03:50:46.600Z] Starting threads for silver-helix\\n[2023-04-30T03:50:46.600Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.612Z] Starting threads for omega-net\\n[2023-04-30T03:50:46.612Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T03:50:46.623Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T03:50:46.634Z] Starting threads for the-hub\\n[2023-04-30T03:50:46.634Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.646Z] Starting threads for crush-fitness\\n[2023-04-30T03:50:46.646Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T03:50:46.657Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T03:50:46.668Z] Starting threads for johnson-ortho\\n[2023-04-30T03:50:46.668Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.681Z] Starting threads for rothman-uni\\n[2023-04-30T03:50:46.681Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.692Z] Starting threads for computek\\n[2023-04-30T03:50:46.692Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T03:50:46.703Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T03:50:46.717Z] Starting threads for rho-construction\\n[2023-04-30T03:50:46.717Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.728Z] Starting threads for alpha-ent\\n[2023-04-30T03:50:46.728Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T03:50:46.740Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T03:50:46.753Z] Starting threads for millenium-fitness\\n[2023-04-30T03:50:46.753Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.765Z] Starting threads for summit-uni\\n[2023-04-30T03:50:46.765Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T03:50:46.776Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T03:50:46.790Z] Starting threads for snap-fitness\\n[2023-04-30T03:50:46.790Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T03:50:46.802Z] Starting threads for catalyst\\n[2023-04-30T03:50:46.802Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] ==============================\\n[2023-04-30T04:00:46.822Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T04:00:46.822Z] ==============================\\n[2023-04-30T04:00:46.822Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:00:46.822Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for n00dles\\n[2023-04-30T04:00:46.822Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for foodnstuff\\n[2023-04-30T04:00:46.822Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T04:00:46.822Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:00:46.822Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for joesguns\\n[2023-04-30T04:00:46.822Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T04:00:46.822Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:00:46.822Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for nectar-net\\n[2023-04-30T04:00:46.822Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T04:00:46.822Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for neo-net\\n[2023-04-30T04:00:46.822Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for phantasy\\n[2023-04-30T04:00:46.822Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for max-hardware\\n[2023-04-30T04:00:46.822Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T04:00:46.822Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for zer0\\n[2023-04-30T04:00:46.822Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for iron-gym\\n[2023-04-30T04:00:46.822Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T04:00:46.822Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for silver-helix\\n[2023-04-30T04:00:46.822Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for omega-net\\n[2023-04-30T04:00:46.822Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T04:00:46.822Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for the-hub\\n[2023-04-30T04:00:46.822Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for crush-fitness\\n[2023-04-30T04:00:46.822Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T04:00:46.822Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for johnson-ortho\\n[2023-04-30T04:00:46.822Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for rothman-uni\\n[2023-04-30T04:00:46.822Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.822Z] Starting threads for computek\\n[2023-04-30T04:00:46.822Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T04:00:46.822Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for rho-construction\\n[2023-04-30T04:00:46.823Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for alpha-ent\\n[2023-04-30T04:00:46.823Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T04:00:46.823Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for millenium-fitness\\n[2023-04-30T04:00:46.823Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for summit-uni\\n[2023-04-30T04:00:46.823Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T04:00:46.823Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for snap-fitness\\n[2023-04-30T04:00:46.823Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:00:46.823Z] Starting threads for catalyst\\n[2023-04-30T04:00:46.823Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] ==============================\\n[2023-04-30T04:10:46.823Z] Starting to ramp up 25 servers with a max of 195 threads each\\n[2023-04-30T04:10:46.823Z] ==============================\\n[2023-04-30T04:10:46.823Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:10:46.823Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for n00dles\\n[2023-04-30T04:10:46.823Z] Server pserv-13 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for foodnstuff\\n[2023-04-30T04:10:46.823Z] Server pserv-13 does not have capacity for all threads. Starting 55.Threads left: 140\\n[2023-04-30T04:10:46.823Z] Server pserv-14 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:10:46.823Z] Server pserv-14 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for joesguns\\n[2023-04-30T04:10:46.823Z] Server pserv-14 does not have capacity for all threads. Starting 110.Threads left: 85\\n[2023-04-30T04:10:46.823Z] Server pserv-15 has capacity for all threads. Starting 85.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:10:46.823Z] Server pserv-15 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for nectar-net\\n[2023-04-30T04:10:46.823Z] Server pserv-15 does not have capacity for all threads. Starting 165.Threads left: 30\\n[2023-04-30T04:10:46.823Z] Server pserv-16 has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T04:10:46.823Z] Starting threads for neo-net\\n[2023-04-30T04:10:46.823Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for phantasy\\n[2023-04-30T04:10:46.824Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for max-hardware\\n[2023-04-30T04:10:46.824Z] Server pserv-16 does not have capacity for all threads. Starting 25.Threads left: 170\\n[2023-04-30T04:10:46.824Z] Server pserv-17 has capacity for all threads. Starting 170.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for zer0\\n[2023-04-30T04:10:46.824Z] Server pserv-17 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for iron-gym\\n[2023-04-30T04:10:46.824Z] Server pserv-17 does not have capacity for all threads. Starting 80.Threads left: 115\\n[2023-04-30T04:10:46.824Z] Server pserv-18 has capacity for all threads. Starting 115.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for silver-helix\\n[2023-04-30T04:10:46.824Z] Server pserv-18 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for omega-net\\n[2023-04-30T04:10:46.824Z] Server pserv-18 does not have capacity for all threads. Starting 135.Threads left: 60\\n[2023-04-30T04:10:46.824Z] Server pserv-19 has capacity for all threads. Starting 60.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for the-hub\\n[2023-04-30T04:10:46.824Z] Server pserv-19 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for crush-fitness\\n[2023-04-30T04:10:46.824Z] Server pserv-19 does not have capacity for all threads. Starting 190.Threads left: 5\\n[2023-04-30T04:10:46.824Z] Server pserv-20 has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for johnson-ortho\\n[2023-04-30T04:10:46.824Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for rothman-uni\\n[2023-04-30T04:10:46.824Z] Server pserv-20 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for computek\\n[2023-04-30T04:10:46.824Z] Server pserv-20 does not have capacity for all threads. Starting 50.Threads left: 145\\n[2023-04-30T04:10:46.824Z] Server pserv-21 has capacity for all threads. Starting 145.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for rho-construction\\n[2023-04-30T04:10:46.824Z] Server pserv-21 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for alpha-ent\\n[2023-04-30T04:10:46.824Z] Server pserv-21 does not have capacity for all threads. Starting 105.Threads left: 90\\n[2023-04-30T04:10:46.824Z] Server pserv-22 has capacity for all threads. Starting 90.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for millenium-fitness\\n[2023-04-30T04:10:46.824Z] Server pserv-22 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for summit-uni\\n[2023-04-30T04:10:46.824Z] Server pserv-22 does not have capacity for all threads. Starting 160.Threads left: 35\\n[2023-04-30T04:10:46.824Z] Server pserv-23 has capacity for all threads. Starting 35.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for snap-fitness\\n[2023-04-30T04:10:46.824Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:10:46.824Z] Starting threads for catalyst\\n[2023-04-30T04:10:46.824Z] Server pserv-23 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T04:20:47.855Z] ==============================\\n[2023-04-30T04:20:47.855Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T04:20:47.855Z] ==============================\\n[2023-04-30T04:20:47.855Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:20:47.855Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.875Z] Starting threads for n00dles\\n[2023-04-30T04:20:47.875Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.895Z] Starting threads for foodnstuff\\n[2023-04-30T04:20:47.895Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.914Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:20:47.914Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.935Z] Starting threads for joesguns\\n[2023-04-30T04:20:47.935Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.954Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:20:47.954Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.975Z] Starting threads for nectar-net\\n[2023-04-30T04:20:47.975Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:47.994Z] Starting threads for neo-net\\n[2023-04-30T04:20:47.994Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.015Z] Starting threads for phantasy\\n[2023-04-30T04:20:48.015Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.036Z] Starting threads for max-hardware\\n[2023-04-30T04:20:48.036Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.055Z] Starting threads for zer0\\n[2023-04-30T04:20:48.055Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.077Z] Starting threads for iron-gym\\n[2023-04-30T04:20:48.077Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.097Z] Starting threads for silver-helix\\n[2023-04-30T04:20:48.097Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.117Z] Starting threads for omega-net\\n[2023-04-30T04:20:48.117Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.136Z] Starting threads for the-hub\\n[2023-04-30T04:20:48.136Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.157Z] Starting threads for crush-fitness\\n[2023-04-30T04:20:48.157Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.176Z] Starting threads for johnson-ortho\\n[2023-04-30T04:20:48.176Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.196Z] Starting threads for rothman-uni\\n[2023-04-30T04:20:48.196Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.216Z] Starting threads for computek\\n[2023-04-30T04:20:48.216Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.237Z] Starting threads for rho-construction\\n[2023-04-30T04:20:48.237Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.259Z] Starting threads for alpha-ent\\n[2023-04-30T04:20:48.259Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.279Z] Starting threads for millenium-fitness\\n[2023-04-30T04:20:48.279Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.301Z] Starting threads for summit-uni\\n[2023-04-30T04:20:48.301Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.322Z] Starting threads for snap-fitness\\n[2023-04-30T04:20:48.322Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T04:20:48.343Z] Starting threads for catalyst\\n[2023-04-30T04:20:48.343Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.357Z] ==============================\\n[2023-04-30T20:44:09.357Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T20:44:09.357Z] ==============================\\n[2023-04-30T20:44:09.358Z] Starting threads for harakiri-sushi\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for n00dles\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for foodnstuff\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for sigma-cosmetics\\n[2023-04-30T20:44:09.358Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.358Z] Starting threads for joesguns\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for hong-fang-tea\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for nectar-net\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for neo-net\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for phantasy\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for max-hardware\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for zer0\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for iron-gym\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for silver-helix\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for omega-net\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for the-hub\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for crush-fitness\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for johnson-ortho\\n[2023-04-30T20:44:09.359Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.359Z] Starting threads for rothman-uni\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for computek\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for rho-construction\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for alpha-ent\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for millenium-fitness\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for summit-uni\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for snap-fitness\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:44:09.360Z] Starting threads for catalyst\\n[2023-04-30T20:44:09.360Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.361Z] ==============================\\n[2023-04-30T20:54:09.361Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T20:54:09.361Z] ==============================\\n[2023-04-30T20:54:09.361Z] Starting threads for harakiri-sushi\\n[2023-04-30T20:54:09.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.361Z] Starting threads for n00dles\\n[2023-04-30T20:54:09.361Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for foodnstuff\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for sigma-cosmetics\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for joesguns\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for hong-fang-tea\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for nectar-net\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for neo-net\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for phantasy\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for max-hardware\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for zer0\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for iron-gym\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for silver-helix\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for omega-net\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for the-hub\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for crush-fitness\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for johnson-ortho\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for rothman-uni\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for computek\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for rho-construction\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for alpha-ent\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for millenium-fitness\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for summit-uni\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for snap-fitness\\n[2023-04-30T20:54:09.362Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T20:54:09.362Z] Starting threads for catalyst\\n[2023-04-30T20:54:09.363Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] ==============================\\n[2023-04-30T21:04:09.364Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:04:09.364Z] ==============================\\n[2023-04-30T21:04:09.364Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for n00dles\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for foodnstuff\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for joesguns\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for nectar-net\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for neo-net\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for phantasy\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for max-hardware\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for zer0\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for iron-gym\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for silver-helix\\n[2023-04-30T21:04:09.364Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.364Z] Starting threads for omega-net\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for the-hub\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for crush-fitness\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for johnson-ortho\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for rothman-uni\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for computek\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for rho-construction\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for alpha-ent\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for millenium-fitness\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for summit-uni\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for snap-fitness\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:04:09.365Z] Starting threads for catalyst\\n[2023-04-30T21:04:09.365Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.365Z] ==============================\\n[2023-04-30T21:14:09.365Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:14:09.365Z] ==============================\\n[2023-04-30T21:14:09.365Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:14:09.365Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for n00dles\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for foodnstuff\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for joesguns\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for nectar-net\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for neo-net\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for phantasy\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for max-hardware\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for zer0\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for iron-gym\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for silver-helix\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for omega-net\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for the-hub\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for crush-fitness\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for johnson-ortho\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for rothman-uni\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for computek\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for rho-construction\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for alpha-ent\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for millenium-fitness\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for summit-uni\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for snap-fitness\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:14:09.366Z] Starting threads for catalyst\\n[2023-04-30T21:14:09.366Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] ==============================\\n[2023-04-30T21:24:09.368Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:24:09.368Z] ==============================\\n[2023-04-30T21:24:09.368Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for n00dles\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for foodnstuff\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for joesguns\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for nectar-net\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for neo-net\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for phantasy\\n[2023-04-30T21:24:09.368Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.368Z] Starting threads for max-hardware\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for zer0\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for iron-gym\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for silver-helix\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for omega-net\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for the-hub\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for crush-fitness\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for johnson-ortho\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for rothman-uni\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for computek\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for rho-construction\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for alpha-ent\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for millenium-fitness\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for summit-uni\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for snap-fitness\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:24:09.369Z] Starting threads for catalyst\\n[2023-04-30T21:24:09.369Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] ==============================\\n[2023-04-30T21:34:09.370Z] Starting to ramp up 25 servers with a max of 50149 threads each\\n[2023-04-30T21:34:09.370Z] ==============================\\n[2023-04-30T21:34:09.370Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for n00dles\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for foodnstuff\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for joesguns\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.370Z] Starting threads for nectar-net\\n[2023-04-30T21:34:09.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for neo-net\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for phantasy\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for max-hardware\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for zer0\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for iron-gym\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for silver-helix\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for omega-net\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for the-hub\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for crush-fitness\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for johnson-ortho\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for rothman-uni\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for computek\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for rho-construction\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for alpha-ent\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for millenium-fitness\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for summit-uni\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for snap-fitness\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 2000.ThreadsLeft: 0\\n[2023-04-30T21:34:09.371Z] Starting threads for catalyst\\n[2023-04-30T21:34:09.371Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T22:05:41.957Z] ==============================\\n[2023-04-30T22:05:41.957Z] Starting to ramp up 7 servers with a max of 699 threads each\\n[2023-04-30T22:05:41.957Z] ==============================\\n[2023-04-30T22:05:41.957Z] Starting threads for foodnstuff\\n[2023-04-30T22:05:41.957Z] Server pserv-13 does not have capacity for all threads. Starting 445.Threads left: 254\\n[2023-04-30T22:05:41.957Z] Server pserv-14 has capacity for all threads. Starting 254.ThreadsLeft: 0\\n[2023-04-30T22:05:41.957Z] Starting threads for phantasy\\n[2023-04-30T22:05:41.957Z] Server pserv-14 does not have capacity for all threads. Starting 445.Threads left: 254\\n[2023-04-30T22:05:41.957Z] Server pserv-15 has capacity for all threads. Starting 254.ThreadsLeft: 0\\n[2023-04-30T22:05:41.958Z] Starting threads for omega-net\\n[2023-04-30T22:05:41.958Z] Server pserv-15 does not have capacity for all threads. Starting 445.Threads left: 254\\n[2023-04-30T22:05:41.958Z] Server pserv-16 has capacity for all threads. Starting 254.ThreadsLeft: 0\\n[2023-04-30T22:05:41.958Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:05:41.958Z] Server pserv-16 does not have capacity for all threads. Starting 445.Threads left: 254\\n[2023-04-30T22:05:41.958Z] Server pserv-17 has capacity for all threads. Starting 254.ThreadsLeft: 0\\n[2023-04-30T22:05:41.958Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:05:41.958Z] Server pserv-17 does not have capacity for all threads. Starting 445.Threads left: 254\\n[2023-04-30T22:05:41.958Z] Server pserv-18 has capacity for all threads. Starting 254.ThreadsLeft: 0\\n[2023-04-30T22:05:41.958Z] Starting threads for zer0\\n[2023-04-30T22:05:41.958Z] Server pserv-18 does not have capacity for all threads. Starting 445.Threads left: 254\\n[2023-04-30T22:05:41.958Z] Server pserv-19 has capacity for all threads. Starting 254.ThreadsLeft: 0\\n[2023-04-30T22:05:41.958Z] Starting threads for n00dles\\n[2023-04-30T22:05:41.958Z] Server pserv-19 does not have capacity for all threads. Starting 445.Threads left: 254\\n[2023-04-30T22:05:41.958Z] Server pserv-20 has capacity for all threads. Starting 254.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] ==============================\\n[2023-04-30T22:08:49.038Z] Starting to ramp up 11 servers with a max of 445 threads each\\n[2023-04-30T22:08:49.038Z] ==============================\\n[2023-04-30T22:08:49.038Z] Starting threads for foodnstuff\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for phantasy\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for omega-net\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for zer0\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for n00dles\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for nectar-net\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for joesguns\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:08:49.038Z] Starting threads for max-hardware\\n[2023-04-30T22:08:49.038Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] ==============================\\n[2023-04-30T22:10:37.219Z] Starting to ramp up 11 servers with a max of 445 threads each\\n[2023-04-30T22:10:37.219Z] ==============================\\n[2023-04-30T22:10:37.219Z] Starting threads for foodnstuff\\n[2023-04-30T22:10:37.219Z] Server pserv-13 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for phantasy\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 0 - pserv-13\\n[2023-04-30T22:10:37.219Z] Server pserv-14 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for omega-net\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 1 - pserv-14\\n[2023-04-30T22:10:37.219Z] Server pserv-15 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 2 - pserv-15\\n[2023-04-30T22:10:37.219Z] Server pserv-16 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 3 - pserv-16\\n[2023-04-30T22:10:37.219Z] Server pserv-17 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for zer0\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 4 - pserv-17\\n[2023-04-30T22:10:37.219Z] Server pserv-18 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for n00dles\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 5 - pserv-18\\n[2023-04-30T22:10:37.219Z] Server pserv-19 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for nectar-net\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 6 - pserv-19\\n[2023-04-30T22:10:37.219Z] Server pserv-20 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for joesguns\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 7 - pserv-20\\n[2023-04-30T22:10:37.219Z] Server pserv-21 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.219Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:10:37.219Z] No more threads possible on server 8 - pserv-21\\n[2023-04-30T22:10:37.219Z] Server pserv-22 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:10:37.220Z] Starting threads for max-hardware\\n[2023-04-30T22:10:37.220Z] No more threads possible on server 9 - pserv-22\\n[2023-04-30T22:10:37.220Z] Server pserv-23 has capacity for all threads. Starting 445.ThreadsLeft: 0\\n[2023-04-30T22:20:37.226Z] ==============================\\n[2023-04-30T22:20:37.226Z] Starting to ramp up 14 servers with a max of 349 threads each\\n[2023-04-30T22:20:37.226Z] ==============================\\n[2023-04-30T22:20:37.226Z] Starting threads for foodnstuff\\n[2023-04-30T22:20:37.226Z] Server pserv-13 has capacity for all threads. Starting 349.ThreadsLeft: 0\\n[2023-04-30T22:20:37.226Z] Starting threads for phantasy\\n[2023-04-30T22:20:37.226Z] Server pserv-13 does not have capacity for all threads. Starting 96.Threads left: 253\\n[2023-04-30T22:20:37.226Z] Server pserv-14 has capacity for all threads. Starting 253.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for omega-net\\n[2023-04-30T22:20:37.227Z] Server pserv-14 does not have capacity for all threads. Starting 192.Threads left: 157\\n[2023-04-30T22:20:37.227Z] Server pserv-15 has capacity for all threads. Starting 157.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:20:37.227Z] Server pserv-15 does not have capacity for all threads. Starting 288.Threads left: 61\\n[2023-04-30T22:20:37.227Z] Server pserv-16 has capacity for all threads. Starting 61.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:20:37.227Z] Server pserv-16 has capacity for all threads. Starting 349.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for zer0\\n[2023-04-30T22:20:37.227Z] Server pserv-16 does not have capacity for all threads. Starting 35.Threads left: 314\\n[2023-04-30T22:20:37.227Z] Server pserv-17 has capacity for all threads. Starting 314.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for n00dles\\n[2023-04-30T22:20:37.227Z] Server pserv-17 does not have capacity for all threads. Starting 131.Threads left: 218\\n[2023-04-30T22:20:37.227Z] Server pserv-18 has capacity for all threads. Starting 218.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for nectar-net\\n[2023-04-30T22:20:37.227Z] Server pserv-18 does not have capacity for all threads. Starting 227.Threads left: 122\\n[2023-04-30T22:20:37.227Z] Server pserv-19 has capacity for all threads. Starting 122.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for joesguns\\n[2023-04-30T22:20:37.227Z] Server pserv-19 does not have capacity for all threads. Starting 323.Threads left: 26\\n[2023-04-30T22:20:37.227Z] Server pserv-20 has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:20:37.227Z] Server pserv-20 has capacity for all threads. Starting 349.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for max-hardware\\n[2023-04-30T22:20:37.227Z] Server pserv-20 does not have capacity for all threads. Starting 70.Threads left: 279\\n[2023-04-30T22:20:37.227Z] Server pserv-21 has capacity for all threads. Starting 279.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for silver-helix\\n[2023-04-30T22:20:37.227Z] Server pserv-21 does not have capacity for all threads. Starting 166.Threads left: 183\\n[2023-04-30T22:20:37.227Z] Server pserv-22 has capacity for all threads. Starting 183.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for neo-net\\n[2023-04-30T22:20:37.227Z] Server pserv-22 does not have capacity for all threads. Starting 262.Threads left: 87\\n[2023-04-30T22:20:37.227Z] Server pserv-23 has capacity for all threads. Starting 87.ThreadsLeft: 0\\n[2023-04-30T22:20:37.227Z] Starting threads for iron-gym\\n[2023-04-30T22:20:37.227Z] Server pserv-23 has capacity for all threads. Starting 349.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] ==============================\\n[2023-04-30T22:30:37.236Z] Starting to ramp up 16 servers with a max of 306 threads each\\n[2023-04-30T22:30:37.236Z] ==============================\\n[2023-04-30T22:30:37.236Z] Starting threads for foodnstuff\\n[2023-04-30T22:30:37.236Z] Server pserv-13 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for phantasy\\n[2023-04-30T22:30:37.236Z] Server pserv-13 does not have capacity for all threads. Starting 139.Threads left: 167\\n[2023-04-30T22:30:37.236Z] Server pserv-14 has capacity for all threads. Starting 167.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for omega-net\\n[2023-04-30T22:30:37.236Z] Server pserv-14 does not have capacity for all threads. Starting 278.Threads left: 28\\n[2023-04-30T22:30:37.236Z] Server pserv-15 has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:30:37.236Z] Server pserv-15 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:30:37.236Z] Server pserv-15 does not have capacity for all threads. Starting 111.Threads left: 195\\n[2023-04-30T22:30:37.236Z] Server pserv-16 has capacity for all threads. Starting 195.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for zer0\\n[2023-04-30T22:30:37.236Z] Server pserv-16 does not have capacity for all threads. Starting 250.Threads left: 56\\n[2023-04-30T22:30:37.236Z] Server pserv-17 has capacity for all threads. Starting 56.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for n00dles\\n[2023-04-30T22:30:37.236Z] Server pserv-17 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for nectar-net\\n[2023-04-30T22:30:37.236Z] Server pserv-17 does not have capacity for all threads. Starting 83.Threads left: 223\\n[2023-04-30T22:30:37.236Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for joesguns\\n[2023-04-30T22:30:37.236Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 84\\n[2023-04-30T22:30:37.236Z] Server pserv-19 has capacity for all threads. Starting 84.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:30:37.236Z] Server pserv-19 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for max-hardware\\n[2023-04-30T22:30:37.236Z] Server pserv-19 does not have capacity for all threads. Starting 55.Threads left: 251\\n[2023-04-30T22:30:37.236Z] Server pserv-20 has capacity for all threads. Starting 251.ThreadsLeft: 0\\n[2023-04-30T22:30:37.236Z] Starting threads for silver-helix\\n[2023-04-30T22:30:37.237Z] Server pserv-20 does not have capacity for all threads. Starting 194.Threads left: 112\\n[2023-04-30T22:30:37.237Z] Server pserv-21 has capacity for all threads. Starting 112.ThreadsLeft: 0\\n[2023-04-30T22:30:37.237Z] Starting threads for neo-net\\n[2023-04-30T22:30:37.237Z] Server pserv-21 has capacity for all threads. Starting 306.ThreadsLeft: 0\\n[2023-04-30T22:30:37.237Z] Starting threads for iron-gym\\n[2023-04-30T22:30:37.237Z] Server pserv-21 does not have capacity for all threads. Starting 27.Threads left: 279\\n[2023-04-30T22:30:37.237Z] Server pserv-22 has capacity for all threads. Starting 279.ThreadsLeft: 0\\n[2023-04-30T22:30:37.237Z] Starting threads for crush-fitness\\n[2023-04-30T22:30:37.237Z] Server pserv-22 does not have capacity for all threads. Starting 166.Threads left: 140\\n[2023-04-30T22:30:37.237Z] Server pserv-23 has capacity for all threads. Starting 140.ThreadsLeft: 0\\n[2023-04-30T22:30:37.237Z] Starting threads for johnson-ortho\\n[2023-04-30T22:30:37.237Z] Server pserv-23 does not have capacity for all threads. Starting 305.Threads left: 1\\n[2023-04-30T22:40:37.244Z] ==============================\\n[2023-04-30T22:40:37.244Z] Starting to ramp up 17 servers with a max of 288 threads each\\n[2023-04-30T22:40:37.244Z] ==============================\\n[2023-04-30T22:40:37.244Z] Starting threads for foodnstuff\\n[2023-04-30T22:40:37.244Z] Server pserv-13 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-30T22:40:37.244Z] Starting threads for phantasy\\n[2023-04-30T22:40:37.244Z] Server pserv-13 does not have capacity for all threads. Starting 157.Threads left: 131\\n[2023-04-30T22:40:37.244Z] Server pserv-14 has capacity for all threads. Starting 131.ThreadsLeft: 0\\n[2023-04-30T22:40:37.244Z] Starting threads for omega-net\\n[2023-04-30T22:40:37.244Z] Server pserv-14 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-30T22:40:37.244Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:40:37.244Z] Server pserv-14 does not have capacity for all threads. Starting 26.Threads left: 262\\n[2023-04-30T22:40:37.244Z] Server pserv-15 has capacity for all threads. Starting 262.ThreadsLeft: 0\\n[2023-04-30T22:40:37.244Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:40:37.244Z] Server pserv-15 does not have capacity for all threads. Starting 183.Threads left: 105\\n[2023-04-30T22:40:37.244Z] Server pserv-16 has capacity for all threads. Starting 105.ThreadsLeft: 0\\n[2023-04-30T22:40:37.244Z] Starting threads for zer0\\n[2023-04-30T22:40:37.244Z] Server pserv-16 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-30T22:40:37.244Z] Starting threads for n00dles\\n[2023-04-30T22:40:37.244Z] Server pserv-16 does not have capacity for all threads. Starting 52.Threads left: 236\\n[2023-04-30T22:40:37.244Z] Server pserv-17 has capacity for all threads. Starting 236.ThreadsLeft: 0\\n[2023-04-30T22:40:37.244Z] Starting threads for nectar-net\\n[2023-04-30T22:40:37.244Z] Server pserv-17 does not have capacity for all threads. Starting 209.Threads left: 79\\n[2023-04-30T22:40:37.244Z] Server pserv-18 has capacity for all threads. Starting 79.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for joesguns\\n[2023-04-30T22:40:37.245Z] Server pserv-18 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:40:37.245Z] Server pserv-18 does not have capacity for all threads. Starting 78.Threads left: 210\\n[2023-04-30T22:40:37.245Z] Server pserv-19 has capacity for all threads. Starting 210.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for max-hardware\\n[2023-04-30T22:40:37.245Z] Server pserv-19 does not have capacity for all threads. Starting 235.Threads left: 53\\n[2023-04-30T22:40:37.245Z] Server pserv-20 has capacity for all threads. Starting 53.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for silver-helix\\n[2023-04-30T22:40:37.245Z] Server pserv-20 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for neo-net\\n[2023-04-30T22:40:37.245Z] Server pserv-20 does not have capacity for all threads. Starting 104.Threads left: 184\\n[2023-04-30T22:40:37.245Z] Server pserv-21 has capacity for all threads. Starting 184.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for iron-gym\\n[2023-04-30T22:40:37.245Z] Server pserv-21 does not have capacity for all threads. Starting 261.Threads left: 27\\n[2023-04-30T22:40:37.245Z] Server pserv-22 has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for crush-fitness\\n[2023-04-30T22:40:37.245Z] Server pserv-22 has capacity for all threads. Starting 288.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for johnson-ortho\\n[2023-04-30T22:40:37.245Z] Server pserv-22 does not have capacity for all threads. Starting 130.Threads left: 158\\n[2023-04-30T22:40:37.245Z] Server pserv-23 has capacity for all threads. Starting 158.ThreadsLeft: 0\\n[2023-04-30T22:40:37.245Z] Starting threads for the-hub\\n[2023-04-30T22:40:37.245Z] Server pserv-23 does not have capacity for all threads. Starting 287.Threads left: 1\\n[2023-04-30T22:50:37.264Z] ==============================\\n[2023-04-30T22:50:37.264Z] Starting to ramp up 18 servers with a max of 272 threads each\\n[2023-04-30T22:50:37.264Z] ==============================\\n[2023-04-30T22:50:37.264Z] Starting threads for foodnstuff\\n[2023-04-30T22:50:37.264Z] Server pserv-13 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for phantasy\\n[2023-04-30T22:50:37.264Z] Server pserv-13 does not have capacity for all threads. Starting 173.Threads left: 99\\n[2023-04-30T22:50:37.264Z] Server pserv-14 has capacity for all threads. Starting 99.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for omega-net\\n[2023-04-30T22:50:37.264Z] Server pserv-14 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:50:37.264Z] Server pserv-14 does not have capacity for all threads. Starting 74.Threads left: 198\\n[2023-04-30T22:50:37.264Z] Server pserv-15 has capacity for all threads. Starting 198.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:50:37.264Z] Server pserv-15 does not have capacity for all threads. Starting 247.Threads left: 25\\n[2023-04-30T22:50:37.264Z] Server pserv-16 has capacity for all threads. Starting 25.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for zer0\\n[2023-04-30T22:50:37.264Z] Server pserv-16 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for n00dles\\n[2023-04-30T22:50:37.264Z] Server pserv-16 does not have capacity for all threads. Starting 148.Threads left: 124\\n[2023-04-30T22:50:37.264Z] Server pserv-17 has capacity for all threads. Starting 124.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for nectar-net\\n[2023-04-30T22:50:37.264Z] Server pserv-17 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-30T22:50:37.264Z] Starting threads for joesguns\\n[2023-04-30T22:50:37.264Z] Server pserv-17 does not have capacity for all threads. Starting 49.Threads left: 223\\n[2023-04-30T22:50:37.264Z] Server pserv-18 has capacity for all threads. Starting 223.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:50:37.265Z] Server pserv-18 does not have capacity for all threads. Starting 222.Threads left: 50\\n[2023-04-30T22:50:37.265Z] Server pserv-19 has capacity for all threads. Starting 50.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for max-hardware\\n[2023-04-30T22:50:37.265Z] Server pserv-19 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for silver-helix\\n[2023-04-30T22:50:37.265Z] Server pserv-19 does not have capacity for all threads. Starting 123.Threads left: 149\\n[2023-04-30T22:50:37.265Z] Server pserv-20 has capacity for all threads. Starting 149.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for neo-net\\n[2023-04-30T22:50:37.265Z] Server pserv-20 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for iron-gym\\n[2023-04-30T22:50:37.265Z] Server pserv-20 does not have capacity for all threads. Starting 24.Threads left: 248\\n[2023-04-30T22:50:37.265Z] Server pserv-21 has capacity for all threads. Starting 248.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for crush-fitness\\n[2023-04-30T22:50:37.265Z] Server pserv-21 does not have capacity for all threads. Starting 197.Threads left: 75\\n[2023-04-30T22:50:37.265Z] Server pserv-22 has capacity for all threads. Starting 75.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for johnson-ortho\\n[2023-04-30T22:50:37.265Z] Server pserv-22 has capacity for all threads. Starting 272.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for the-hub\\n[2023-04-30T22:50:37.265Z] Server pserv-22 does not have capacity for all threads. Starting 98.Threads left: 174\\n[2023-04-30T22:50:37.265Z] Server pserv-23 has capacity for all threads. Starting 174.ThreadsLeft: 0\\n[2023-04-30T22:50:37.265Z] Starting threads for rothman-uni\\n[2023-04-30T22:50:37.265Z] Server pserv-23 does not have capacity for all threads. Starting 271.Threads left: 1\\n[2023-04-30T23:00:37.830Z] ==============================\\n[2023-04-30T23:00:37.830Z] Starting to ramp up 19 servers with a max of 1031 threads each\\n[2023-04-30T23:00:37.830Z] ==============================\\n[2023-04-30T23:00:37.830Z] Starting threads for foodnstuff\\n[2023-04-30T23:00:37.830Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:37.844Z] Starting threads for phantasy\\n[2023-04-30T23:00:37.844Z] Server pserv-13 does not have capacity for all threads. Starting 780.Threads left: 220\\n[2023-04-30T23:00:37.856Z] Server pserv-14 has capacity for all threads. Starting 220.ThreadsLeft: 0\\n[2023-04-30T23:00:37.868Z] Starting threads for omega-net\\n[2023-04-30T23:00:37.868Z] Server pserv-14 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:37.882Z] Starting threads for sigma-cosmetics\\n[2023-04-30T23:00:37.882Z] Server pserv-14 does not have capacity for all threads. Starting 560.Threads left: 440\\n[2023-04-30T23:00:37.894Z] Server pserv-15 has capacity for all threads. Starting 440.ThreadsLeft: 0\\n[2023-04-30T23:00:37.906Z] Starting threads for harakiri-sushi\\n[2023-04-30T23:00:37.906Z] Server pserv-15 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:37.920Z] Starting threads for zer0\\n[2023-04-30T23:00:37.920Z] Server pserv-15 does not have capacity for all threads. Starting 340.Threads left: 660\\n[2023-04-30T23:00:37.932Z] Server pserv-16 has capacity for all threads. Starting 660.ThreadsLeft: 0\\n[2023-04-30T23:00:37.946Z] Starting threads for n00dles\\n[2023-04-30T23:00:37.946Z] Server pserv-16 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:37.959Z] Starting threads for nectar-net\\n[2023-04-30T23:00:37.959Z] Server pserv-16 does not have capacity for all threads. Starting 120.Threads left: 880\\n[2023-04-30T23:00:37.971Z] Server pserv-17 has capacity for all threads. Starting 880.ThreadsLeft: 0\\n[2023-04-30T23:00:37.986Z] Starting threads for joesguns\\n[2023-04-30T23:00:37.986Z] Server pserv-17 does not have capacity for all threads. Starting 900.Threads left: 100\\n[2023-04-30T23:00:37.998Z] Server pserv-18 has capacity for all threads. Starting 100.ThreadsLeft: 0\\n[2023-04-30T23:00:38.013Z] Starting threads for hong-fang-tea\\n[2023-04-30T23:00:38.013Z] Server pserv-18 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:38.026Z] Starting threads for max-hardware\\n[2023-04-30T23:00:38.026Z] Server pserv-18 does not have capacity for all threads. Starting 680.Threads left: 320\\n[2023-04-30T23:00:38.039Z] Server pserv-19 has capacity for all threads. Starting 320.ThreadsLeft: 0\\n[2023-04-30T23:00:38.054Z] Starting threads for silver-helix\\n[2023-04-30T23:00:38.054Z] Server pserv-19 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:38.068Z] Starting threads for neo-net\\n[2023-04-30T23:00:38.068Z] Server pserv-19 does not have capacity for all threads. Starting 460.Threads left: 540\\n[2023-04-30T23:00:38.083Z] Server pserv-20 has capacity for all threads. Starting 540.ThreadsLeft: 0\\n[2023-04-30T23:00:38.096Z] Starting threads for iron-gym\\n[2023-04-30T23:00:38.096Z] Server pserv-20 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:38.109Z] Starting threads for crush-fitness\\n[2023-04-30T23:00:38.109Z] Server pserv-20 does not have capacity for all threads. Starting 240.Threads left: 760\\n[2023-04-30T23:00:38.124Z] Server pserv-21 has capacity for all threads. Starting 760.ThreadsLeft: 0\\n[2023-04-30T23:00:38.138Z] Starting threads for johnson-ortho\\n[2023-04-30T23:00:38.138Z] Server pserv-21 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:00:38.154Z] Starting threads for the-hub\\n[2023-04-30T23:00:38.154Z] Server pserv-21 does not have capacity for all threads. Starting 20.Threads left: 980\\n[2023-04-30T23:00:38.167Z] Server pserv-22 has capacity for all threads. Starting 980.ThreadsLeft: 0\\n[2023-04-30T23:00:38.183Z] Starting threads for rothman-uni\\n[2023-04-30T23:00:38.183Z] Server pserv-22 does not have capacity for all threads. Starting 800.Threads left: 200\\n[2023-04-30T23:00:38.197Z] Server pserv-23 has capacity for all threads. Starting 200.ThreadsLeft: 0\\n[2023-04-30T23:00:38.213Z] Starting threads for millenium-fitness\\n[2023-04-30T23:00:38.213Z] Server pserv-23 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.617Z] ==============================\\n[2023-04-30T23:10:37.617Z] Starting to ramp up 20 servers with a max of 29918 threads each\\n[2023-04-30T23:10:37.617Z] ==============================\\n[2023-04-30T23:10:37.617Z] Starting threads for foodnstuff\\n[2023-04-30T23:10:37.617Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.632Z] Starting threads for phantasy\\n[2023-04-30T23:10:37.632Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.648Z] Starting threads for omega-net\\n[2023-04-30T23:10:37.648Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.662Z] Starting threads for sigma-cosmetics\\n[2023-04-30T23:10:37.662Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.678Z] Starting threads for harakiri-sushi\\n[2023-04-30T23:10:37.678Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.692Z] Starting threads for zer0\\n[2023-04-30T23:10:37.692Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.706Z] Starting threads for n00dles\\n[2023-04-30T23:10:37.706Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.722Z] Starting threads for nectar-net\\n[2023-04-30T23:10:37.722Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.736Z] Starting threads for joesguns\\n[2023-04-30T23:10:37.736Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.752Z] Starting threads for hong-fang-tea\\n[2023-04-30T23:10:37.752Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.766Z] Starting threads for max-hardware\\n[2023-04-30T23:10:37.766Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.782Z] Starting threads for silver-helix\\n[2023-04-30T23:10:37.782Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.796Z] Starting threads for neo-net\\n[2023-04-30T23:10:37.796Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.812Z] Starting threads for iron-gym\\n[2023-04-30T23:10:37.812Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.826Z] Starting threads for crush-fitness\\n[2023-04-30T23:10:37.826Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.842Z] Starting threads for johnson-ortho\\n[2023-04-30T23:10:37.842Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.856Z] Starting threads for the-hub\\n[2023-04-30T23:10:37.856Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.871Z] Starting threads for rothman-uni\\n[2023-04-30T23:10:37.871Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.886Z] Starting threads for millenium-fitness\\n[2023-04-30T23:10:37.886Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:10:37.901Z] Starting threads for rho-construction\\n[2023-04-30T23:10:37.901Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.382Z] ==============================\\n[2023-04-30T23:20:38.382Z] Starting to ramp up 20 servers with a max of 29918 threads each\\n[2023-04-30T23:20:38.382Z] ==============================\\n[2023-04-30T23:20:38.382Z] Starting threads for foodnstuff\\n[2023-04-30T23:20:38.382Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.397Z] Starting threads for phantasy\\n[2023-04-30T23:20:38.397Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.411Z] Starting threads for omega-net\\n[2023-04-30T23:20:38.411Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.426Z] Starting threads for sigma-cosmetics\\n[2023-04-30T23:20:38.426Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.439Z] Starting threads for harakiri-sushi\\n[2023-04-30T23:20:38.439Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.455Z] Starting threads for zer0\\n[2023-04-30T23:20:38.455Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.469Z] Starting threads for n00dles\\n[2023-04-30T23:20:38.469Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.484Z] Starting threads for nectar-net\\n[2023-04-30T23:20:38.484Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.498Z] Starting threads for joesguns\\n[2023-04-30T23:20:38.498Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.513Z] Starting threads for hong-fang-tea\\n[2023-04-30T23:20:38.513Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.528Z] Starting threads for max-hardware\\n[2023-04-30T23:20:38.528Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.542Z] Starting threads for silver-helix\\n[2023-04-30T23:20:38.542Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.558Z] Starting threads for neo-net\\n[2023-04-30T23:20:38.558Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.572Z] Starting threads for iron-gym\\n[2023-04-30T23:20:38.572Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.588Z] Starting threads for crush-fitness\\n[2023-04-30T23:20:38.588Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.602Z] Starting threads for johnson-ortho\\n[2023-04-30T23:20:38.602Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.618Z] Starting threads for the-hub\\n[2023-04-30T23:20:38.618Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.632Z] Starting threads for rothman-uni\\n[2023-04-30T23:20:38.632Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.648Z] Starting threads for millenium-fitness\\n[2023-04-30T23:20:38.648Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:20:38.662Z] Starting threads for rho-construction\\n[2023-04-30T23:20:38.662Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.159Z] ==============================\\n[2023-04-30T23:30:39.159Z] Starting to ramp up 21 servers with a max of 28493 threads each\\n[2023-04-30T23:30:39.159Z] ==============================\\n[2023-04-30T23:30:39.159Z] Starting threads for foodnstuff\\n[2023-04-30T23:30:39.159Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.175Z] Starting threads for phantasy\\n[2023-04-30T23:30:39.175Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.190Z] Starting threads for omega-net\\n[2023-04-30T23:30:39.190Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.205Z] Starting threads for sigma-cosmetics\\n[2023-04-30T23:30:39.205Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.220Z] Starting threads for harakiri-sushi\\n[2023-04-30T23:30:39.220Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.235Z] Starting threads for zer0\\n[2023-04-30T23:30:39.235Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.251Z] Starting threads for n00dles\\n[2023-04-30T23:30:39.251Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.265Z] Starting threads for nectar-net\\n[2023-04-30T23:30:39.265Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.281Z] Starting threads for joesguns\\n[2023-04-30T23:30:39.281Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.295Z] Starting threads for hong-fang-tea\\n[2023-04-30T23:30:39.295Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.311Z] Starting threads for max-hardware\\n[2023-04-30T23:30:39.311Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.325Z] Starting threads for silver-helix\\n[2023-04-30T23:30:39.325Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.341Z] Starting threads for neo-net\\n[2023-04-30T23:30:39.341Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.355Z] Starting threads for iron-gym\\n[2023-04-30T23:30:39.355Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.370Z] Starting threads for crush-fitness\\n[2023-04-30T23:30:39.370Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.386Z] Starting threads for johnson-ortho\\n[2023-04-30T23:30:39.386Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.401Z] Starting threads for the-hub\\n[2023-04-30T23:30:39.401Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.417Z] Starting threads for rothman-uni\\n[2023-04-30T23:30:39.417Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.431Z] Starting threads for millenium-fitness\\n[2023-04-30T23:30:39.431Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.447Z] Starting threads for rho-construction\\n[2023-04-30T23:30:39.447Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:30:39.462Z] Starting threads for summit-uni\\n[2023-04-30T23:30:39.462Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.484Z] ==============================\\n[2023-04-30T23:40:39.484Z] Starting to ramp up 22 servers with a max of 27198 threads each\\n[2023-04-30T23:40:39.484Z] ==============================\\n[2023-04-30T23:40:39.484Z] Starting threads for foodnstuff\\n[2023-04-30T23:40:39.484Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.484Z] Starting threads for phantasy\\n[2023-04-30T23:40:39.484Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for omega-net\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for sigma-cosmetics\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for harakiri-sushi\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for zer0\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for n00dles\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for nectar-net\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for joesguns\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for hong-fang-tea\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for max-hardware\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for silver-helix\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for neo-net\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for iron-gym\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for crush-fitness\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for johnson-ortho\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for the-hub\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for rothman-uni\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for millenium-fitness\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for rho-construction\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for summit-uni\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-04-30T23:40:39.485Z] Starting threads for snap-fitness\\n[2023-04-30T23:40:39.485Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] ==============================\\n[2023-05-01T00:56:46.912Z] Starting to ramp up 22 servers with a max of 27198 threads each\\n[2023-05-01T00:56:46.912Z] ==============================\\n[2023-05-01T00:56:46.912Z] Starting threads for foodnstuff\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for phantasy\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for omega-net\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for sigma-cosmetics\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for harakiri-sushi\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for zer0\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for n00dles\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for nectar-net\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for joesguns\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for hong-fang-tea\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for max-hardware\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for silver-helix\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for neo-net\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for iron-gym\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for crush-fitness\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for johnson-ortho\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for the-hub\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for rothman-uni\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for millenium-fitness\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for rho-construction\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for summit-uni\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T00:56:46.912Z] Starting threads for snap-fitness\\n[2023-05-01T00:56:46.912Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.919Z] ==============================\\n[2023-05-01T01:06:46.919Z] Starting to ramp up 22 servers with a max of 27198 threads each\\n[2023-05-01T01:06:46.919Z] ==============================\\n[2023-05-01T01:06:46.919Z] Starting threads for foodnstuff\\n[2023-05-01T01:06:46.919Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.919Z] Starting threads for phantasy\\n[2023-05-01T01:06:46.919Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.919Z] Starting threads for omega-net\\n[2023-05-01T01:06:46.919Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.919Z] Starting threads for sigma-cosmetics\\n[2023-05-01T01:06:46.919Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.919Z] Starting threads for harakiri-sushi\\n[2023-05-01T01:06:46.919Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.919Z] Starting threads for zer0\\n[2023-05-01T01:06:46.919Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for n00dles\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for nectar-net\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for joesguns\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for hong-fang-tea\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for max-hardware\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for silver-helix\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for neo-net\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for iron-gym\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for crush-fitness\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for johnson-ortho\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for the-hub\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for rothman-uni\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for millenium-fitness\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for rho-construction\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for summit-uni\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n[2023-05-01T01:06:46.920Z] Starting threads for snap-fitness\\n[2023-05-01T01:06:46.920Z] Server pserv-13 has capacity for all threads. Starting 1000.ThreadsLeft: 0\\n\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"/logs/hack.orchestrator.service.log.txt\",\"text\":\"[2023-04-29T13:22:25.765Z] ==============================\\n[2023-04-29T13:22:25.765Z] Starting to hack 20 servers with a max of 10333 threads each\\n[2023-04-29T13:22:25.765Z] ==============================\\n[2023-04-29T13:22:25.765Z] Starting threads for n00dles\\n[2023-04-29T13:22:25.765Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for foodnstuff\\n[2023-04-29T13:22:25.766Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:22:25.766Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:22:25.766Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:22:25.766Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for joesguns\\n[2023-04-29T13:22:25.766Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:22:25.766Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:22:25.766Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:22:25.766Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:22:25.766Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for nectar-net\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for max-hardware\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for neo-net\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for zer0\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for iron-gym\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for phantasy\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for omega-net\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for crush-fitness\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for the-hub\\n[2023-04-29T13:22:25.766Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for rothman-uni\\n[2023-04-29T13:22:25.766Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:22:25.766Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for johnson-ortho\\n[2023-04-29T13:22:25.766Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:22:25.766Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for rho-construction\\n[2023-04-29T13:22:25.766Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:22:25.766Z] Starting threads for computek\\n[2023-04-29T13:22:25.767Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:22:25.767Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:22:25.767Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:22:25.767Z] Starting threads for millenium-fitness\\n[2023-04-29T13:22:25.767Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:22:25.767Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] ==============================\\n[2023-04-29T13:26:57.049Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:26:57.049Z] ==============================\\n[2023-04-29T13:26:57.049Z] Starting threads for n00dles\\n[2023-04-29T13:26:57.049Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for foodnstuff\\n[2023-04-29T13:26:57.049Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:26:57.049Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:26:57.049Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:26:57.049Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for joesguns\\n[2023-04-29T13:26:57.049Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:26:57.049Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:26:57.049Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:26:57.049Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.049Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:26:57.050Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for nectar-net\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for max-hardware\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for neo-net\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for zer0\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for iron-gym\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for phantasy\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for omega-net\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for crush-fitness\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for the-hub\\n[2023-04-29T13:26:57.050Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for rothman-uni\\n[2023-04-29T13:26:57.050Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:26:57.050Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for johnson-ortho\\n[2023-04-29T13:26:57.050Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:26:57.050Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for rho-construction\\n[2023-04-29T13:26:57.050Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for computek\\n[2023-04-29T13:26:57.050Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:26:57.050Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:26:57.050Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:26:57.050Z] Starting threads for millenium-fitness\\n[2023-04-29T13:26:57.050Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:26:57.050Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] ==============================\\n[2023-04-29T13:27:32.389Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:27:32.389Z] ==============================\\n[2023-04-29T13:27:32.389Z] Starting threads for n00dles\\n[2023-04-29T13:27:32.389Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for foodnstuff\\n[2023-04-29T13:27:32.389Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:27:32.389Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:27:32.389Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:27:32.389Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for joesguns\\n[2023-04-29T13:27:32.389Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:27:32.389Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:27:32.389Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:27:32.389Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:27:32.389Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:27:32.390Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for nectar-net\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for max-hardware\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for neo-net\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for zer0\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for iron-gym\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for phantasy\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for omega-net\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for crush-fitness\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for the-hub\\n[2023-04-29T13:27:32.390Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for rothman-uni\\n[2023-04-29T13:27:32.390Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:27:32.390Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for johnson-ortho\\n[2023-04-29T13:27:32.390Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:27:32.390Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for rho-construction\\n[2023-04-29T13:27:32.390Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for computek\\n[2023-04-29T13:27:32.390Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:27:32.390Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:27:32.390Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:27:32.390Z] Starting threads for millenium-fitness\\n[2023-04-29T13:27:32.390Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:27:32.390Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:42:32.411Z] ==============================\\n[2023-04-29T13:42:32.411Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:42:32.411Z] ==============================\\n[2023-04-29T13:42:32.411Z] Starting threads for n00dles\\n[2023-04-29T13:42:32.411Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for foodnstuff\\n[2023-04-29T13:42:32.412Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:42:32.412Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:42:32.412Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:42:32.412Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for joesguns\\n[2023-04-29T13:42:32.412Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:42:32.412Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:42:32.412Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:42:32.412Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:42:32.412Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for nectar-net\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for max-hardware\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.412Z] Starting threads for neo-net\\n[2023-04-29T13:42:32.412Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for zer0\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for iron-gym\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for phantasy\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for omega-net\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for crush-fitness\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for the-hub\\n[2023-04-29T13:42:32.413Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for rothman-uni\\n[2023-04-29T13:42:32.413Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:42:32.413Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for johnson-ortho\\n[2023-04-29T13:42:32.413Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T13:42:32.413Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for rho-construction\\n[2023-04-29T13:42:32.413Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for computek\\n[2023-04-29T13:42:32.413Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T13:42:32.413Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T13:42:32.413Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:42:32.413Z] Starting threads for millenium-fitness\\n[2023-04-29T13:42:32.413Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T13:42:32.413Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T13:57:32.422Z] ==============================\\n[2023-04-29T13:57:32.422Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T13:57:32.422Z] ==============================\\n[2023-04-29T13:57:32.422Z] Starting threads for n00dles\\n[2023-04-29T13:57:32.422Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for foodnstuff\\n[2023-04-29T13:57:32.423Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T13:57:32.423Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T13:57:32.423Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for sigma-cosmetics\\n[2023-04-29T13:57:32.423Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for joesguns\\n[2023-04-29T13:57:32.423Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T13:57:32.423Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T13:57:32.423Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for hong-fang-tea\\n[2023-04-29T13:57:32.423Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for harakiri-sushi\\n[2023-04-29T13:57:32.423Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for nectar-net\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for max-hardware\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for neo-net\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for zer0\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for iron-gym\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for phantasy\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for omega-net\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for crush-fitness\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for the-hub\\n[2023-04-29T13:57:32.423Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for rothman-uni\\n[2023-04-29T13:57:32.423Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T13:57:32.423Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for johnson-ortho\\n[2023-04-29T13:57:32.423Z] Server netlink has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for rho-construction\\n[2023-04-29T13:57:32.423Z] Server netlink does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-29T13:57:32.423Z] Server rothman-uni has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for computek\\n[2023-04-29T13:57:32.423Z] Server rothman-uni does not have capacity for all threads. Starting 25.Threads left: 5\\n[2023-04-29T13:57:32.423Z] Server catalyst has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T13:57:32.423Z] Starting threads for millenium-fitness\\n[2023-04-29T13:57:32.423Z] Server catalyst does not have capacity for all threads. Starting 8.Threads left: 22\\n[2023-04-29T13:57:32.423Z] Server rho-construction does not have capacity for all threads. Starting 13.Threads left: 9\\n[2023-04-29T13:57:32.423Z] Server alpha-ent has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] ==============================\\n[2023-04-29T14:12:32.429Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T14:12:32.429Z] ==============================\\n[2023-04-29T14:12:32.429Z] Starting threads for n00dles\\n[2023-04-29T14:12:32.429Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for foodnstuff\\n[2023-04-29T14:12:32.429Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:12:32.429Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:12:32.429Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:12:32.429Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for joesguns\\n[2023-04-29T14:12:32.429Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:12:32.429Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T14:12:32.429Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:12:32.429Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:12:32.429Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for nectar-net\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for max-hardware\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for neo-net\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for zer0\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for iron-gym\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for phantasy\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for omega-net\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for crush-fitness\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:12:32.429Z] Starting threads for the-hub\\n[2023-04-29T14:12:32.429Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for rothman-uni\\n[2023-04-29T14:12:32.430Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:12:32.430Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for johnson-ortho\\n[2023-04-29T14:12:32.430Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T14:12:32.430Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for rho-construction\\n[2023-04-29T14:12:32.430Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for computek\\n[2023-04-29T14:12:32.430Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T14:12:32.430Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T14:12:32.430Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:12:32.430Z] Starting threads for millenium-fitness\\n[2023-04-29T14:12:32.430Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T14:12:32.430Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] ==============================\\n[2023-04-29T14:27:32.436Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T14:27:32.436Z] ==============================\\n[2023-04-29T14:27:32.436Z] Starting threads for n00dles\\n[2023-04-29T14:27:32.436Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for foodnstuff\\n[2023-04-29T14:27:32.436Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:27:32.436Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:27:32.436Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:27:32.436Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for joesguns\\n[2023-04-29T14:27:32.436Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:27:32.436Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T14:27:32.436Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:27:32.436Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:27:32.436Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for nectar-net\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for max-hardware\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for neo-net\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for zer0\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for iron-gym\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for phantasy\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for omega-net\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for crush-fitness\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for the-hub\\n[2023-04-29T14:27:32.436Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for rothman-uni\\n[2023-04-29T14:27:32.436Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:27:32.436Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for johnson-ortho\\n[2023-04-29T14:27:32.436Z] Server netlink has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for rho-construction\\n[2023-04-29T14:27:32.436Z] Server netlink does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-29T14:27:32.436Z] Server rothman-uni has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for computek\\n[2023-04-29T14:27:32.436Z] Server rothman-uni does not have capacity for all threads. Starting 25.Threads left: 5\\n[2023-04-29T14:27:32.436Z] Server catalyst has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T14:27:32.436Z] Starting threads for millenium-fitness\\n[2023-04-29T14:27:32.436Z] Server catalyst does not have capacity for all threads. Starting 8.Threads left: 22\\n[2023-04-29T14:27:32.436Z] Server rho-construction does not have capacity for all threads. Starting 13.Threads left: 9\\n[2023-04-29T14:27:32.436Z] Server alpha-ent has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] ==============================\\n[2023-04-29T14:42:32.442Z] Starting to hack 20 servers with a max of 93 threads each\\n[2023-04-29T14:42:32.442Z] ==============================\\n[2023-04-29T14:42:32.442Z] Starting threads for n00dles\\n[2023-04-29T14:42:32.442Z] Server n00dles does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:42:32.442Z] Server max-hardware has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for foodnstuff\\n[2023-04-29T14:42:32.442Z] Server max-hardware does not have capacity for all threads. Starting 4.Threads left: 6\\n[2023-04-29T14:42:32.442Z] Server foodnstuff has capacity for all threads. Starting 6.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:42:32.442Z] No more threads possible on server 2 - foodnstuff\\n[2023-04-29T14:42:32.442Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for joesguns\\n[2023-04-29T14:42:32.442Z] Server zer0 does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:42:32.442Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:42:32.442Z] Server neo-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:42:32.442Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:42:32.442Z] Server neo-net does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for nectar-net\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for max-hardware\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for neo-net\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for zer0\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for iron-gym\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for phantasy\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for omega-net\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for crush-fitness\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for the-hub\\n[2023-04-29T14:42:32.442Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for rothman-uni\\n[2023-04-29T14:42:32.442Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:42:32.442Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for johnson-ortho\\n[2023-04-29T14:42:32.442Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T14:42:32.442Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for rho-construction\\n[2023-04-29T14:42:32.442Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for computek\\n[2023-04-29T14:42:32.442Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T14:42:32.442Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T14:42:32.442Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:42:32.442Z] Starting threads for millenium-fitness\\n[2023-04-29T14:42:32.442Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T14:42:32.442Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] ==============================\\n[2023-04-29T14:49:19.583Z] Starting to hack 21 servers with a max of 89 threads each\\n[2023-04-29T14:49:19.583Z] ==============================\\n[2023-04-29T14:49:19.583Z] Starting threads for n00dles\\n[2023-04-29T14:49:19.583Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for foodnstuff\\n[2023-04-29T14:49:19.583Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T14:49:19.583Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T14:49:19.583Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for sigma-cosmetics\\n[2023-04-29T14:49:19.583Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for joesguns\\n[2023-04-29T14:49:19.583Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T14:49:19.583Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T14:49:19.583Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for hong-fang-tea\\n[2023-04-29T14:49:19.583Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for harakiri-sushi\\n[2023-04-29T14:49:19.583Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for nectar-net\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for max-hardware\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for neo-net\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for zer0\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for iron-gym\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for phantasy\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for omega-net\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for crush-fitness\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for the-hub\\n[2023-04-29T14:49:19.583Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T14:49:19.583Z] Starting threads for rothman-uni\\n[2023-04-29T14:49:19.583Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T14:49:19.584Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for johnson-ortho\\n[2023-04-29T14:49:19.584Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T14:49:19.584Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for rho-construction\\n[2023-04-29T14:49:19.584Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for computek\\n[2023-04-29T14:49:19.584Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T14:49:19.584Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T14:49:19.584Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for millenium-fitness\\n[2023-04-29T14:49:19.584Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T14:49:19.584Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T14:49:19.584Z] Starting threads for silver-helix\\n[2023-04-29T14:49:19.584Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T14:49:19.584Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] ==============================\\n[2023-04-29T15:19:19.593Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T15:19:19.593Z] ==============================\\n[2023-04-29T15:19:19.593Z] Starting threads for n00dles\\n[2023-04-29T15:19:19.593Z] Server max-hardware has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] Starting threads for foodnstuff\\n[2023-04-29T15:19:19.593Z] Server max-hardware does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T15:19:19.593Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T15:19:19.593Z] Server zer0 has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:19:19.593Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.593Z] Starting threads for joesguns\\n[2023-04-29T15:19:19.593Z] Server zer0 does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T15:19:19.593Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T15:19:19.594Z] Server neo-net has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:19:19.594Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:19:19.594Z] Server neo-net does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for nectar-net\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for max-hardware\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for neo-net\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for zer0\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for iron-gym\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for phantasy\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for omega-net\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for crush-fitness\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for the-hub\\n[2023-04-29T15:19:19.594Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for rothman-uni\\n[2023-04-29T15:19:19.594Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T15:19:19.594Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for johnson-ortho\\n[2023-04-29T15:19:19.594Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T15:19:19.594Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for rho-construction\\n[2023-04-29T15:19:19.594Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for computek\\n[2023-04-29T15:19:19.594Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T15:19:19.594Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T15:19:19.594Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for millenium-fitness\\n[2023-04-29T15:19:19.594Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T15:19:19.594Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for silver-helix\\n[2023-04-29T15:19:19.594Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T15:19:19.594Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T15:19:19.594Z] Starting threads for summit-uni\\n[2023-04-29T15:19:19.594Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 12 - aerocorp\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 13 - galactic-cyber\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 14 - deltaone\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 15 - defcomm\\n[2023-04-29T15:19:19.594Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T15:19:19.594Z] No more threads possible on server 17 - infocomm\\n[2023-04-29T15:19:19.594Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] ==============================\\n[2023-04-29T15:49:19.613Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T15:49:19.613Z] ==============================\\n[2023-04-29T15:49:19.613Z] Starting threads for n00dles\\n[2023-04-29T15:49:19.613Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T15:49:19.613Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for foodnstuff\\n[2023-04-29T15:49:19.613Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T15:49:19.613Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for sigma-cosmetics\\n[2023-04-29T15:49:19.613Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T15:49:19.613Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for joesguns\\n[2023-04-29T15:49:19.613Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for hong-fang-tea\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for harakiri-sushi\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for nectar-net\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for max-hardware\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for neo-net\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for zer0\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for iron-gym\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for phantasy\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for omega-net\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for crush-fitness\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:49:19.613Z] Starting threads for the-hub\\n[2023-04-29T15:49:19.613Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for rothman-uni\\n[2023-04-29T15:49:19.614Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T15:49:19.614Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for johnson-ortho\\n[2023-04-29T15:49:19.614Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T15:49:19.614Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for rho-construction\\n[2023-04-29T15:49:19.614Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for computek\\n[2023-04-29T15:49:19.614Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T15:49:19.614Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T15:49:19.614Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for millenium-fitness\\n[2023-04-29T15:49:19.614Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T15:49:19.614Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for silver-helix\\n[2023-04-29T15:49:19.614Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T15:49:19.614Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T15:49:19.614Z] Starting threads for summit-uni\\n[2023-04-29T15:49:19.614Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T15:49:19.614Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T15:49:19.614Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T15:49:19.614Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:19:19.622Z] ==============================\\n[2023-04-29T16:19:19.622Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T16:19:19.622Z] ==============================\\n[2023-04-29T16:19:19.622Z] Starting threads for n00dles\\n[2023-04-29T16:19:19.622Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T16:19:19.622Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:19:19.622Z] Starting threads for foodnstuff\\n[2023-04-29T16:19:19.622Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T16:19:19.623Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:19:19.623Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T16:19:19.623Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for joesguns\\n[2023-04-29T16:19:19.623Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for nectar-net\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for max-hardware\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for neo-net\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for zer0\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for iron-gym\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for phantasy\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for omega-net\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for crush-fitness\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for the-hub\\n[2023-04-29T16:19:19.623Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for rothman-uni\\n[2023-04-29T16:19:19.623Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T16:19:19.623Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for johnson-ortho\\n[2023-04-29T16:19:19.623Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T16:19:19.623Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for rho-construction\\n[2023-04-29T16:19:19.623Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for computek\\n[2023-04-29T16:19:19.623Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T16:19:19.623Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T16:19:19.623Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for millenium-fitness\\n[2023-04-29T16:19:19.623Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T16:19:19.623Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for silver-helix\\n[2023-04-29T16:19:19.623Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T16:19:19.623Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T16:19:19.623Z] Starting threads for summit-uni\\n[2023-04-29T16:19:19.623Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T16:19:19.623Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T16:19:19.623Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T16:19:19.623Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:49:19.634Z] ==============================\\n[2023-04-29T16:49:19.634Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T16:49:19.634Z] ==============================\\n[2023-04-29T16:49:19.634Z] Starting threads for n00dles\\n[2023-04-29T16:49:19.635Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T16:49:19.635Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for foodnstuff\\n[2023-04-29T16:49:19.635Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T16:49:19.635Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for sigma-cosmetics\\n[2023-04-29T16:49:19.635Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T16:49:19.635Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for joesguns\\n[2023-04-29T16:49:19.635Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for hong-fang-tea\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for harakiri-sushi\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for nectar-net\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for max-hardware\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for neo-net\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for zer0\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for iron-gym\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for phantasy\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for omega-net\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for crush-fitness\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for the-hub\\n[2023-04-29T16:49:19.635Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for rothman-uni\\n[2023-04-29T16:49:19.635Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T16:49:19.635Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for johnson-ortho\\n[2023-04-29T16:49:19.635Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T16:49:19.635Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for rho-construction\\n[2023-04-29T16:49:19.635Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for computek\\n[2023-04-29T16:49:19.635Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T16:49:19.635Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T16:49:19.635Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for millenium-fitness\\n[2023-04-29T16:49:19.635Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T16:49:19.635Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for silver-helix\\n[2023-04-29T16:49:19.635Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T16:49:19.635Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T16:49:19.635Z] Starting threads for summit-uni\\n[2023-04-29T16:49:19.635Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T16:49:19.635Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T16:49:19.635Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T16:49:19.635Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:19:19.641Z] ==============================\\n[2023-04-29T17:19:19.641Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T17:19:19.641Z] ==============================\\n[2023-04-29T17:19:19.641Z] Starting threads for n00dles\\n[2023-04-29T17:19:19.641Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T17:19:19.642Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for foodnstuff\\n[2023-04-29T17:19:19.642Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T17:19:19.642Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:19:19.642Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T17:19:19.642Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for joesguns\\n[2023-04-29T17:19:19.642Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for nectar-net\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for max-hardware\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for neo-net\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for zer0\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for iron-gym\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for phantasy\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for omega-net\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for crush-fitness\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for the-hub\\n[2023-04-29T17:19:19.642Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for rothman-uni\\n[2023-04-29T17:19:19.642Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T17:19:19.642Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for johnson-ortho\\n[2023-04-29T17:19:19.642Z] Server netlink does not have capacity for all threads. Starting 22.Threads left: 8\\n[2023-04-29T17:19:19.642Z] Server rothman-uni has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for rho-construction\\n[2023-04-29T17:19:19.642Z] Server rothman-uni has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for computek\\n[2023-04-29T17:19:19.642Z] Server rothman-uni does not have capacity for all threads. Starting 15.Threads left: 15\\n[2023-04-29T17:19:19.642Z] Server catalyst does not have capacity for all threads. Starting 13.Threads left: 2\\n[2023-04-29T17:19:19.642Z] Server rho-construction has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for millenium-fitness\\n[2023-04-29T17:19:19.642Z] Server rho-construction does not have capacity for all threads. Starting 11.Threads left: 19\\n[2023-04-29T17:19:19.642Z] Server alpha-ent has capacity for all threads. Starting 19.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for silver-helix\\n[2023-04-29T17:19:19.642Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-29T17:19:19.642Z] Server aevum-police has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T17:19:19.642Z] Starting threads for summit-uni\\n[2023-04-29T17:19:19.642Z] Server aevum-police does not have capacity for all threads. Starting 23.Threads left: 7\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 11 - aerocorp\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 12 - galactic-cyber\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 13 - deltaone\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 14 - defcomm\\n[2023-04-29T17:19:19.642Z] Server univ-energy does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T17:19:19.642Z] No more threads possible on server 16 - infocomm\\n[2023-04-29T17:19:19.642Z] Server titan-labs has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] ==============================\\n[2023-04-29T17:49:19.643Z] Starting to hack 22 servers with a max of 85 threads each\\n[2023-04-29T17:49:19.643Z] ==============================\\n[2023-04-29T17:49:19.643Z] Starting threads for n00dles\\n[2023-04-29T17:49:19.643Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T17:49:19.643Z] Server zer0 has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] Starting threads for foodnstuff\\n[2023-04-29T17:49:19.643Z] Server zer0 does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T17:49:19.643Z] Server nectar-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] Starting threads for sigma-cosmetics\\n[2023-04-29T17:49:19.643Z] Server nectar-net does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T17:49:19.643Z] Server neo-net has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T17:49:19.643Z] Starting threads for joesguns\\n[2023-04-29T17:49:19.643Z] Server neo-net does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-29T17:49:19.643Z] Server silver-helix has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for hong-fang-tea\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for harakiri-sushi\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for nectar-net\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for max-hardware\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for neo-net\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for zer0\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for iron-gym\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for phantasy\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for omega-net\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for crush-fitness\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for the-hub\\n[2023-04-29T17:49:19.644Z] Server silver-helix has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for rothman-uni\\n[2023-04-29T17:49:19.644Z] Server silver-helix does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T17:49:19.644Z] Server netlink has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for johnson-ortho\\n[2023-04-29T17:49:19.644Z] Server netlink has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for rho-construction\\n[2023-04-29T17:49:19.644Z] Server netlink does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-29T17:49:19.644Z] Server rothman-uni has capacity for all threads. Starting 28.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for computek\\n[2023-04-29T17:49:19.644Z] Server rothman-uni does not have capacity for all threads. Starting 25.Threads left: 5\\n[2023-04-29T17:49:19.644Z] Server catalyst has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for millenium-fitness\\n[2023-04-29T17:49:19.644Z] Server catalyst does not have capacity for all threads. Starting 8.Threads left: 22\\n[2023-04-29T17:49:19.644Z] Server rho-construction does not have capacity for all threads. Starting 13.Threads left: 9\\n[2023-04-29T17:49:19.644Z] Server alpha-ent has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for silver-helix\\n[2023-04-29T17:49:19.644Z] Server alpha-ent has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T17:49:19.644Z] Starting threads for summit-uni\\n[2023-04-29T17:49:19.644Z] Server alpha-ent does not have capacity for all threads. Starting 7.Threads left: 23\\n[2023-04-29T17:49:19.644Z] Server aevum-police has capacity for all threads. Starting 23.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] ==============================\\n[2023-04-29T18:42:43.451Z] Starting to hack 6 servers with a max of 134 threads each\\n[2023-04-29T18:42:43.451Z] ==============================\\n[2023-04-29T18:42:43.451Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:42:43.451Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for n00dles\\n[2023-04-29T18:42:43.451Z] Server zer0 does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T18:42:43.451Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T18:42:43.451Z] Server neo-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for foodnstuff\\n[2023-04-29T18:42:43.451Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:42:43.451Z] Server neo-net does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T18:42:43.451Z] Server netlink has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for joesguns\\n[2023-04-29T18:42:43.451Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:42:43.451Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:42:43.451Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] ==============================\\n[2023-04-29T18:55:06.017Z] Starting to hack 8 servers with a max of 100 threads each\\n[2023-04-29T18:55:06.017Z] ==============================\\n[2023-04-29T18:55:06.017Z] Starting threads for harakiri-sushi\\n[2023-04-29T18:55:06.017Z] Server zer0 has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for n00dles\\n[2023-04-29T18:55:06.017Z] Server zer0 does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T18:55:06.017Z] Server nectar-net does not have capacity for all threads. Starting 6.Threads left: 1\\n[2023-04-29T18:55:06.017Z] Server neo-net has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for foodnstuff\\n[2023-04-29T18:55:06.017Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for sigma-cosmetics\\n[2023-04-29T18:55:06.017Z] Server neo-net does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for joesguns\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for hong-fang-tea\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for nectar-net\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T18:55:06.017Z] Starting threads for neo-net\\n[2023-04-29T18:55:06.017Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.378Z] ==============================\\n[2023-04-29T19:06:58.378Z] Starting to hack 11 servers with a max of 72 threads each\\n[2023-04-29T19:06:58.378Z] ==============================\\n[2023-04-29T19:06:58.378Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:06:58.378Z] Server neo-net has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.390Z] Starting threads for n00dles\\n[2023-04-29T19:06:58.390Z] Server neo-net does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T19:06:58.402Z] Server netlink has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T19:06:58.414Z] Starting threads for foodnstuff\\n[2023-04-29T19:06:58.414Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.429Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:06:58.429Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.440Z] Starting threads for joesguns\\n[2023-04-29T19:06:58.440Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.451Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:06:58.451Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.465Z] Starting threads for nectar-net\\n[2023-04-29T19:06:58.465Z] Server netlink does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-29T19:06:58.476Z] No more threads possible on server 2 - johnson-ortho\\n[2023-04-29T19:06:58.476Z] Server silver-helix has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-29T19:06:58.488Z] Starting threads for neo-net\\n[2023-04-29T19:06:58.488Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.502Z] Starting threads for phantasy\\n[2023-04-29T19:06:58.502Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:06:58.513Z] Starting threads for max-hardware\\n[2023-04-29T19:06:58.513Z] Server silver-helix does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T19:06:58.525Z] Server phantasy has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-29T19:06:58.539Z] Starting threads for zer0\\n[2023-04-29T19:06:58.539Z] Server phantasy does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-29T19:06:58.551Z] Server the-hub has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] ==============================\\n[2023-04-29T19:10:44.417Z] Starting to hack 11 servers with a max of 73 threads each\\n[2023-04-29T19:10:44.417Z] ==============================\\n[2023-04-29T19:10:44.417Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for n00dles\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for foodnstuff\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for joesguns\\n[2023-04-29T19:10:44.417Z] Server netlink has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:10:44.417Z] Server netlink does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 1 - johnson-ortho\\n[2023-04-29T19:10:44.417Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for nectar-net\\n[2023-04-29T19:10:44.417Z] Server silver-helix has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for neo-net\\n[2023-04-29T19:10:44.417Z] Server silver-helix does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-29T19:10:44.417Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for phantasy\\n[2023-04-29T19:10:44.417Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for max-hardware\\n[2023-04-29T19:10:44.417Z] Server phantasy does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-29T19:10:44.417Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 5 - syscore\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 6 - computek\\n[2023-04-29T19:10:44.417Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T19:10:44.417Z] Server avmnite-02h has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-29T19:10:44.417Z] Starting threads for zer0\\n[2023-04-29T19:10:44.417Z] Server avmnite-02h has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] ==============================\\n[2023-04-29T19:40:44.433Z] Starting to hack 12 servers with a max of 136 threads each\\n[2023-04-29T19:40:44.433Z] ==============================\\n[2023-04-29T19:40:44.433Z] Starting threads for harakiri-sushi\\n[2023-04-29T19:40:44.433Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for n00dles\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for foodnstuff\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for sigma-cosmetics\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for joesguns\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for hong-fang-tea\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for nectar-net\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for neo-net\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for phantasy\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for max-hardware\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for zer0\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T19:40:44.433Z] Starting threads for iron-gym\\n[2023-04-29T19:40:44.433Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] ==============================\\n[2023-04-29T20:10:44.440Z] Starting to hack 16 servers with a max of 102 threads each\\n[2023-04-29T20:10:44.440Z] ==============================\\n[2023-04-29T20:10:44.440Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:10:44.440Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for n00dles\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for foodnstuff\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for joesguns\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for nectar-net\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for neo-net\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for phantasy\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for max-hardware\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for zer0\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for iron-gym\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for silver-helix\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.440Z] Starting threads for omega-net\\n[2023-04-29T20:10:44.440Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.441Z] Starting threads for the-hub\\n[2023-04-29T20:10:44.441Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:10:44.441Z] Starting threads for crush-fitness\\n[2023-04-29T20:10:44.441Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] ==============================\\n[2023-04-29T20:40:44.448Z] Starting to hack 17 servers with a max of 96 threads each\\n[2023-04-29T20:40:44.448Z] ==============================\\n[2023-04-29T20:40:44.448Z] Starting threads for harakiri-sushi\\n[2023-04-29T20:40:44.448Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for n00dles\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for foodnstuff\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for sigma-cosmetics\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for joesguns\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for hong-fang-tea\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for nectar-net\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for neo-net\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for phantasy\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for max-hardware\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for zer0\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for iron-gym\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for silver-helix\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for omega-net\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for the-hub\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for crush-fitness\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T20:40:44.448Z] Starting threads for johnson-ortho\\n[2023-04-29T20:40:44.448Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] ==============================\\n[2023-04-29T21:10:44.455Z] Starting to hack 19 servers with a max of 86 threads each\\n[2023-04-29T21:10:44.455Z] ==============================\\n[2023-04-29T21:10:44.455Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:10:44.455Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T21:10:44.455Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] Starting threads for n00dles\\n[2023-04-29T21:10:44.455Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] Starting threads for foodnstuff\\n[2023-04-29T21:10:44.455Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.455Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for joesguns\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for nectar-net\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for neo-net\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for phantasy\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for max-hardware\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for zer0\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for iron-gym\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for silver-helix\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for omega-net\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for the-hub\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for crush-fitness\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for johnson-ortho\\n[2023-04-29T21:10:44.456Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for rothman-uni\\n[2023-04-29T21:10:44.456Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T21:10:44.456Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T21:10:44.456Z] Starting threads for computek\\n[2023-04-29T21:10:44.456Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T21:10:44.456Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] ==============================\\n[2023-04-29T21:40:44.464Z] Starting to hack 20 servers with a max of 81 threads each\\n[2023-04-29T21:40:44.464Z] ==============================\\n[2023-04-29T21:40:44.464Z] Starting threads for harakiri-sushi\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for n00dles\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for foodnstuff\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for sigma-cosmetics\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for joesguns\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for hong-fang-tea\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for nectar-net\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for neo-net\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for phantasy\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for max-hardware\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for zer0\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for iron-gym\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for silver-helix\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for omega-net\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for the-hub\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for crush-fitness\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for johnson-ortho\\n[2023-04-29T21:40:44.464Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for rothman-uni\\n[2023-04-29T21:40:44.464Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T21:40:44.464Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for computek\\n[2023-04-29T21:40:44.464Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T21:40:44.464Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T21:40:44.464Z] Starting threads for rho-construction\\n[2023-04-29T21:40:44.464Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T21:40:44.464Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 5 - syscore\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 6 - computek\\n[2023-04-29T21:40:44.464Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T21:40:44.464Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] ==============================\\n[2023-04-29T22:10:44.471Z] Starting to hack 20 servers with a max of 81 threads each\\n[2023-04-29T22:10:44.471Z] ==============================\\n[2023-04-29T22:10:44.471Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:10:44.471Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for n00dles\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for foodnstuff\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.471Z] Starting threads for joesguns\\n[2023-04-29T22:10:44.471Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for nectar-net\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for neo-net\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for phantasy\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for max-hardware\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for zer0\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for iron-gym\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for silver-helix\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for omega-net\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for the-hub\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for crush-fitness\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for johnson-ortho\\n[2023-04-29T22:10:44.472Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for rothman-uni\\n[2023-04-29T22:10:44.472Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T22:10:44.472Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for computek\\n[2023-04-29T22:10:44.472Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T22:10:44.472Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T22:10:44.472Z] Starting threads for rho-construction\\n[2023-04-29T22:10:44.472Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T22:10:44.472Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T22:10:44.472Z] No more threads possible on server 5 - syscore\\n[2023-04-29T22:10:44.472Z] No more threads possible on server 6 - computek\\n[2023-04-29T22:10:44.472Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T22:10:44.472Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] ==============================\\n[2023-04-29T22:40:44.477Z] Starting to hack 21 servers with a max of 78 threads each\\n[2023-04-29T22:40:44.477Z] ==============================\\n[2023-04-29T22:40:44.477Z] Starting threads for harakiri-sushi\\n[2023-04-29T22:40:44.477Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for n00dles\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for foodnstuff\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for sigma-cosmetics\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for joesguns\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for hong-fang-tea\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for nectar-net\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for neo-net\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for phantasy\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for max-hardware\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for zer0\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for iron-gym\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.477Z] Starting threads for silver-helix\\n[2023-04-29T22:40:44.477Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for omega-net\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for the-hub\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for crush-fitness\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for johnson-ortho\\n[2023-04-29T22:40:44.478Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for rothman-uni\\n[2023-04-29T22:40:44.478Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T22:40:44.478Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for computek\\n[2023-04-29T22:40:44.478Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T22:40:44.478Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for rho-construction\\n[2023-04-29T22:40:44.478Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T22:40:44.478Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T22:40:44.478Z] No more threads possible on server 5 - syscore\\n[2023-04-29T22:40:44.478Z] No more threads possible on server 6 - computek\\n[2023-04-29T22:40:44.478Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T22:40:44.478Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T22:40:44.478Z] Starting threads for alpha-ent\\n[2023-04-29T22:40:44.478Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-29T22:40:44.478Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-29T22:40:44.478Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T23:10:44.486Z] ==============================\\n[2023-04-29T23:10:44.486Z] Starting to hack 22 servers with a max of 74 threads each\\n[2023-04-29T23:10:44.486Z] ==============================\\n[2023-04-29T23:10:44.486Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:10:44.486Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T23:10:44.486Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.486Z] Starting threads for n00dles\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for foodnstuff\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for joesguns\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for nectar-net\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for neo-net\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for phantasy\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for max-hardware\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for zer0\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for iron-gym\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for silver-helix\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for omega-net\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for the-hub\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for crush-fitness\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for johnson-ortho\\n[2023-04-29T23:10:44.487Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for rothman-uni\\n[2023-04-29T23:10:44.487Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T23:10:44.487Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for computek\\n[2023-04-29T23:10:44.487Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T23:10:44.487Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for rho-construction\\n[2023-04-29T23:10:44.487Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T23:10:44.487Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T23:10:44.487Z] No more threads possible on server 5 - syscore\\n[2023-04-29T23:10:44.487Z] No more threads possible on server 6 - computek\\n[2023-04-29T23:10:44.487Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T23:10:44.487Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for alpha-ent\\n[2023-04-29T23:10:44.487Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-29T23:10:44.487Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-29T23:10:44.487Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T23:10:44.487Z] Starting threads for millenium-fitness\\n[2023-04-29T23:10:44.487Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-29T23:10:44.487Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T23:40:44.495Z] ==============================\\n[2023-04-29T23:40:44.495Z] Starting to hack 23 servers with a max of 71 threads each\\n[2023-04-29T23:40:44.495Z] ==============================\\n[2023-04-29T23:40:44.495Z] Starting threads for harakiri-sushi\\n[2023-04-29T23:40:44.495Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-29T23:40:44.495Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for n00dles\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for foodnstuff\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for sigma-cosmetics\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for joesguns\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for hong-fang-tea\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for nectar-net\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for neo-net\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for phantasy\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for max-hardware\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for zer0\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for iron-gym\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for silver-helix\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for omega-net\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for the-hub\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for crush-fitness\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for johnson-ortho\\n[2023-04-29T23:40:44.496Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for rothman-uni\\n[2023-04-29T23:40:44.496Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-29T23:40:44.496Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for computek\\n[2023-04-29T23:40:44.496Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-29T23:40:44.496Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for rho-construction\\n[2023-04-29T23:40:44.496Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-29T23:40:44.496Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-29T23:40:44.496Z] No more threads possible on server 5 - syscore\\n[2023-04-29T23:40:44.496Z] No more threads possible on server 6 - computek\\n[2023-04-29T23:40:44.496Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-29T23:40:44.496Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for alpha-ent\\n[2023-04-29T23:40:44.496Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-29T23:40:44.496Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-29T23:40:44.496Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for millenium-fitness\\n[2023-04-29T23:40:44.496Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-29T23:40:44.496Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-29T23:40:44.496Z] Starting threads for summit-uni\\n[2023-04-29T23:40:44.496Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-29T23:40:44.496Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] ==============================\\n[2023-04-30T00:10:44.515Z] Starting to hack 24 servers with a max of 68 threads each\\n[2023-04-30T00:10:44.515Z] ==============================\\n[2023-04-30T00:10:44.515Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for n00dles\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for foodnstuff\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for joesguns\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for nectar-net\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for neo-net\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for phantasy\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for max-hardware\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for zer0\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for iron-gym\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for silver-helix\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for omega-net\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for the-hub\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for crush-fitness\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for johnson-ortho\\n[2023-04-30T00:10:44.515Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for rothman-uni\\n[2023-04-30T00:10:44.515Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T00:10:44.515Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for computek\\n[2023-04-30T00:10:44.515Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T00:10:44.515Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for rho-construction\\n[2023-04-30T00:10:44.515Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T00:10:44.515Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 5 - syscore\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 6 - computek\\n[2023-04-30T00:10:44.515Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T00:10:44.515Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for alpha-ent\\n[2023-04-30T00:10:44.515Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T00:10:44.515Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T00:10:44.515Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for millenium-fitness\\n[2023-04-30T00:10:44.515Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T00:10:44.515Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for summit-uni\\n[2023-04-30T00:10:44.515Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T00:10:44.515Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T00:10:44.515Z] Starting threads for snap-fitness\\n[2023-04-30T00:10:44.515Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T00:10:44.516Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T00:10:44.516Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T00:10:44.516Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] ==============================\\n[2023-04-30T00:40:44.526Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T00:40:44.526Z] ==============================\\n[2023-04-30T00:40:44.526Z] Starting threads for harakiri-sushi\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for n00dles\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for foodnstuff\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for sigma-cosmetics\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for joesguns\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for hong-fang-tea\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for nectar-net\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for neo-net\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for phantasy\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for max-hardware\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for zer0\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for iron-gym\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for silver-helix\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for omega-net\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for the-hub\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for crush-fitness\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for johnson-ortho\\n[2023-04-30T00:40:44.526Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for rothman-uni\\n[2023-04-30T00:40:44.526Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T00:40:44.526Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for computek\\n[2023-04-30T00:40:44.526Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T00:40:44.526Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for rho-construction\\n[2023-04-30T00:40:44.526Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T00:40:44.526Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 5 - syscore\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 6 - computek\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T00:40:44.526Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for alpha-ent\\n[2023-04-30T00:40:44.526Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T00:40:44.526Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T00:40:44.526Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for millenium-fitness\\n[2023-04-30T00:40:44.526Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T00:40:44.526Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for summit-uni\\n[2023-04-30T00:40:44.526Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T00:40:44.526Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for snap-fitness\\n[2023-04-30T00:40:44.526Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T00:40:44.526Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T00:40:44.526Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T00:40:44.526Z] Starting threads for catalyst\\n[2023-04-30T00:40:44.526Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T00:40:44.526Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T00:40:44.526Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] ==============================\\n[2023-04-30T01:10:44.534Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T01:10:44.534Z] ==============================\\n[2023-04-30T01:10:44.534Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for n00dles\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for foodnstuff\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for joesguns\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for nectar-net\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for neo-net\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for phantasy\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for max-hardware\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for zer0\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for iron-gym\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for silver-helix\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for omega-net\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for the-hub\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for crush-fitness\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for johnson-ortho\\n[2023-04-30T01:10:44.534Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for rothman-uni\\n[2023-04-30T01:10:44.534Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T01:10:44.534Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for computek\\n[2023-04-30T01:10:44.534Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T01:10:44.534Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for rho-construction\\n[2023-04-30T01:10:44.534Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T01:10:44.534Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 5 - syscore\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 6 - computek\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T01:10:44.534Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for alpha-ent\\n[2023-04-30T01:10:44.534Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T01:10:44.534Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T01:10:44.534Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for millenium-fitness\\n[2023-04-30T01:10:44.534Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T01:10:44.534Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for summit-uni\\n[2023-04-30T01:10:44.534Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T01:10:44.534Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for snap-fitness\\n[2023-04-30T01:10:44.534Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T01:10:44.534Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T01:10:44.534Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T01:10:44.534Z] Starting threads for catalyst\\n[2023-04-30T01:10:44.534Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T01:10:44.534Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T01:10:44.535Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] ==============================\\n[2023-04-30T01:40:44.540Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T01:40:44.540Z] ==============================\\n[2023-04-30T01:40:44.540Z] Starting threads for harakiri-sushi\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for n00dles\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for foodnstuff\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for sigma-cosmetics\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for joesguns\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for hong-fang-tea\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for nectar-net\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for neo-net\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for phantasy\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for max-hardware\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for zer0\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for iron-gym\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for silver-helix\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for omega-net\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for the-hub\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for crush-fitness\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for johnson-ortho\\n[2023-04-30T01:40:44.540Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for rothman-uni\\n[2023-04-30T01:40:44.540Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T01:40:44.540Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for computek\\n[2023-04-30T01:40:44.540Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T01:40:44.540Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for rho-construction\\n[2023-04-30T01:40:44.540Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T01:40:44.540Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 5 - syscore\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 6 - computek\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T01:40:44.540Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for alpha-ent\\n[2023-04-30T01:40:44.540Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T01:40:44.540Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T01:40:44.540Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for millenium-fitness\\n[2023-04-30T01:40:44.540Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T01:40:44.540Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for summit-uni\\n[2023-04-30T01:40:44.540Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T01:40:44.540Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for snap-fitness\\n[2023-04-30T01:40:44.540Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T01:40:44.540Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T01:40:44.540Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T01:40:44.540Z] Starting threads for catalyst\\n[2023-04-30T01:40:44.540Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T01:40:44.540Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T01:40:44.540Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T02:10:44.546Z] ==============================\\n[2023-04-30T02:10:44.547Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T02:10:44.547Z] ==============================\\n[2023-04-30T02:10:44.547Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for n00dles\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for foodnstuff\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for joesguns\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for nectar-net\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for neo-net\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for phantasy\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for max-hardware\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for zer0\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for iron-gym\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for silver-helix\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for omega-net\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for the-hub\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for crush-fitness\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for johnson-ortho\\n[2023-04-30T02:10:44.547Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for rothman-uni\\n[2023-04-30T02:10:44.547Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T02:10:44.547Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for computek\\n[2023-04-30T02:10:44.547Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T02:10:44.547Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for rho-construction\\n[2023-04-30T02:10:44.547Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T02:10:44.547Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 5 - syscore\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 6 - computek\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T02:10:44.547Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for alpha-ent\\n[2023-04-30T02:10:44.547Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T02:10:44.547Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T02:10:44.547Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for millenium-fitness\\n[2023-04-30T02:10:44.547Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T02:10:44.547Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for summit-uni\\n[2023-04-30T02:10:44.547Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T02:10:44.547Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for snap-fitness\\n[2023-04-30T02:10:44.547Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T02:10:44.547Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T02:10:44.547Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T02:10:44.547Z] Starting threads for catalyst\\n[2023-04-30T02:10:44.547Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T02:10:44.547Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T02:10:44.547Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] ==============================\\n[2023-04-30T02:40:44.557Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T02:40:44.557Z] ==============================\\n[2023-04-30T02:40:44.557Z] Starting threads for harakiri-sushi\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for n00dles\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for foodnstuff\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for sigma-cosmetics\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for joesguns\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for hong-fang-tea\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for nectar-net\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for neo-net\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for phantasy\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for max-hardware\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for zer0\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for iron-gym\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for silver-helix\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for omega-net\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for the-hub\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for crush-fitness\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for johnson-ortho\\n[2023-04-30T02:40:44.557Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for rothman-uni\\n[2023-04-30T02:40:44.557Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T02:40:44.557Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for computek\\n[2023-04-30T02:40:44.557Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T02:40:44.557Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for rho-construction\\n[2023-04-30T02:40:44.557Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T02:40:44.557Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 5 - syscore\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 6 - computek\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T02:40:44.557Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for alpha-ent\\n[2023-04-30T02:40:44.557Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T02:40:44.557Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T02:40:44.557Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for millenium-fitness\\n[2023-04-30T02:40:44.557Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T02:40:44.557Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for summit-uni\\n[2023-04-30T02:40:44.557Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T02:40:44.557Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for snap-fitness\\n[2023-04-30T02:40:44.557Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T02:40:44.557Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T02:40:44.557Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T02:40:44.557Z] Starting threads for catalyst\\n[2023-04-30T02:40:44.557Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T02:40:44.557Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T02:40:44.557Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] ==============================\\n[2023-04-30T03:10:44.567Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T03:10:44.567Z] ==============================\\n[2023-04-30T03:10:44.567Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:10:44.567Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for n00dles\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for foodnstuff\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for joesguns\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for nectar-net\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for neo-net\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for phantasy\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for max-hardware\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for zer0\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for iron-gym\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for silver-helix\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for omega-net\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for the-hub\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for crush-fitness\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for johnson-ortho\\n[2023-04-30T03:10:44.567Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for rothman-uni\\n[2023-04-30T03:10:44.567Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T03:10:44.567Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for computek\\n[2023-04-30T03:10:44.567Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T03:10:44.567Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T03:10:44.567Z] Starting threads for rho-construction\\n[2023-04-30T03:10:44.567Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T03:10:44.567Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T03:10:44.567Z] No more threads possible on server 5 - syscore\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 6 - computek\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T03:10:44.568Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for alpha-ent\\n[2023-04-30T03:10:44.568Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T03:10:44.568Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T03:10:44.568Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for millenium-fitness\\n[2023-04-30T03:10:44.568Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T03:10:44.568Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for summit-uni\\n[2023-04-30T03:10:44.568Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T03:10:44.568Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for snap-fitness\\n[2023-04-30T03:10:44.568Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T03:10:44.568Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T03:10:44.568Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T03:10:44.568Z] Starting threads for catalyst\\n[2023-04-30T03:10:44.568Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 26\\n[2023-04-30T03:10:44.568Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T03:10:44.568Z] Server lexo-corp has capacity for all threads. Starting 26.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] ==============================\\n[2023-04-30T03:40:44.574Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T03:40:44.574Z] ==============================\\n[2023-04-30T03:40:44.574Z] Starting threads for harakiri-sushi\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for n00dles\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for foodnstuff\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for sigma-cosmetics\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for joesguns\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for hong-fang-tea\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for nectar-net\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for neo-net\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for phantasy\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for max-hardware\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for zer0\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for iron-gym\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for silver-helix\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for omega-net\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for the-hub\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for crush-fitness\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for johnson-ortho\\n[2023-04-30T03:40:44.574Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for rothman-uni\\n[2023-04-30T03:40:44.574Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T03:40:44.574Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for computek\\n[2023-04-30T03:40:44.574Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T03:40:44.574Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for rho-construction\\n[2023-04-30T03:40:44.574Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T03:40:44.574Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 5 - syscore\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 6 - computek\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T03:40:44.574Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for alpha-ent\\n[2023-04-30T03:40:44.574Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T03:40:44.574Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T03:40:44.574Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for millenium-fitness\\n[2023-04-30T03:40:44.574Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T03:40:44.574Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for summit-uni\\n[2023-04-30T03:40:44.574Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T03:40:44.574Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T03:40:44.574Z] Starting threads for snap-fitness\\n[2023-04-30T03:40:44.574Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T03:40:44.574Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T03:40:44.574Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T03:40:44.574Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T03:40:44.575Z] Starting threads for catalyst\\n[2023-04-30T03:40:44.575Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 16\\n[2023-04-30T03:40:44.575Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T03:40:44.575Z] Server lexo-corp has capacity for all threads. Starting 16.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] ==============================\\n[2023-04-30T04:10:44.580Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T04:10:44.580Z] ==============================\\n[2023-04-30T04:10:44.580Z] Starting threads for harakiri-sushi\\n[2023-04-30T04:10:44.580Z] No more threads possible on server 0 - johnson-ortho\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for n00dles\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for foodnstuff\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for sigma-cosmetics\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for joesguns\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for hong-fang-tea\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for nectar-net\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for neo-net\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for phantasy\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for max-hardware\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for zer0\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for iron-gym\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for silver-helix\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for omega-net\\n[2023-04-30T04:10:44.580Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.580Z] Starting threads for the-hub\\n[2023-04-30T04:10:44.581Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for crush-fitness\\n[2023-04-30T04:10:44.581Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for johnson-ortho\\n[2023-04-30T04:10:44.581Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for rothman-uni\\n[2023-04-30T04:10:44.581Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T04:10:44.581Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for computek\\n[2023-04-30T04:10:44.581Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T04:10:44.581Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for rho-construction\\n[2023-04-30T04:10:44.581Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T04:10:44.581Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 5 - syscore\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 6 - computek\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 7 - crush-fitness\\n[2023-04-30T04:10:44.581Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for alpha-ent\\n[2023-04-30T04:10:44.581Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T04:10:44.581Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T04:10:44.581Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for millenium-fitness\\n[2023-04-30T04:10:44.581Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 27\\n[2023-04-30T04:10:44.581Z] Server I.I.I.I has capacity for all threads. Starting 27.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for summit-uni\\n[2023-04-30T04:10:44.581Z] Server I.I.I.I does not have capacity for all threads. Starting 26.Threads left: 4\\n[2023-04-30T04:10:44.581Z] Server rho-construction has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for snap-fitness\\n[2023-04-30T04:10:44.581Z] Server rho-construction does not have capacity for all threads. Starting 2.Threads left: 28\\n[2023-04-30T04:10:44.581Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 22\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 14 - galactic-cyber\\n[2023-04-30T04:10:44.581Z] Server global-pharm has capacity for all threads. Starting 22.ThreadsLeft: 0\\n[2023-04-30T04:10:44.581Z] Starting threads for catalyst\\n[2023-04-30T04:10:44.581Z] Server global-pharm does not have capacity for all threads. Starting 4.Threads left: 16\\n[2023-04-30T04:10:44.581Z] No more threads possible on server 16 - deltaone\\n[2023-04-30T04:10:44.581Z] Server lexo-corp has capacity for all threads. Starting 16.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] ==============================\\n[2023-04-30T20:44:09.366Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T20:44:09.366Z] ==============================\\n[2023-04-30T20:44:09.366Z] Starting threads for harakiri-sushi\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for n00dles\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for foodnstuff\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for sigma-cosmetics\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for joesguns\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for hong-fang-tea\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for nectar-net\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for neo-net\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for phantasy\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for max-hardware\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for zer0\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for iron-gym\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for silver-helix\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for omega-net\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for the-hub\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for crush-fitness\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.366Z] Starting threads for johnson-ortho\\n[2023-04-30T20:44:09.366Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for rothman-uni\\n[2023-04-30T20:44:09.367Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for computek\\n[2023-04-30T20:44:09.367Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T20:44:09.367Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for rho-construction\\n[2023-04-30T20:44:09.367Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T20:44:09.367Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for alpha-ent\\n[2023-04-30T20:44:09.367Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 18\\n[2023-04-30T20:44:09.367Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 4 - syscore\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 5 - computek\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 6 - crush-fitness\\n[2023-04-30T20:44:09.367Z] Server avmnite-02h has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for millenium-fitness\\n[2023-04-30T20:44:09.367Z] Server avmnite-02h does not have capacity for all threads. Starting 1.Threads left: 29\\n[2023-04-30T20:44:09.367Z] Server summit-uni does not have capacity for all threads. Starting 26.Threads left: 3\\n[2023-04-30T20:44:09.367Z] Server catalyst has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for summit-uni\\n[2023-04-30T20:44:09.367Z] Server catalyst does not have capacity for all threads. Starting 3.Threads left: 17\\n[2023-04-30T20:44:09.367Z] Server I.I.I.I has capacity for all threads. Starting 17.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for snap-fitness\\n[2023-04-30T20:44:09.367Z] Server I.I.I.I has capacity for all threads. Starting 30.ThreadsLeft: 0\\n[2023-04-30T20:44:09.367Z] Starting threads for catalyst\\n[2023-04-30T20:44:09.367Z] Server I.I.I.I does not have capacity for all threads. Starting 6.Threads left: 24\\n[2023-04-30T20:44:09.367Z] Server rho-construction does not have capacity for all threads. Starting 6.Threads left: 18\\n[2023-04-30T20:44:09.367Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 12\\n[2023-04-30T20:44:09.367Z] No more threads possible on server 13 - galactic-cyber\\n[2023-04-30T20:44:09.367Z] Server global-pharm has capacity for all threads. Starting 12.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] ==============================\\n[2023-04-30T21:14:09.368Z] Starting to hack 25 servers with a max of 65 threads each\\n[2023-04-30T21:14:09.368Z] ==============================\\n[2023-04-30T21:14:09.368Z] Starting threads for harakiri-sushi\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for n00dles\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for foodnstuff\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for sigma-cosmetics\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for joesguns\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for hong-fang-tea\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for nectar-net\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for neo-net\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for phantasy\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for max-hardware\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for zer0\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for iron-gym\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for silver-helix\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for omega-net\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for the-hub\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for crush-fitness\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for johnson-ortho\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for rothman-uni\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for computek\\n[2023-04-30T21:14:09.368Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for rho-construction\\n[2023-04-30T21:14:09.368Z] Server zb-institute does not have capacity for all threads. Starting 13.Threads left: 7\\n[2023-04-30T21:14:09.368Z] Server silver-helix has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for alpha-ent\\n[2023-04-30T21:14:09.368Z] Server silver-helix does not have capacity for all threads. Starting 19.Threads left: 1\\n[2023-04-30T21:14:09.368Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for millenium-fitness\\n[2023-04-30T21:14:09.368Z] Server phantasy does not have capacity for all threads. Starting 12.Threads left: 8\\n[2023-04-30T21:14:09.368Z] Server the-hub does not have capacity for all threads. Starting 6.Threads left: 2\\n[2023-04-30T21:14:09.368Z] No more threads possible on server 4 - syscore\\n[2023-04-30T21:14:09.368Z] No more threads possible on server 5 - computek\\n[2023-04-30T21:14:09.368Z] No more threads possible on server 6 - crush-fitness\\n[2023-04-30T21:14:09.368Z] Server avmnite-02h has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for summit-uni\\n[2023-04-30T21:14:09.368Z] Server avmnite-02h does not have capacity for all threads. Starting 11.Threads left: 9\\n[2023-04-30T21:14:09.368Z] Server summit-uni has capacity for all threads. Starting 9.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for snap-fitness\\n[2023-04-30T21:14:09.368Z] Server summit-uni does not have capacity for all threads. Starting 17.Threads left: 13\\n[2023-04-30T21:14:09.368Z] Server catalyst does not have capacity for all threads. Starting 6.Threads left: 7\\n[2023-04-30T21:14:09.368Z] Server I.I.I.I has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T21:14:09.368Z] Starting threads for catalyst\\n[2023-04-30T21:14:09.368Z] Server I.I.I.I has capacity for all threads. Starting 20.ThreadsLeft: 0\\n[2023-04-30T22:05:51.384Z] ==============================\\n[2023-04-30T22:05:51.384Z] Starting to hack 7 servers with a max of 68 threads each\\n[2023-04-30T22:05:51.384Z] ==============================\\n[2023-04-30T22:05:51.384Z] Starting threads for foodnstuff\\n[2023-04-30T22:05:51.384Z] Server foodnstuff does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-30T22:05:51.384Z] Server CSEC does not have capacity for all threads. Starting 3.Threads left: 1\\n[2023-04-30T22:05:51.384Z] Server phantasy has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T22:05:51.384Z] Starting threads for phantasy\\n[2023-04-30T22:05:51.384Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:05:51.384Z] Starting threads for omega-net\\n[2023-04-30T22:05:51.384Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:05:51.384Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:05:51.384Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:05:51.384Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:05:51.384Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:05:51.384Z] Starting threads for zer0\\n[2023-04-30T22:05:51.384Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:05:51.384Z] Starting threads for n00dles\\n[2023-04-30T22:05:51.384Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] ==============================\\n[2023-04-30T22:08:49.039Z] Starting to hack 11 servers with a max of 43 threads each\\n[2023-04-30T22:08:49.039Z] ==============================\\n[2023-04-30T22:08:49.039Z] Starting threads for foodnstuff\\n[2023-04-30T22:08:49.039Z] Server CSEC does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-30T22:08:49.039Z] Server phantasy has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for phantasy\\n[2023-04-30T22:08:49.039Z] Server phantasy does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-30T22:08:49.039Z] Server omega-net has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for omega-net\\n[2023-04-30T22:08:49.039Z] Server omega-net does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-30T22:08:49.039Z] Server the-hub has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:08:49.039Z] Server the-hub has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:08:49.039Z] Server the-hub does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-30T22:08:49.039Z] Server I.I.I.I has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for zer0\\n[2023-04-30T22:08:49.039Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for n00dles\\n[2023-04-30T22:08:49.039Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for nectar-net\\n[2023-04-30T22:08:49.039Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for joesguns\\n[2023-04-30T22:08:49.039Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:08:49.039Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:08:49.039Z] Starting threads for max-hardware\\n[2023-04-30T22:08:49.039Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] ==============================\\n[2023-04-30T22:38:49.053Z] Starting to hack 17 servers with a max of 125 threads each\\n[2023-04-30T22:38:49.053Z] ==============================\\n[2023-04-30T22:38:49.053Z] Starting threads for foodnstuff\\n[2023-04-30T22:38:49.053Z] Server CSEC does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-30T22:38:49.053Z] Server phantasy has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for phantasy\\n[2023-04-30T22:38:49.053Z] Server phantasy does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-30T22:38:49.053Z] Server omega-net has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for omega-net\\n[2023-04-30T22:38:49.053Z] Server omega-net does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-30T22:38:49.053Z] Server the-hub has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for sigma-cosmetics\\n[2023-04-30T22:38:49.053Z] Server the-hub has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for harakiri-sushi\\n[2023-04-30T22:38:49.053Z] Server the-hub does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-30T22:38:49.053Z] Server zb-institute has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for zer0\\n[2023-04-30T22:38:49.053Z] Server zb-institute does not have capacity for all threads. Starting 5.Threads left: 5\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 5.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for n00dles\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for nectar-net\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for joesguns\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for hong-fang-tea\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for max-hardware\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for silver-helix\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for neo-net\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for iron-gym\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for crush-fitness\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.053Z] Starting threads for johnson-ortho\\n[2023-04-30T22:38:49.053Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T22:38:49.054Z] Starting threads for the-hub\\n[2023-04-30T22:38:49.054Z] Server I.I.I.I does not have capacity for all threads. Starting 1.Threads left: 9\\n[2023-04-30T22:38:49.054Z] Server aevum-police does not have capacity for all threads. Starting 6.Threads left: 3\\n[2023-04-30T22:38:49.054Z] No more threads possible on server 7 - aerocorp\\n[2023-04-30T22:38:49.054Z] Server omnia has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T23:08:50.597Z] ==============================\\n[2023-04-30T23:08:50.597Z] Starting to hack 20 servers with a max of 106 threads each\\n[2023-04-30T23:08:50.597Z] ==============================\\n[2023-04-30T23:08:50.598Z] Starting threads for foodnstuff\\n[2023-04-30T23:08:50.598Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.615Z] Starting threads for phantasy\\n[2023-04-30T23:08:50.615Z] Server phantasy does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-30T23:08:50.630Z] Server omega-net has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T23:08:50.646Z] Starting threads for omega-net\\n[2023-04-30T23:08:50.647Z] Server omega-net does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-30T23:08:50.662Z] Server the-hub has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T23:08:50.678Z] Starting threads for sigma-cosmetics\\n[2023-04-30T23:08:50.678Z] Server the-hub does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-30T23:08:50.693Z] Server zb-institute has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T23:08:50.711Z] Starting threads for harakiri-sushi\\n[2023-04-30T23:08:50.711Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.727Z] Starting threads for zer0\\n[2023-04-30T23:08:50.727Z] Server zb-institute does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-30T23:08:50.744Z] Server I.I.I.I has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-30T23:08:50.760Z] Starting threads for n00dles\\n[2023-04-30T23:08:50.760Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.777Z] Starting threads for nectar-net\\n[2023-04-30T23:08:50.777Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.793Z] Starting threads for joesguns\\n[2023-04-30T23:08:50.793Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.810Z] Starting threads for hong-fang-tea\\n[2023-04-30T23:08:50.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.826Z] Starting threads for max-hardware\\n[2023-04-30T23:08:50.826Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.843Z] Starting threads for silver-helix\\n[2023-04-30T23:08:50.843Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.859Z] Starting threads for neo-net\\n[2023-04-30T23:08:50.859Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.876Z] Starting threads for iron-gym\\n[2023-04-30T23:08:50.876Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.891Z] Starting threads for crush-fitness\\n[2023-04-30T23:08:50.891Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:08:50.908Z] Starting threads for johnson-ortho\\n[2023-04-30T23:08:50.908Z] Server I.I.I.I does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-30T23:08:50.924Z] Server aevum-police has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-30T23:08:50.942Z] Starting threads for the-hub\\n[2023-04-30T23:08:50.942Z] Server aevum-police does not have capacity for all threads. Starting 4.Threads left: 6\\n[2023-04-30T23:08:50.958Z] No more threads possible on server 6 - aerocorp\\n[2023-04-30T23:08:50.958Z] Server omnia has capacity for all threads. Starting 6.ThreadsLeft: 0\\n[2023-04-30T23:08:50.976Z] Starting threads for rothman-uni\\n[2023-04-30T23:08:50.976Z] Server omnia does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-30T23:08:50.992Z] No more threads possible on server 8 - deltaone\\n[2023-04-30T23:08:50.992Z] Server unitalife has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T23:08:51.010Z] Starting threads for millenium-fitness\\n[2023-04-30T23:08:51.010Z] Server unitalife does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-30T23:08:51.026Z] Server solaris has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T23:08:51.045Z] Starting threads for rho-construction\\n[2023-04-30T23:08:51.045Z] Server solaris has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] ==============================\\n[2023-04-30T23:38:49.794Z] Starting to hack 21 servers with a max of 101 threads each\\n[2023-04-30T23:38:49.794Z] ==============================\\n[2023-04-30T23:38:49.794Z] Starting threads for foodnstuff\\n[2023-04-30T23:38:49.794Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for phantasy\\n[2023-04-30T23:38:49.794Z] Server phantasy does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-30T23:38:49.794Z] Server omega-net has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for omega-net\\n[2023-04-30T23:38:49.794Z] Server omega-net does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-04-30T23:38:49.794Z] Server the-hub has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for sigma-cosmetics\\n[2023-04-30T23:38:49.794Z] Server the-hub does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-30T23:38:49.794Z] Server zb-institute has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for harakiri-sushi\\n[2023-04-30T23:38:49.794Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for zer0\\n[2023-04-30T23:38:49.794Z] Server zb-institute does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for n00dles\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for nectar-net\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for joesguns\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for hong-fang-tea\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for max-hardware\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for silver-helix\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for neo-net\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for iron-gym\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for crush-fitness\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for johnson-ortho\\n[2023-04-30T23:38:49.794Z] Server I.I.I.I does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-04-30T23:38:49.794Z] Server aevum-police has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for the-hub\\n[2023-04-30T23:38:49.794Z] Server aevum-police does not have capacity for all threads. Starting 4.Threads left: 6\\n[2023-04-30T23:38:49.794Z] No more threads possible on server 6 - aerocorp\\n[2023-04-30T23:38:49.794Z] Server omnia has capacity for all threads. Starting 6.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for rothman-uni\\n[2023-04-30T23:38:49.794Z] Server omnia does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-04-30T23:38:49.794Z] No more threads possible on server 8 - deltaone\\n[2023-04-30T23:38:49.794Z] Server unitalife has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for millenium-fitness\\n[2023-04-30T23:38:49.794Z] Server unitalife does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-04-30T23:38:49.794Z] Server solaris has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-04-30T23:38:49.794Z] Starting threads for rho-construction\\n[2023-04-30T23:38:49.795Z] Server solaris has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-04-30T23:38:49.795Z] Starting threads for summit-uni\\n[2023-04-30T23:38:49.795Z] Server solaris does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-04-30T23:38:49.795Z] No more threads possible on server 11 - zeus-med\\n[2023-04-30T23:38:49.795Z] No more threads possible on server 12 - infocomm\\n[2023-04-30T23:38:49.795Z] No more threads possible on server 13 - applied-energetics\\n[2023-04-30T23:38:49.795Z] Server run4theh111z has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] ==============================\\n[2023-05-01T00:08:49.802Z] Starting to hack 22 servers with a max of 97 threads each\\n[2023-05-01T00:08:49.802Z] ==============================\\n[2023-05-01T00:08:49.802Z] Starting threads for foodnstuff\\n[2023-05-01T00:08:49.802Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for phantasy\\n[2023-05-01T00:08:49.802Z] Server phantasy does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-05-01T00:08:49.802Z] Server omega-net has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for omega-net\\n[2023-05-01T00:08:49.802Z] Server omega-net does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-05-01T00:08:49.802Z] Server the-hub has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for sigma-cosmetics\\n[2023-05-01T00:08:49.802Z] Server the-hub does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-05-01T00:08:49.802Z] Server zb-institute has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for harakiri-sushi\\n[2023-05-01T00:08:49.802Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for zer0\\n[2023-05-01T00:08:49.802Z] Server zb-institute does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-05-01T00:08:49.802Z] Server I.I.I.I has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for n00dles\\n[2023-05-01T00:08:49.802Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for nectar-net\\n[2023-05-01T00:08:49.802Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for joesguns\\n[2023-05-01T00:08:49.802Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for hong-fang-tea\\n[2023-05-01T00:08:49.802Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.802Z] Starting threads for max-hardware\\n[2023-05-01T00:08:49.802Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for silver-helix\\n[2023-05-01T00:08:49.803Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for neo-net\\n[2023-05-01T00:08:49.803Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for iron-gym\\n[2023-05-01T00:08:49.803Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for crush-fitness\\n[2023-05-01T00:08:49.803Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for johnson-ortho\\n[2023-05-01T00:08:49.803Z] Server I.I.I.I does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-05-01T00:08:49.803Z] Server aevum-police has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for the-hub\\n[2023-05-01T00:08:49.803Z] Server aevum-police does not have capacity for all threads. Starting 4.Threads left: 6\\n[2023-05-01T00:08:49.803Z] No more threads possible on server 6 - aerocorp\\n[2023-05-01T00:08:49.803Z] Server omnia has capacity for all threads. Starting 6.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for rothman-uni\\n[2023-05-01T00:08:49.803Z] Server omnia does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-05-01T00:08:49.803Z] No more threads possible on server 8 - deltaone\\n[2023-05-01T00:08:49.803Z] Server unitalife has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for millenium-fitness\\n[2023-05-01T00:08:49.803Z] Server unitalife does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-05-01T00:08:49.803Z] Server solaris has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for rho-construction\\n[2023-05-01T00:08:49.803Z] Server solaris has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for summit-uni\\n[2023-05-01T00:08:49.803Z] Server solaris does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-05-01T00:08:49.803Z] No more threads possible on server 11 - zeus-med\\n[2023-05-01T00:08:49.803Z] No more threads possible on server 12 - infocomm\\n[2023-05-01T00:08:49.803Z] No more threads possible on server 13 - applied-energetics\\n[2023-05-01T00:08:49.803Z] Server run4theh111z has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-05-01T00:08:49.803Z] Starting threads for snap-fitness\\n[2023-05-01T00:08:49.803Z] Server run4theh111z has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] ==============================\\n[2023-05-01T00:38:49.810Z] Starting to hack 22 servers with a max of 97 threads each\\n[2023-05-01T00:38:49.810Z] ==============================\\n[2023-05-01T00:38:49.810Z] Starting threads for foodnstuff\\n[2023-05-01T00:38:49.810Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for phantasy\\n[2023-05-01T00:38:49.810Z] Server phantasy does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-05-01T00:38:49.810Z] Server omega-net has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for omega-net\\n[2023-05-01T00:38:49.810Z] Server omega-net does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-05-01T00:38:49.810Z] Server the-hub has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for sigma-cosmetics\\n[2023-05-01T00:38:49.810Z] Server the-hub does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-05-01T00:38:49.810Z] Server zb-institute has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for harakiri-sushi\\n[2023-05-01T00:38:49.810Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for zer0\\n[2023-05-01T00:38:49.810Z] Server zb-institute does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for n00dles\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for nectar-net\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for joesguns\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for hong-fang-tea\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for max-hardware\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for silver-helix\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for neo-net\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.810Z] Starting threads for iron-gym\\n[2023-05-01T00:38:49.810Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for crush-fitness\\n[2023-05-01T00:38:49.811Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for johnson-ortho\\n[2023-05-01T00:38:49.811Z] Server I.I.I.I does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-05-01T00:38:49.811Z] Server aevum-police has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for the-hub\\n[2023-05-01T00:38:49.811Z] Server aevum-police does not have capacity for all threads. Starting 4.Threads left: 6\\n[2023-05-01T00:38:49.811Z] No more threads possible on server 6 - aerocorp\\n[2023-05-01T00:38:49.811Z] Server omnia has capacity for all threads. Starting 6.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for rothman-uni\\n[2023-05-01T00:38:49.811Z] Server omnia does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-05-01T00:38:49.811Z] No more threads possible on server 8 - deltaone\\n[2023-05-01T00:38:49.811Z] Server unitalife has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for millenium-fitness\\n[2023-05-01T00:38:49.811Z] Server unitalife does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-05-01T00:38:49.811Z] Server solaris has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for rho-construction\\n[2023-05-01T00:38:49.811Z] Server solaris has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for summit-uni\\n[2023-05-01T00:38:49.811Z] Server solaris does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-05-01T00:38:49.811Z] No more threads possible on server 11 - zeus-med\\n[2023-05-01T00:38:49.811Z] No more threads possible on server 12 - infocomm\\n[2023-05-01T00:38:49.811Z] No more threads possible on server 13 - applied-energetics\\n[2023-05-01T00:38:49.811Z] Server run4theh111z has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-05-01T00:38:49.811Z] Starting threads for snap-fitness\\n[2023-05-01T00:38:49.811Z] Server run4theh111z has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] ==============================\\n[2023-05-01T01:08:49.818Z] Starting to hack 22 servers with a max of 97 threads each\\n[2023-05-01T01:08:49.818Z] ==============================\\n[2023-05-01T01:08:49.818Z] Starting threads for foodnstuff\\n[2023-05-01T01:08:49.818Z] Server phantasy has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for phantasy\\n[2023-05-01T01:08:49.818Z] Server phantasy does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-05-01T01:08:49.818Z] Server omega-net has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for omega-net\\n[2023-05-01T01:08:49.818Z] Server omega-net does not have capacity for all threads. Starting 6.Threads left: 4\\n[2023-05-01T01:08:49.818Z] Server the-hub has capacity for all threads. Starting 4.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for sigma-cosmetics\\n[2023-05-01T01:08:49.818Z] Server the-hub does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-05-01T01:08:49.818Z] Server zb-institute has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for harakiri-sushi\\n[2023-05-01T01:08:49.818Z] Server zb-institute has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for zer0\\n[2023-05-01T01:08:49.818Z] Server zb-institute does not have capacity for all threads. Starting 2.Threads left: 8\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 8.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for n00dles\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for nectar-net\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for joesguns\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for hong-fang-tea\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for max-hardware\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for silver-helix\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for neo-net\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for iron-gym\\n[2023-05-01T01:08:49.818Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.818Z] Starting threads for crush-fitness\\n[2023-05-01T01:08:49.819Z] Server I.I.I.I has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.819Z] Starting threads for johnson-ortho\\n[2023-05-01T01:08:49.819Z] Server I.I.I.I does not have capacity for all threads. Starting 8.Threads left: 2\\n[2023-05-01T01:08:49.819Z] Server aevum-police has capacity for all threads. Starting 2.ThreadsLeft: 0\\n[2023-05-01T01:08:49.819Z] Starting threads for the-hub\\n[2023-05-01T01:08:49.819Z] Server aevum-police does not have capacity for all threads. Starting 4.Threads left: 6\\n[2023-05-01T01:08:49.819Z] No more threads possible on server 6 - aerocorp\\n[2023-05-01T01:08:49.819Z] Server omnia has capacity for all threads. Starting 6.ThreadsLeft: 0\\n[2023-05-01T01:08:49.819Z] Starting threads for rothman-uni\\n[2023-05-01T01:08:49.819Z] Server omnia does not have capacity for all threads. Starting 7.Threads left: 3\\n[2023-05-01T01:08:49.819Z] No more threads possible on server 8 - deltaone\\n[2023-05-01T01:08:49.819Z] Server unitalife has capacity for all threads. Starting 3.ThreadsLeft: 0\\n[2023-05-01T01:08:49.819Z] Starting threads for millenium-fitness\\n[2023-05-01T01:08:49.819Z] Server unitalife does not have capacity for all threads. Starting 3.Threads left: 7\\n[2023-05-01T01:08:49.819Z] Server solaris has capacity for all threads. Starting 7.ThreadsLeft: 0\\n[2023-05-01T01:08:49.819Z] Starting threads for rho-construction\\n[2023-05-01T01:08:49.819Z] Server solaris has capacity for all threads. Starting 10.ThreadsLeft: 0\\n[2023-05-01T01:08:49.819Z] Starting threads for summit-uni\\n[2023-05-01T01:08:49.819Z] Server solaris does not have capacity for all threads. Starting 9.Threads left: 1\\n[2023-05-01T01:08:49.819Z] No more threads possible on server 11 - zeus-med\\n[2023-05-01T01:08:49.819Z] No more threads possible on server 12 - infocomm\\n[2023-05-01T01:08:49.819Z] No more threads possible on server 13 - applied-energetics\\n[2023-05-01T01:08:49.819Z] Server run4theh111z has capacity for all threads. Starting 1.ThreadsLeft: 0\\n[2023-05-01T01:08:49.819Z] Starting threads for snap-fitness\\n[2023-05-01T01:08:49.819Z] Server run4theh111z has capacity for all threads. Starting 10.ThreadsLeft: 0\\n\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"foodnstuff\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"sigma-cosmetics\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"n00dles\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"crush-fitness\\\",\\\"johnson-ortho\\\",\\\"the-hub\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"rho-construction\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\"]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"/logs/stock.clean-target.log.txt\",\"text\":\"[2023-05-01T00:24:24.454Z] ========================\\n[2023-05-01T00:24:24.454Z] Weakening server foodnstuff\\n[2023-05-01T00:24:24.454Z] Progress: 6.596/6\\n[2023-05-01T00:24:24.454Z] ========================\\n[2023-05-01T00:24:27.357Z] ========================\\n[2023-05-01T00:24:27.357Z] Growing server foodnstuff\\n[2023-05-01T00:24:27.357Z] Progress: 33960985.256010726/45000000\\n[2023-05-01T00:24:27.357Z] ========================\\n[2023-05-01T00:24:30.369Z] =============== SUMMARY ===============\\n[2023-05-01T00:24:30.369Z] Initial ask price: 1774.2127323084792\\n[2023-05-01T00:24:30.369Z] Final ask price: 1776.7223912190507\\n[2023-05-01T00:24:30.369Z] Initial bid price: 1753.0491609489345\\n[2023-05-01T00:24:30.369Z] Final bid price: 1755.5288835703145\\n[2023-05-01T00:24:30.369Z] =======================================\\n[2023-05-01T00:24:31.370Z] ========================\\n[2023-05-01T00:24:31.370Z] Weakening server foodnstuff\\n[2023-05-01T00:24:31.370Z] Progress: 6.058/6\\n[2023-05-01T00:24:31.370Z] ========================\\n[2023-05-01T00:24:34.268Z] ========================\\n[2023-05-01T00:24:34.268Z] Growing server foodnstuff\\n[2023-05-01T00:24:34.268Z] Progress: 10.04446458100912/45000000\\n[2023-05-01T00:24:34.268Z] ========================\\n[2023-05-01T00:24:36.551Z] ========================\\n[2023-05-01T00:24:36.551Z] Weakening server foodnstuff\\n[2023-05-01T00:24:36.551Z] Progress: 15.04/6\\n[2023-05-01T00:24:36.551Z] ========================\\n[2023-05-01T00:24:39.575Z] ========================\\n[2023-05-01T00:24:39.575Z] Growing server foodnstuff\\n[2023-05-01T00:24:39.575Z] Progress: 14717.72023766496/45000000\\n[2023-05-01T00:24:39.575Z] ========================\\n[2023-05-01T00:24:41.857Z] ========================\\n[2023-05-01T00:24:41.857Z] Weakening server foodnstuff\\n[2023-05-01T00:24:41.857Z] Progress: 15/6\\n[2023-05-01T00:24:41.857Z] ========================\\n[2023-05-01T00:24:44.879Z] ========================\\n[2023-05-01T00:24:44.879Z] Growing server foodnstuff\\n[2023-05-01T00:24:44.879Z] Progress: 86293.81792962861/45000000\\n[2023-05-01T00:24:44.879Z] ========================\\n[2023-05-01T00:24:47.162Z] ========================\\n[2023-05-01T00:24:47.162Z] Weakening server foodnstuff\\n[2023-05-01T00:24:47.162Z] Progress: 15/6\\n[2023-05-01T00:24:47.162Z] ========================\\n[2023-05-01T00:24:50.184Z] ========================\\n[2023-05-01T00:24:50.184Z] Growing server foodnstuff\\n[2023-05-01T00:24:50.184Z] Progress: 434863.33366088796/45000000\\n[2023-05-01T00:24:50.184Z] ========================\\n[2023-05-01T00:24:52.468Z] ========================\\n[2023-05-01T00:24:52.468Z] Weakening server foodnstuff\\n[2023-05-01T00:24:52.468Z] Progress: 15/6\\n[2023-05-01T00:24:52.468Z] ========================\\n[2023-05-01T00:24:55.490Z] ========================\\n[2023-05-01T00:24:55.490Z] Growing server foodnstuff\\n[2023-05-01T00:24:55.490Z] Progress: 2132367.2660492887/45000000\\n[2023-05-01T00:24:55.490Z] ========================\\n[2023-05-01T00:24:57.774Z] ========================\\n[2023-05-01T00:24:57.774Z] Weakening server foodnstuff\\n[2023-05-01T00:24:57.774Z] Progress: 15/6\\n[2023-05-01T00:24:57.774Z] ========================\\n[2023-05-01T00:25:00.796Z] ========================\\n[2023-05-01T00:25:00.796Z] Growing server foodnstuff\\n[2023-05-01T00:25:00.796Z] Progress: 10399067.222380763/45000000\\n[2023-05-01T00:25:00.796Z] ========================\\n[2023-05-01T00:25:03.080Z] ========================\\n[2023-05-01T00:25:03.080Z] Weakening server foodnstuff\\n[2023-05-01T00:25:03.080Z] Progress: 14.924/6\\n[2023-05-01T00:25:03.080Z] ========================\\n[2023-05-01T00:25:06.816Z] =============== SUMMARY ===============\\n[2023-05-01T00:25:06.816Z] Initial ask price: 1789.1462302061718\\n[2023-05-01T00:25:06.816Z] Final ask price: 1789.762239292212\\n[2023-05-01T00:25:06.816Z] Initial bid price: 1767.8045256709092\\n[2023-05-01T00:25:06.816Z] Final bid price: 1768.4131867360422\\n[2023-05-01T00:25:06.816Z] =======================================\\n[2023-05-01T00:25:07.816Z] ========================\\n[2023-05-01T00:25:07.816Z] Growing server foodnstuff\\n[2023-05-01T00:25:07.816Z] Progress: 0/45000000\\n[2023-05-01T00:25:07.816Z] ========================\\n[2023-05-01T00:25:10.099Z] ========================\\n[2023-05-01T00:25:10.099Z] Weakening server foodnstuff\\n[2023-05-01T00:25:10.099Z] Progress: 15.04/6\\n[2023-05-01T00:25:10.099Z] ========================\\n[2023-05-01T00:25:13.123Z] ========================\\n[2023-05-01T00:25:13.123Z] Growing server foodnstuff\\n[2023-05-01T00:25:13.123Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:25:13.123Z] ========================\\n[2023-05-01T00:25:15.405Z] ========================\\n[2023-05-01T00:25:15.405Z] Weakening server foodnstuff\\n[2023-05-01T00:25:15.405Z] Progress: 15/6\\n[2023-05-01T00:25:15.405Z] ========================\\n[2023-05-01T00:25:18.426Z] ========================\\n[2023-05-01T00:25:18.426Z] Growing server foodnstuff\\n[2023-05-01T00:25:18.426Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:25:18.426Z] ========================\\n[2023-05-01T00:25:20.707Z] ========================\\n[2023-05-01T00:25:20.707Z] Weakening server foodnstuff\\n[2023-05-01T00:25:20.707Z] Progress: 15/6\\n[2023-05-01T00:25:20.707Z] ========================\\n[2023-05-01T00:25:23.728Z] ========================\\n[2023-05-01T00:25:23.728Z] Growing server foodnstuff\\n[2023-05-01T00:25:23.728Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:25:23.728Z] ========================\\n[2023-05-01T00:25:26.011Z] ========================\\n[2023-05-01T00:25:26.011Z] Weakening server foodnstuff\\n[2023-05-01T00:25:26.011Z] Progress: 15/6\\n[2023-05-01T00:25:26.011Z] ========================\\n[2023-05-01T00:25:29.032Z] ========================\\n[2023-05-01T00:25:29.032Z] Growing server foodnstuff\\n[2023-05-01T00:25:29.032Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:25:29.032Z] ========================\\n[2023-05-01T00:25:31.315Z] ========================\\n[2023-05-01T00:25:31.316Z] Weakening server foodnstuff\\n[2023-05-01T00:25:31.316Z] Progress: 15/6\\n[2023-05-01T00:25:31.316Z] ========================\\n[2023-05-01T00:25:34.336Z] ========================\\n[2023-05-01T00:25:34.336Z] Growing server foodnstuff\\n[2023-05-01T00:25:34.336Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:25:34.336Z] ========================\\n[2023-05-01T00:25:36.618Z] ========================\\n[2023-05-01T00:25:36.618Z] Weakening server foodnstuff\\n[2023-05-01T00:25:36.618Z] Progress: 14.944/6\\n[2023-05-01T00:25:36.618Z] ========================\\n[2023-05-01T00:25:40.352Z] =============== SUMMARY ===============\\n[2023-05-01T00:25:40.352Z] Initial ask price: 1786.1465217969212\\n[2023-05-01T00:25:40.352Z] Final ask price: 1787.2991958842395\\n[2023-05-01T00:25:40.352Z] Initial bid price: 1764.8405990717092\\n[2023-05-01T00:25:40.352Z] Final bid price: 1765.9795235675288\\n[2023-05-01T00:25:40.352Z] =======================================\\n[2023-05-01T00:25:41.353Z] ========================\\n[2023-05-01T00:25:41.353Z] Growing server foodnstuff\\n[2023-05-01T00:25:41.353Z] Progress: 0/45000000\\n[2023-05-01T00:25:41.353Z] ========================\\n[2023-05-01T00:25:43.634Z] ========================\\n[2023-05-01T00:25:43.634Z] Weakening server foodnstuff\\n[2023-05-01T00:25:43.634Z] Progress: 15.04/6\\n[2023-05-01T00:25:43.634Z] ========================\\n[2023-05-01T00:25:46.656Z] ========================\\n[2023-05-01T00:25:46.656Z] Growing server foodnstuff\\n[2023-05-01T00:25:46.656Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:25:46.656Z] ========================\\n[2023-05-01T00:25:48.939Z] ========================\\n[2023-05-01T00:25:48.939Z] Weakening server foodnstuff\\n[2023-05-01T00:25:48.939Z] Progress: 15/6\\n[2023-05-01T00:25:48.939Z] ========================\\n[2023-05-01T00:25:51.960Z] ========================\\n[2023-05-01T00:25:51.960Z] Growing server foodnstuff\\n[2023-05-01T00:25:51.960Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:25:51.960Z] ========================\\n[2023-05-01T00:25:54.242Z] ========================\\n[2023-05-01T00:25:54.242Z] Weakening server foodnstuff\\n[2023-05-01T00:25:54.242Z] Progress: 15/6\\n[2023-05-01T00:25:54.242Z] ========================\\n[2023-05-01T00:25:57.263Z] ========================\\n[2023-05-01T00:25:57.263Z] Growing server foodnstuff\\n[2023-05-01T00:25:57.263Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:25:57.263Z] ========================\\n[2023-05-01T00:25:59.544Z] ========================\\n[2023-05-01T00:25:59.544Z] Weakening server foodnstuff\\n[2023-05-01T00:25:59.544Z] Progress: 15/6\\n[2023-05-01T00:25:59.544Z] ========================\\n[2023-05-01T00:26:02.566Z] ========================\\n[2023-05-01T00:26:02.566Z] Growing server foodnstuff\\n[2023-05-01T00:26:02.566Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:26:02.566Z] ========================\\n[2023-05-01T00:26:04.848Z] ========================\\n[2023-05-01T00:26:04.848Z] Weakening server foodnstuff\\n[2023-05-01T00:26:04.848Z] Progress: 15/6\\n[2023-05-01T00:26:04.848Z] ========================\\n[2023-05-01T00:26:07.868Z] ========================\\n[2023-05-01T00:26:07.868Z] Growing server foodnstuff\\n[2023-05-01T00:26:07.868Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:26:07.868Z] ========================\\n[2023-05-01T00:26:10.150Z] ========================\\n[2023-05-01T00:26:10.150Z] Weakening server foodnstuff\\n[2023-05-01T00:26:10.150Z] Progress: 14.944/6\\n[2023-05-01T00:26:10.150Z] ========================\\n[2023-05-01T00:26:13.884Z] =============== SUMMARY ===============\\n[2023-05-01T00:26:13.884Z] Initial ask price: 1787.2991958842395\\n[2023-05-01T00:26:13.884Z] Final ask price: 1800.1580913928103\\n[2023-05-01T00:26:13.884Z] Initial bid price: 1765.9795235675288\\n[2023-05-01T00:26:13.884Z] Final bid price: 1778.6850326485621\\n[2023-05-01T00:26:13.884Z] =======================================\\n[2023-05-01T00:26:14.886Z] ========================\\n[2023-05-01T00:26:14.886Z] Growing server foodnstuff\\n[2023-05-01T00:26:14.886Z] Progress: 0/45000000\\n[2023-05-01T00:26:14.886Z] ========================\\n[2023-05-01T00:26:17.169Z] ========================\\n[2023-05-01T00:26:17.169Z] Weakening server foodnstuff\\n[2023-05-01T00:26:17.169Z] Progress: 15/6\\n[2023-05-01T00:26:17.169Z] ========================\\n[2023-05-01T00:26:20.189Z] ========================\\n[2023-05-01T00:26:20.189Z] Growing server foodnstuff\\n[2023-05-01T00:26:20.189Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:26:20.189Z] ========================\\n[2023-05-01T00:26:22.472Z] ========================\\n[2023-05-01T00:26:22.472Z] Weakening server foodnstuff\\n[2023-05-01T00:26:22.472Z] Progress: 15/6\\n[2023-05-01T00:26:22.472Z] ========================\\n[2023-05-01T00:26:25.493Z] ========================\\n[2023-05-01T00:26:25.493Z] Growing server foodnstuff\\n[2023-05-01T00:26:25.493Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:26:25.493Z] ========================\\n[2023-05-01T00:26:27.775Z] ========================\\n[2023-05-01T00:26:27.775Z] Weakening server foodnstuff\\n[2023-05-01T00:26:27.775Z] Progress: 15/6\\n[2023-05-01T00:26:27.775Z] ========================\\n[2023-05-01T00:26:30.796Z] ========================\\n[2023-05-01T00:26:30.796Z] Growing server foodnstuff\\n[2023-05-01T00:26:30.796Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:26:30.796Z] ========================\\n[2023-05-01T00:26:33.079Z] ========================\\n[2023-05-01T00:26:33.079Z] Weakening server foodnstuff\\n[2023-05-01T00:26:33.079Z] Progress: 15/6\\n[2023-05-01T00:26:33.079Z] ========================\\n[2023-05-01T00:26:36.101Z] ========================\\n[2023-05-01T00:26:36.101Z] Growing server foodnstuff\\n[2023-05-01T00:26:36.101Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:26:36.101Z] ========================\\n[2023-05-01T00:26:38.383Z] ========================\\n[2023-05-01T00:26:38.383Z] Weakening server foodnstuff\\n[2023-05-01T00:26:38.383Z] Progress: 15/6\\n[2023-05-01T00:26:38.383Z] ========================\\n[2023-05-01T00:26:41.404Z] ========================\\n[2023-05-01T00:26:41.404Z] Growing server foodnstuff\\n[2023-05-01T00:26:41.404Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:26:41.404Z] ========================\\n[2023-05-01T00:26:43.687Z] ========================\\n[2023-05-01T00:26:43.687Z] Weakening server foodnstuff\\n[2023-05-01T00:26:43.687Z] Progress: 14.964/6\\n[2023-05-01T00:26:43.687Z] ========================\\n[2023-05-01T00:26:47.421Z] =============== SUMMARY ===============\\n[2023-05-01T00:26:47.421Z] Initial ask price: 1800.1580913928103\\n[2023-05-01T00:26:47.421Z] Final ask price: 1778.538182840716\\n[2023-05-01T00:26:47.421Z] Initial bid price: 1778.6850326485621\\n[2023-05-01T00:26:47.421Z] Final bid price: 1757.3230156497732\\n[2023-05-01T00:26:47.421Z] =======================================\\n[2023-05-01T00:26:48.421Z] ========================\\n[2023-05-01T00:26:48.421Z] Growing server foodnstuff\\n[2023-05-01T00:26:48.421Z] Progress: 0/45000000\\n[2023-05-01T00:26:48.421Z] ========================\\n[2023-05-01T00:26:50.704Z] ========================\\n[2023-05-01T00:26:50.704Z] Weakening server foodnstuff\\n[2023-05-01T00:26:50.704Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:26:50.704Z] ========================\\n[2023-05-01T00:26:53.727Z] ========================\\n[2023-05-01T00:26:53.727Z] Growing server foodnstuff\\n[2023-05-01T00:26:53.727Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:26:53.727Z] ========================\\n[2023-05-01T00:26:56.009Z] ========================\\n[2023-05-01T00:26:56.009Z] Weakening server foodnstuff\\n[2023-05-01T00:26:56.009Z] Progress: 15/6\\n[2023-05-01T00:26:56.009Z] ========================\\n[2023-05-01T00:26:59.030Z] ========================\\n[2023-05-01T00:26:59.030Z] Growing server foodnstuff\\n[2023-05-01T00:26:59.030Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:26:59.030Z] ========================\\n[2023-05-01T00:27:01.312Z] ========================\\n[2023-05-01T00:27:01.312Z] Weakening server foodnstuff\\n[2023-05-01T00:27:01.312Z] Progress: 15/6\\n[2023-05-01T00:27:01.312Z] ========================\\n[2023-05-01T00:27:04.333Z] ========================\\n[2023-05-01T00:27:04.333Z] Growing server foodnstuff\\n[2023-05-01T00:27:04.333Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:27:04.333Z] ========================\\n[2023-05-01T00:27:06.615Z] ========================\\n[2023-05-01T00:27:06.615Z] Weakening server foodnstuff\\n[2023-05-01T00:27:06.615Z] Progress: 15/6\\n[2023-05-01T00:27:06.615Z] ========================\\n[2023-05-01T00:27:09.636Z] ========================\\n[2023-05-01T00:27:09.636Z] Growing server foodnstuff\\n[2023-05-01T00:27:09.636Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:27:09.636Z] ========================\\n[2023-05-01T00:27:11.917Z] ========================\\n[2023-05-01T00:27:11.917Z] Weakening server foodnstuff\\n[2023-05-01T00:27:11.917Z] Progress: 15/6\\n[2023-05-01T00:27:11.917Z] ========================\\n[2023-05-01T00:27:14.938Z] ========================\\n[2023-05-01T00:27:14.938Z] Growing server foodnstuff\\n[2023-05-01T00:27:14.938Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:27:14.938Z] ========================\\n[2023-05-01T00:27:17.220Z] ========================\\n[2023-05-01T00:27:17.220Z] Weakening server foodnstuff\\n[2023-05-01T00:27:17.220Z] Progress: 14.944/6\\n[2023-05-01T00:27:17.220Z] ========================\\n[2023-05-01T00:27:20.953Z] =============== SUMMARY ===============\\n[2023-05-01T00:27:20.953Z] Initial ask price: 1778.538182840716\\n[2023-05-01T00:27:20.953Z] Final ask price: 1770.5026709266003\\n[2023-05-01T00:27:20.953Z] Initial bid price: 1757.3230156497732\\n[2023-05-01T00:27:20.953Z] Final bid price: 1749.3833547724062\\n[2023-05-01T00:27:20.953Z] =======================================\\n[2023-05-01T00:27:21.954Z] ========================\\n[2023-05-01T00:27:21.954Z] Growing server foodnstuff\\n[2023-05-01T00:27:21.954Z] Progress: 0/45000000\\n[2023-05-01T00:27:21.954Z] ========================\\n[2023-05-01T00:27:24.237Z] ========================\\n[2023-05-01T00:27:24.237Z] Weakening server foodnstuff\\n[2023-05-01T00:27:24.237Z] Progress: 15/6\\n[2023-05-01T00:27:24.237Z] ========================\\n[2023-05-01T00:27:27.258Z] ========================\\n[2023-05-01T00:27:27.258Z] Growing server foodnstuff\\n[2023-05-01T00:27:27.258Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:27:27.258Z] ========================\\n[2023-05-01T00:27:29.540Z] ========================\\n[2023-05-01T00:27:29.540Z] Weakening server foodnstuff\\n[2023-05-01T00:27:29.540Z] Progress: 15/6\\n[2023-05-01T00:27:29.540Z] ========================\\n[2023-05-01T00:27:32.561Z] ========================\\n[2023-05-01T00:27:32.561Z] Growing server foodnstuff\\n[2023-05-01T00:27:32.561Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:27:32.561Z] ========================\\n[2023-05-01T00:27:34.842Z] ========================\\n[2023-05-01T00:27:34.842Z] Weakening server foodnstuff\\n[2023-05-01T00:27:34.842Z] Progress: 15/6\\n[2023-05-01T00:27:34.842Z] ========================\\n[2023-05-01T00:27:37.862Z] ========================\\n[2023-05-01T00:27:37.862Z] Growing server foodnstuff\\n[2023-05-01T00:27:37.862Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:27:37.862Z] ========================\\n[2023-05-01T00:27:40.143Z] ========================\\n[2023-05-01T00:27:40.143Z] Weakening server foodnstuff\\n[2023-05-01T00:27:40.143Z] Progress: 15/6\\n[2023-05-01T00:27:40.143Z] ========================\\n[2023-05-01T00:27:43.163Z] ========================\\n[2023-05-01T00:27:43.163Z] Growing server foodnstuff\\n[2023-05-01T00:27:43.163Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:27:43.163Z] ========================\\n[2023-05-01T00:27:45.444Z] ========================\\n[2023-05-01T00:27:45.444Z] Weakening server foodnstuff\\n[2023-05-01T00:27:45.444Z] Progress: 15/6\\n[2023-05-01T00:27:45.444Z] ========================\\n[2023-05-01T00:27:48.464Z] ========================\\n[2023-05-01T00:27:48.464Z] Growing server foodnstuff\\n[2023-05-01T00:27:48.464Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:27:48.464Z] ========================\\n[2023-05-01T00:27:50.745Z] ========================\\n[2023-05-01T00:27:50.745Z] Weakening server foodnstuff\\n[2023-05-01T00:27:50.745Z] Progress: 14.964/6\\n[2023-05-01T00:27:50.745Z] ========================\\n[2023-05-01T00:27:54.477Z] =============== SUMMARY ===============\\n[2023-05-01T00:27:54.477Z] Initial ask price: 1770.5026709266003\\n[2023-05-01T00:27:54.477Z] Final ask price: 1741.6911343908137\\n[2023-05-01T00:27:54.477Z] Initial bid price: 1749.3833547724062\\n[2023-05-01T00:27:54.477Z] Final bid price: 1720.9154946167682\\n[2023-05-01T00:27:54.477Z] =======================================\\n[2023-05-01T00:27:55.479Z] ========================\\n[2023-05-01T00:27:55.479Z] Growing server foodnstuff\\n[2023-05-01T00:27:55.479Z] Progress: 0/45000000\\n[2023-05-01T00:27:55.479Z] ========================\\n[2023-05-01T00:27:57.761Z] ========================\\n[2023-05-01T00:27:57.761Z] Weakening server foodnstuff\\n[2023-05-01T00:27:57.761Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:27:57.761Z] ========================\\n[2023-05-01T00:28:00.783Z] ========================\\n[2023-05-01T00:28:00.783Z] Growing server foodnstuff\\n[2023-05-01T00:28:00.783Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:28:00.783Z] ========================\\n[2023-05-01T00:28:03.063Z] ========================\\n[2023-05-01T00:28:03.063Z] Weakening server foodnstuff\\n[2023-05-01T00:28:03.063Z] Progress: 15/6\\n[2023-05-01T00:28:03.063Z] ========================\\n[2023-05-01T00:28:06.084Z] ========================\\n[2023-05-01T00:28:06.084Z] Growing server foodnstuff\\n[2023-05-01T00:28:06.084Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:28:06.084Z] ========================\\n[2023-05-01T00:28:08.364Z] ========================\\n[2023-05-01T00:28:08.364Z] Weakening server foodnstuff\\n[2023-05-01T00:28:08.365Z] Progress: 15/6\\n[2023-05-01T00:28:08.365Z] ========================\\n[2023-05-01T00:28:11.384Z] ========================\\n[2023-05-01T00:28:11.384Z] Growing server foodnstuff\\n[2023-05-01T00:28:11.384Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:28:11.384Z] ========================\\n[2023-05-01T00:28:13.665Z] ========================\\n[2023-05-01T00:28:13.665Z] Weakening server foodnstuff\\n[2023-05-01T00:28:13.665Z] Progress: 15/6\\n[2023-05-01T00:28:13.665Z] ========================\\n[2023-05-01T00:28:16.686Z] ========================\\n[2023-05-01T00:28:16.686Z] Growing server foodnstuff\\n[2023-05-01T00:28:16.686Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:28:16.686Z] ========================\\n[2023-05-01T00:28:18.966Z] ========================\\n[2023-05-01T00:28:18.966Z] Weakening server foodnstuff\\n[2023-05-01T00:28:18.966Z] Progress: 15/6\\n[2023-05-01T00:28:18.966Z] ========================\\n[2023-05-01T00:28:21.986Z] ========================\\n[2023-05-01T00:28:21.986Z] Growing server foodnstuff\\n[2023-05-01T00:28:21.986Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:28:21.986Z] ========================\\n[2023-05-01T00:28:24.267Z] ========================\\n[2023-05-01T00:28:24.267Z] Weakening server foodnstuff\\n[2023-05-01T00:28:24.267Z] Progress: 14.944/6\\n[2023-05-01T00:28:24.267Z] ========================\\n[2023-05-01T00:28:27.999Z] =============== SUMMARY ===============\\n[2023-05-01T00:28:27.999Z] Initial ask price: 1732.5119633600398\\n[2023-05-01T00:28:27.999Z] Final ask price: 1718.1638736330383\\n[2023-05-01T00:28:27.999Z] Initial bid price: 1711.845816679801\\n[2023-05-01T00:28:27.999Z] Final bid price: 1697.6688771284694\\n[2023-05-01T00:28:27.999Z] =======================================\\n[2023-05-01T00:28:29.000Z] ========================\\n[2023-05-01T00:28:29.000Z] Growing server foodnstuff\\n[2023-05-01T00:28:29.000Z] Progress: 0/45000000\\n[2023-05-01T00:28:29.000Z] ========================\\n[2023-05-01T00:28:31.281Z] ========================\\n[2023-05-01T00:28:31.281Z] Weakening server foodnstuff\\n[2023-05-01T00:28:31.281Z] Progress: 15.04/6\\n[2023-05-01T00:28:31.281Z] ========================\\n[2023-05-01T00:28:34.302Z] ========================\\n[2023-05-01T00:28:34.302Z] Growing server foodnstuff\\n[2023-05-01T00:28:34.302Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:28:34.302Z] ========================\\n[2023-05-01T00:28:36.583Z] ========================\\n[2023-05-01T00:28:36.583Z] Weakening server foodnstuff\\n[2023-05-01T00:28:36.583Z] Progress: 15/6\\n[2023-05-01T00:28:36.583Z] ========================\\n[2023-05-01T00:28:39.603Z] ========================\\n[2023-05-01T00:28:39.603Z] Growing server foodnstuff\\n[2023-05-01T00:28:39.603Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:28:39.603Z] ========================\\n[2023-05-01T00:28:41.884Z] ========================\\n[2023-05-01T00:28:41.885Z] Weakening server foodnstuff\\n[2023-05-01T00:28:41.885Z] Progress: 15/6\\n[2023-05-01T00:28:41.885Z] ========================\\n[2023-05-01T00:28:44.905Z] ========================\\n[2023-05-01T00:28:44.905Z] Growing server foodnstuff\\n[2023-05-01T00:28:44.905Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:28:44.905Z] ========================\\n[2023-05-01T00:28:47.185Z] ========================\\n[2023-05-01T00:28:47.185Z] Weakening server foodnstuff\\n[2023-05-01T00:28:47.185Z] Progress: 15/6\\n[2023-05-01T00:28:47.185Z] ========================\\n[2023-05-01T00:28:50.206Z] ========================\\n[2023-05-01T00:28:50.206Z] Growing server foodnstuff\\n[2023-05-01T00:28:50.206Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:28:50.206Z] ========================\\n[2023-05-01T00:28:52.487Z] ========================\\n[2023-05-01T00:28:52.487Z] Weakening server foodnstuff\\n[2023-05-01T00:28:52.487Z] Progress: 15/6\\n[2023-05-01T00:28:52.487Z] ========================\\n[2023-05-01T00:28:55.507Z] ========================\\n[2023-05-01T00:28:55.507Z] Growing server foodnstuff\\n[2023-05-01T00:28:55.507Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:28:55.507Z] ========================\\n[2023-05-01T00:28:57.787Z] ========================\\n[2023-05-01T00:28:57.787Z] Weakening server foodnstuff\\n[2023-05-01T00:28:57.787Z] Progress: 14.944/6\\n[2023-05-01T00:28:57.787Z] ========================\\n[2023-05-01T00:29:01.520Z] =============== SUMMARY ===============\\n[2023-05-01T00:29:01.520Z] Initial ask price: 1718.1638736330383\\n[2023-05-01T00:29:01.520Z] Final ask price: 1734.8581865157523\\n[2023-05-01T00:29:01.520Z] Initial bid price: 1697.6688771284694\\n[2023-05-01T00:29:01.520Z] Final bid price: 1714.1640530781885\\n[2023-05-01T00:29:01.520Z] =======================================\\n[2023-05-01T00:29:02.521Z] ========================\\n[2023-05-01T00:29:02.521Z] Growing server foodnstuff\\n[2023-05-01T00:29:02.521Z] Progress: 0/45000000\\n[2023-05-01T00:29:02.521Z] ========================\\n[2023-05-01T00:29:04.809Z] ========================\\n[2023-05-01T00:29:04.809Z] Weakening server foodnstuff\\n[2023-05-01T00:29:04.809Z] Progress: 15/6\\n[2023-05-01T00:29:04.809Z] ========================\\n[2023-05-01T00:29:07.829Z] ========================\\n[2023-05-01T00:29:07.829Z] Growing server foodnstuff\\n[2023-05-01T00:29:07.829Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:29:07.829Z] ========================\\n[2023-05-01T00:29:10.109Z] ========================\\n[2023-05-01T00:29:10.109Z] Weakening server foodnstuff\\n[2023-05-01T00:29:10.109Z] Progress: 15/6\\n[2023-05-01T00:29:10.109Z] ========================\\n[2023-05-01T00:29:13.129Z] ========================\\n[2023-05-01T00:29:13.129Z] Growing server foodnstuff\\n[2023-05-01T00:29:13.129Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:29:13.129Z] ========================\\n[2023-05-01T00:29:15.410Z] ========================\\n[2023-05-01T00:29:15.410Z] Weakening server foodnstuff\\n[2023-05-01T00:29:15.410Z] Progress: 15/6\\n[2023-05-01T00:29:15.410Z] ========================\\n[2023-05-01T00:29:18.431Z] ========================\\n[2023-05-01T00:29:18.431Z] Growing server foodnstuff\\n[2023-05-01T00:29:18.431Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:29:18.431Z] ========================\\n[2023-05-01T00:29:20.711Z] ========================\\n[2023-05-01T00:29:20.712Z] Weakening server foodnstuff\\n[2023-05-01T00:29:20.712Z] Progress: 15/6\\n[2023-05-01T00:29:20.712Z] ========================\\n[2023-05-01T00:29:23.731Z] ========================\\n[2023-05-01T00:29:23.731Z] Growing server foodnstuff\\n[2023-05-01T00:29:23.732Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:29:23.732Z] ========================\\n[2023-05-01T00:29:26.013Z] ========================\\n[2023-05-01T00:29:26.013Z] Weakening server foodnstuff\\n[2023-05-01T00:29:26.013Z] Progress: 15/6\\n[2023-05-01T00:29:26.013Z] ========================\\n[2023-05-01T00:29:29.034Z] ========================\\n[2023-05-01T00:29:29.034Z] Growing server foodnstuff\\n[2023-05-01T00:29:29.034Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:29:29.034Z] ========================\\n[2023-05-01T00:29:31.315Z] ========================\\n[2023-05-01T00:29:31.315Z] Weakening server foodnstuff\\n[2023-05-01T00:29:31.315Z] Progress: 14.964/6\\n[2023-05-01T00:29:31.315Z] ========================\\n[2023-05-01T00:29:35.048Z] =============== SUMMARY ===============\\n[2023-05-01T00:29:35.048Z] Initial ask price: 1734.8581865157523\\n[2023-05-01T00:29:35.048Z] Final ask price: 1743.8153314042615\\n[2023-05-01T00:29:35.048Z] Initial bid price: 1714.1640530781885\\n[2023-05-01T00:29:35.048Z] Final bid price: 1723.0143532960597\\n[2023-05-01T00:29:35.048Z] =======================================\\n[2023-05-01T00:29:36.048Z] ========================\\n[2023-05-01T00:29:36.048Z] Growing server foodnstuff\\n[2023-05-01T00:29:36.048Z] Progress: 0/45000000\\n[2023-05-01T00:29:36.048Z] ========================\\n[2023-05-01T00:29:38.331Z] ========================\\n[2023-05-01T00:29:38.331Z] Weakening server foodnstuff\\n[2023-05-01T00:29:38.331Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:29:38.331Z] ========================\\n[2023-05-01T00:29:41.365Z] ========================\\n[2023-05-01T00:29:41.365Z] Growing server foodnstuff\\n[2023-05-01T00:29:41.365Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:29:41.365Z] ========================\\n[2023-05-01T00:29:43.646Z] ========================\\n[2023-05-01T00:29:43.646Z] Weakening server foodnstuff\\n[2023-05-01T00:29:43.646Z] Progress: 15/6\\n[2023-05-01T00:29:43.646Z] ========================\\n[2023-05-01T00:29:46.665Z] ========================\\n[2023-05-01T00:29:46.665Z] Growing server foodnstuff\\n[2023-05-01T00:29:46.665Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:29:46.665Z] ========================\\n[2023-05-01T00:29:48.946Z] ========================\\n[2023-05-01T00:29:48.946Z] Weakening server foodnstuff\\n[2023-05-01T00:29:48.946Z] Progress: 15/6\\n[2023-05-01T00:29:48.946Z] ========================\\n[2023-05-01T00:29:51.967Z] ========================\\n[2023-05-01T00:29:51.967Z] Growing server foodnstuff\\n[2023-05-01T00:29:51.967Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:29:51.967Z] ========================\\n[2023-05-01T00:29:54.247Z] ========================\\n[2023-05-01T00:29:54.247Z] Weakening server foodnstuff\\n[2023-05-01T00:29:54.247Z] Progress: 15/6\\n[2023-05-01T00:29:54.247Z] ========================\\n[2023-05-01T00:29:57.265Z] ========================\\n[2023-05-01T00:29:57.265Z] Growing server foodnstuff\\n[2023-05-01T00:29:57.265Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:29:57.265Z] ========================\\n[2023-05-01T00:29:59.544Z] ========================\\n[2023-05-01T00:29:59.544Z] Weakening server foodnstuff\\n[2023-05-01T00:29:59.544Z] Progress: 15/6\\n[2023-05-01T00:29:59.544Z] ========================\\n[2023-05-01T00:30:02.567Z] ========================\\n[2023-05-01T00:30:02.567Z] Growing server foodnstuff\\n[2023-05-01T00:30:02.567Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:30:02.567Z] ========================\\n[2023-05-01T00:30:04.846Z] ========================\\n[2023-05-01T00:30:04.846Z] Weakening server foodnstuff\\n[2023-05-01T00:30:04.846Z] Progress: 14.944/6\\n[2023-05-01T00:30:04.846Z] ========================\\n[2023-05-01T00:30:08.576Z] =============== SUMMARY ===============\\n[2023-05-01T00:30:08.576Z] Initial ask price: 1743.8153314042615\\n[2023-05-01T00:30:08.576Z] Final ask price: 1767.6973722629389\\n[2023-05-01T00:30:08.576Z] Initial bid price: 1723.0143532960597\\n[2023-05-01T00:30:08.576Z] Final bid price: 1746.611518915866\\n[2023-05-01T00:30:08.576Z] =======================================\\n[2023-05-01T00:30:09.577Z] ========================\\n[2023-05-01T00:30:09.577Z] Growing server foodnstuff\\n[2023-05-01T00:30:09.577Z] Progress: 0/45000000\\n[2023-05-01T00:30:09.577Z] ========================\\n[2023-05-01T00:30:11.857Z] ========================\\n[2023-05-01T00:30:11.857Z] Weakening server foodnstuff\\n[2023-05-01T00:30:11.857Z] Progress: 15.04/6\\n[2023-05-01T00:30:11.857Z] ========================\\n[2023-05-01T00:30:14.876Z] ========================\\n[2023-05-01T00:30:14.876Z] Growing server foodnstuff\\n[2023-05-01T00:30:14.876Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:30:14.876Z] ========================\\n[2023-05-01T00:30:17.155Z] ========================\\n[2023-05-01T00:30:17.155Z] Weakening server foodnstuff\\n[2023-05-01T00:30:17.155Z] Progress: 15/6\\n[2023-05-01T00:30:17.155Z] ========================\\n[2023-05-01T00:30:20.174Z] ========================\\n[2023-05-01T00:30:20.174Z] Growing server foodnstuff\\n[2023-05-01T00:30:20.174Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:30:20.174Z] ========================\\n[2023-05-01T00:30:22.454Z] ========================\\n[2023-05-01T00:30:22.454Z] Weakening server foodnstuff\\n[2023-05-01T00:30:22.454Z] Progress: 15/6\\n[2023-05-01T00:30:22.454Z] ========================\\n[2023-05-01T00:30:25.472Z] ========================\\n[2023-05-01T00:30:25.472Z] Growing server foodnstuff\\n[2023-05-01T00:30:25.472Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:30:25.472Z] ========================\\n[2023-05-01T00:30:27.752Z] ========================\\n[2023-05-01T00:30:27.752Z] Weakening server foodnstuff\\n[2023-05-01T00:30:27.752Z] Progress: 15/6\\n[2023-05-01T00:30:27.752Z] ========================\\n[2023-05-01T00:30:30.770Z] ========================\\n[2023-05-01T00:30:30.770Z] Growing server foodnstuff\\n[2023-05-01T00:30:30.770Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:30:30.770Z] ========================\\n[2023-05-01T00:30:33.051Z] ========================\\n[2023-05-01T00:30:33.051Z] Weakening server foodnstuff\\n[2023-05-01T00:30:33.051Z] Progress: 15/6\\n[2023-05-01T00:30:33.051Z] ========================\\n[2023-05-01T00:30:36.070Z] ========================\\n[2023-05-01T00:30:36.070Z] Growing server foodnstuff\\n[2023-05-01T00:30:36.070Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:30:36.070Z] ========================\\n[2023-05-01T00:30:38.349Z] ========================\\n[2023-05-01T00:30:38.349Z] Weakening server foodnstuff\\n[2023-05-01T00:30:38.349Z] Progress: 14.944/6\\n[2023-05-01T00:30:38.349Z] ========================\\n[2023-05-01T00:30:42.079Z] =============== SUMMARY ===============\\n[2023-05-01T00:30:42.079Z] Initial ask price: 1767.6973722629389\\n[2023-05-01T00:30:42.079Z] Final ask price: 1743.2246053474207\\n[2023-05-01T00:30:42.079Z] Initial bid price: 1746.611518915866\\n[2023-05-01T00:30:42.079Z] Final bid price: 1722.4306736732963\\n[2023-05-01T00:30:42.079Z] =======================================\\n[2023-05-01T00:30:43.081Z] ========================\\n[2023-05-01T00:30:43.081Z] Growing server foodnstuff\\n[2023-05-01T00:30:43.081Z] Progress: 0/45000000\\n[2023-05-01T00:30:43.081Z] ========================\\n[2023-05-01T00:30:45.363Z] ========================\\n[2023-05-01T00:30:45.363Z] Weakening server foodnstuff\\n[2023-05-01T00:30:45.363Z] Progress: 15/6\\n[2023-05-01T00:30:45.363Z] ========================\\n[2023-05-01T00:30:48.380Z] ========================\\n[2023-05-01T00:30:48.380Z] Growing server foodnstuff\\n[2023-05-01T00:30:48.380Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:30:48.380Z] ========================\\n[2023-05-01T00:30:50.660Z] ========================\\n[2023-05-01T00:30:50.660Z] Weakening server foodnstuff\\n[2023-05-01T00:30:50.660Z] Progress: 15/6\\n[2023-05-01T00:30:50.660Z] ========================\\n[2023-05-01T00:30:53.678Z] ========================\\n[2023-05-01T00:30:53.678Z] Growing server foodnstuff\\n[2023-05-01T00:30:53.678Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:30:53.678Z] ========================\\n[2023-05-01T00:30:55.958Z] ========================\\n[2023-05-01T00:30:55.958Z] Weakening server foodnstuff\\n[2023-05-01T00:30:55.958Z] Progress: 15/6\\n[2023-05-01T00:30:55.958Z] ========================\\n[2023-05-01T00:30:58.977Z] ========================\\n[2023-05-01T00:30:58.977Z] Growing server foodnstuff\\n[2023-05-01T00:30:58.977Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:30:58.977Z] ========================\\n[2023-05-01T00:31:01.257Z] ========================\\n[2023-05-01T00:31:01.257Z] Weakening server foodnstuff\\n[2023-05-01T00:31:01.257Z] Progress: 15/6\\n[2023-05-01T00:31:01.257Z] ========================\\n[2023-05-01T00:31:04.276Z] ========================\\n[2023-05-01T00:31:04.276Z] Growing server foodnstuff\\n[2023-05-01T00:31:04.276Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:31:04.276Z] ========================\\n[2023-05-01T00:31:06.556Z] ========================\\n[2023-05-01T00:31:06.556Z] Weakening server foodnstuff\\n[2023-05-01T00:31:06.556Z] Progress: 15/6\\n[2023-05-01T00:31:06.556Z] ========================\\n[2023-05-01T00:31:09.574Z] ========================\\n[2023-05-01T00:31:09.574Z] Growing server foodnstuff\\n[2023-05-01T00:31:09.574Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:31:09.574Z] ========================\\n[2023-05-01T00:31:11.853Z] ========================\\n[2023-05-01T00:31:11.853Z] Weakening server foodnstuff\\n[2023-05-01T00:31:11.853Z] Progress: 14.964/6\\n[2023-05-01T00:31:11.853Z] ========================\\n[2023-05-01T00:31:15.584Z] =============== SUMMARY ===============\\n[2023-05-01T00:31:15.584Z] Initial ask price: 1743.353412493192\\n[2023-05-01T00:31:15.584Z] Final ask price: 1745.3964360628522\\n[2023-05-01T00:31:15.584Z] Initial bid price: 1722.55794435212\\n[2023-05-01T00:31:15.584Z] Final bid price: 1724.5765978593192\\n[2023-05-01T00:31:15.584Z] =======================================\\n[2023-05-01T00:31:16.585Z] ========================\\n[2023-05-01T00:31:16.585Z] Growing server foodnstuff\\n[2023-05-01T00:31:16.585Z] Progress: 0/45000000\\n[2023-05-01T00:31:16.585Z] ========================\\n[2023-05-01T00:31:18.866Z] ========================\\n[2023-05-01T00:31:18.866Z] Weakening server foodnstuff\\n[2023-05-01T00:31:18.866Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:31:18.866Z] ========================\\n[2023-05-01T00:31:21.887Z] ========================\\n[2023-05-01T00:31:21.887Z] Growing server foodnstuff\\n[2023-05-01T00:31:21.887Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:31:21.887Z] ========================\\n[2023-05-01T00:31:24.167Z] ========================\\n[2023-05-01T00:31:24.167Z] Weakening server foodnstuff\\n[2023-05-01T00:31:24.167Z] Progress: 15/6\\n[2023-05-01T00:31:24.167Z] ========================\\n[2023-05-01T00:31:27.184Z] ========================\\n[2023-05-01T00:31:27.184Z] Growing server foodnstuff\\n[2023-05-01T00:31:27.184Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:31:27.184Z] ========================\\n[2023-05-01T00:31:29.464Z] ========================\\n[2023-05-01T00:31:29.464Z] Weakening server foodnstuff\\n[2023-05-01T00:31:29.464Z] Progress: 15/6\\n[2023-05-01T00:31:29.464Z] ========================\\n[2023-05-01T00:31:32.483Z] ========================\\n[2023-05-01T00:31:32.483Z] Growing server foodnstuff\\n[2023-05-01T00:31:32.483Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:31:32.483Z] ========================\\n[2023-05-01T00:31:34.763Z] ========================\\n[2023-05-01T00:31:34.763Z] Weakening server foodnstuff\\n[2023-05-01T00:31:34.763Z] Progress: 15/6\\n[2023-05-01T00:31:34.763Z] ========================\\n[2023-05-01T00:31:37.781Z] ========================\\n[2023-05-01T00:31:37.781Z] Growing server foodnstuff\\n[2023-05-01T00:31:37.781Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:31:37.781Z] ========================\\n[2023-05-01T00:31:40.061Z] ========================\\n[2023-05-01T00:31:40.061Z] Weakening server foodnstuff\\n[2023-05-01T00:31:40.061Z] Progress: 15/6\\n[2023-05-01T00:31:40.061Z] ========================\\n[2023-05-01T00:31:43.079Z] ========================\\n[2023-05-01T00:31:43.079Z] Growing server foodnstuff\\n[2023-05-01T00:31:43.079Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:31:43.079Z] ========================\\n[2023-05-01T00:31:45.359Z] ========================\\n[2023-05-01T00:31:45.359Z] Weakening server foodnstuff\\n[2023-05-01T00:31:45.359Z] Progress: 14.944/6\\n[2023-05-01T00:31:45.359Z] ========================\\n[2023-05-01T00:31:49.090Z] =============== SUMMARY ===============\\n[2023-05-01T00:31:49.090Z] Initial ask price: 1745.3964360628522\\n[2023-05-01T00:31:49.090Z] Final ask price: 1739.5698136366416\\n[2023-05-01T00:31:49.090Z] Initial bid price: 1724.5765978593192\\n[2023-05-01T00:31:49.090Z] Final bid price: 1718.8194778874965\\n[2023-05-01T00:31:49.090Z] =======================================\\n[2023-05-01T00:31:50.091Z] ========================\\n[2023-05-01T00:31:50.091Z] Growing server foodnstuff\\n[2023-05-01T00:31:50.091Z] Progress: 0/45000000\\n[2023-05-01T00:31:50.091Z] ========================\\n[2023-05-01T00:31:52.371Z] ========================\\n[2023-05-01T00:31:52.371Z] Weakening server foodnstuff\\n[2023-05-01T00:31:52.371Z] Progress: 15.04/6\\n[2023-05-01T00:31:52.371Z] ========================\\n[2023-05-01T00:31:55.390Z] ========================\\n[2023-05-01T00:31:55.390Z] Growing server foodnstuff\\n[2023-05-01T00:31:55.390Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:31:55.390Z] ========================\\n[2023-05-01T00:31:57.669Z] ========================\\n[2023-05-01T00:31:57.669Z] Weakening server foodnstuff\\n[2023-05-01T00:31:57.669Z] Progress: 15/6\\n[2023-05-01T00:31:57.669Z] ========================\\n[2023-05-01T00:32:00.688Z] ========================\\n[2023-05-01T00:32:00.688Z] Growing server foodnstuff\\n[2023-05-01T00:32:00.688Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:32:00.688Z] ========================\\n[2023-05-01T00:32:02.967Z] ========================\\n[2023-05-01T00:32:02.967Z] Weakening server foodnstuff\\n[2023-05-01T00:32:02.967Z] Progress: 15/6\\n[2023-05-01T00:32:02.967Z] ========================\\n[2023-05-01T00:32:05.986Z] ========================\\n[2023-05-01T00:32:05.986Z] Growing server foodnstuff\\n[2023-05-01T00:32:05.986Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:32:05.986Z] ========================\\n[2023-05-01T00:32:08.265Z] ========================\\n[2023-05-01T00:32:08.265Z] Weakening server foodnstuff\\n[2023-05-01T00:32:08.265Z] Progress: 15/6\\n[2023-05-01T00:32:08.265Z] ========================\\n[2023-05-01T00:32:11.284Z] ========================\\n[2023-05-01T00:32:11.284Z] Growing server foodnstuff\\n[2023-05-01T00:32:11.284Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:32:11.284Z] ========================\\n[2023-05-01T00:32:13.564Z] ========================\\n[2023-05-01T00:32:13.564Z] Weakening server foodnstuff\\n[2023-05-01T00:32:13.564Z] Progress: 15/6\\n[2023-05-01T00:32:13.564Z] ========================\\n[2023-05-01T00:32:16.580Z] ========================\\n[2023-05-01T00:32:16.580Z] Growing server foodnstuff\\n[2023-05-01T00:32:16.580Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:32:16.580Z] ========================\\n[2023-05-01T00:32:18.859Z] ========================\\n[2023-05-01T00:32:18.859Z] Weakening server foodnstuff\\n[2023-05-01T00:32:18.859Z] Progress: 14.944/6\\n[2023-05-01T00:32:18.859Z] ========================\\n[2023-05-01T00:32:22.588Z] =============== SUMMARY ===============\\n[2023-05-01T00:32:22.588Z] Initial ask price: 1739.5698136366416\\n[2023-05-01T00:32:22.588Z] Final ask price: 1728.203993334596\\n[2023-05-01T00:32:22.588Z] Initial bid price: 1718.8194778874965\\n[2023-05-01T00:32:22.588Z] Final bid price: 1707.5892339707639\\n[2023-05-01T00:32:22.588Z] =======================================\\n[2023-05-01T00:32:23.589Z] ========================\\n[2023-05-01T00:32:23.589Z] Growing server foodnstuff\\n[2023-05-01T00:32:23.589Z] Progress: 0/45000000\\n[2023-05-01T00:32:23.589Z] ========================\\n[2023-05-01T00:32:25.869Z] ========================\\n[2023-05-01T00:32:25.869Z] Weakening server foodnstuff\\n[2023-05-01T00:32:25.869Z] Progress: 15/6\\n[2023-05-01T00:32:25.869Z] ========================\\n[2023-05-01T00:32:28.886Z] ========================\\n[2023-05-01T00:32:28.886Z] Growing server foodnstuff\\n[2023-05-01T00:32:28.886Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:32:28.886Z] ========================\\n[2023-05-01T00:32:31.166Z] ========================\\n[2023-05-01T00:32:31.166Z] Weakening server foodnstuff\\n[2023-05-01T00:32:31.166Z] Progress: 15/6\\n[2023-05-01T00:32:31.166Z] ========================\\n[2023-05-01T00:32:34.183Z] ========================\\n[2023-05-01T00:32:34.183Z] Growing server foodnstuff\\n[2023-05-01T00:32:34.183Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:32:34.183Z] ========================\\n[2023-05-01T00:32:36.462Z] ========================\\n[2023-05-01T00:32:36.462Z] Weakening server foodnstuff\\n[2023-05-01T00:32:36.462Z] Progress: 15/6\\n[2023-05-01T00:32:36.462Z] ========================\\n[2023-05-01T00:32:39.479Z] ========================\\n[2023-05-01T00:32:39.479Z] Growing server foodnstuff\\n[2023-05-01T00:32:39.479Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:32:39.479Z] ========================\\n[2023-05-01T00:32:41.757Z] ========================\\n[2023-05-01T00:32:41.757Z] Weakening server foodnstuff\\n[2023-05-01T00:32:41.757Z] Progress: 15/6\\n[2023-05-01T00:32:41.757Z] ========================\\n[2023-05-01T00:32:44.774Z] ========================\\n[2023-05-01T00:32:44.774Z] Growing server foodnstuff\\n[2023-05-01T00:32:44.775Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:32:44.775Z] ========================\\n[2023-05-01T00:32:47.053Z] ========================\\n[2023-05-01T00:32:47.053Z] Weakening server foodnstuff\\n[2023-05-01T00:32:47.053Z] Progress: 15/6\\n[2023-05-01T00:32:47.053Z] ========================\\n[2023-05-01T00:32:50.071Z] ========================\\n[2023-05-01T00:32:50.071Z] Growing server foodnstuff\\n[2023-05-01T00:32:50.071Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:32:50.071Z] ========================\\n[2023-05-01T00:32:52.349Z] ========================\\n[2023-05-01T00:32:52.349Z] Weakening server foodnstuff\\n[2023-05-01T00:32:52.349Z] Progress: 14.964/6\\n[2023-05-01T00:32:52.349Z] ========================\\n[2023-05-01T00:32:56.079Z] =============== SUMMARY ===============\\n[2023-05-01T00:32:56.079Z] Initial ask price: 1728.203993334596\\n[2023-05-01T00:32:56.079Z] Final ask price: 1730.9740451956218\\n[2023-05-01T00:32:56.079Z] Initial bid price: 1707.5892339707639\\n[2023-05-01T00:32:56.079Z] Final bid price: 1710.3262434636658\\n[2023-05-01T00:32:56.079Z] =======================================\\n[2023-05-01T00:32:57.079Z] ========================\\n[2023-05-01T00:32:57.079Z] Growing server foodnstuff\\n[2023-05-01T00:32:57.079Z] Progress: 0/45000000\\n[2023-05-01T00:32:57.079Z] ========================\\n[2023-05-01T00:32:59.364Z] ========================\\n[2023-05-01T00:32:59.364Z] Weakening server foodnstuff\\n[2023-05-01T00:32:59.364Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:32:59.364Z] ========================\\n[2023-05-01T00:33:02.383Z] ========================\\n[2023-05-01T00:33:02.383Z] Growing server foodnstuff\\n[2023-05-01T00:33:02.383Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:33:02.383Z] ========================\\n[2023-05-01T00:33:04.662Z] ========================\\n[2023-05-01T00:33:04.662Z] Weakening server foodnstuff\\n[2023-05-01T00:33:04.662Z] Progress: 15/6\\n[2023-05-01T00:33:04.662Z] ========================\\n[2023-05-01T00:33:07.680Z] ========================\\n[2023-05-01T00:33:07.680Z] Growing server foodnstuff\\n[2023-05-01T00:33:07.680Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:33:07.680Z] ========================\\n[2023-05-01T00:33:09.959Z] ========================\\n[2023-05-01T00:33:09.959Z] Weakening server foodnstuff\\n[2023-05-01T00:33:09.959Z] Progress: 15/6\\n[2023-05-01T00:33:09.959Z] ========================\\n[2023-05-01T00:33:12.976Z] ========================\\n[2023-05-01T00:33:12.976Z] Growing server foodnstuff\\n[2023-05-01T00:33:12.976Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:33:12.976Z] ========================\\n[2023-05-01T00:33:15.254Z] ========================\\n[2023-05-01T00:33:15.254Z] Weakening server foodnstuff\\n[2023-05-01T00:33:15.254Z] Progress: 15/6\\n[2023-05-01T00:33:15.254Z] ========================\\n[2023-05-01T00:33:18.272Z] ========================\\n[2023-05-01T00:33:18.272Z] Growing server foodnstuff\\n[2023-05-01T00:33:18.272Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:33:18.272Z] ========================\\n[2023-05-01T00:33:20.551Z] ========================\\n[2023-05-01T00:33:20.551Z] Weakening server foodnstuff\\n[2023-05-01T00:33:20.551Z] Progress: 15/6\\n[2023-05-01T00:33:20.551Z] ========================\\n[2023-05-01T00:33:23.568Z] ========================\\n[2023-05-01T00:33:23.568Z] Growing server foodnstuff\\n[2023-05-01T00:33:23.568Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:33:23.568Z] ========================\\n[2023-05-01T00:33:25.847Z] ========================\\n[2023-05-01T00:33:25.847Z] Weakening server foodnstuff\\n[2023-05-01T00:33:25.847Z] Progress: 14.944/6\\n[2023-05-01T00:33:25.847Z] ========================\\n[2023-05-01T00:33:29.575Z] =============== SUMMARY ===============\\n[2023-05-01T00:33:29.575Z] Initial ask price: 1730.9740451956218\\n[2023-05-01T00:33:29.575Z] Final ask price: 1736.5105932250406\\n[2023-05-01T00:33:29.575Z] Initial bid price: 1710.3262434636658\\n[2023-05-01T00:33:29.575Z] Final bid price: 1715.796749170666\\n[2023-05-01T00:33:29.575Z] =======================================\\n[2023-05-01T00:33:30.576Z] ========================\\n[2023-05-01T00:33:30.576Z] Growing server foodnstuff\\n[2023-05-01T00:33:30.576Z] Progress: 0/45000000\\n[2023-05-01T00:33:30.576Z] ========================\\n[2023-05-01T00:33:32.856Z] ========================\\n[2023-05-01T00:33:32.856Z] Weakening server foodnstuff\\n[2023-05-01T00:33:32.856Z] Progress: 15/6\\n[2023-05-01T00:33:32.856Z] ========================\\n[2023-05-01T00:33:35.873Z] ========================\\n[2023-05-01T00:33:35.873Z] Growing server foodnstuff\\n[2023-05-01T00:33:35.873Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:33:35.873Z] ========================\\n[2023-05-01T00:33:38.151Z] ========================\\n[2023-05-01T00:33:38.151Z] Weakening server foodnstuff\\n[2023-05-01T00:33:38.151Z] Progress: 15/6\\n[2023-05-01T00:33:38.151Z] ========================\\n[2023-05-01T00:33:41.169Z] ========================\\n[2023-05-01T00:33:41.169Z] Growing server foodnstuff\\n[2023-05-01T00:33:41.169Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:33:41.169Z] ========================\\n[2023-05-01T00:33:43.448Z] ========================\\n[2023-05-01T00:33:43.448Z] Weakening server foodnstuff\\n[2023-05-01T00:33:43.448Z] Progress: 15/6\\n[2023-05-01T00:33:43.448Z] ========================\\n[2023-05-01T00:33:46.465Z] ========================\\n[2023-05-01T00:33:46.465Z] Growing server foodnstuff\\n[2023-05-01T00:33:46.465Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:33:46.465Z] ========================\\n[2023-05-01T00:33:48.744Z] ========================\\n[2023-05-01T00:33:48.744Z] Weakening server foodnstuff\\n[2023-05-01T00:33:48.744Z] Progress: 15/6\\n[2023-05-01T00:33:48.744Z] ========================\\n[2023-05-01T00:33:51.762Z] ========================\\n[2023-05-01T00:33:51.762Z] Growing server foodnstuff\\n[2023-05-01T00:33:51.762Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:33:51.762Z] ========================\\n[2023-05-01T00:33:54.041Z] ========================\\n[2023-05-01T00:33:54.041Z] Weakening server foodnstuff\\n[2023-05-01T00:33:54.041Z] Progress: 15/6\\n[2023-05-01T00:33:54.041Z] ========================\\n[2023-05-01T00:33:57.059Z] ========================\\n[2023-05-01T00:33:57.059Z] Growing server foodnstuff\\n[2023-05-01T00:33:57.059Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:33:57.059Z] ========================\\n[2023-05-01T00:33:59.338Z] ========================\\n[2023-05-01T00:33:59.338Z] Weakening server foodnstuff\\n[2023-05-01T00:33:59.338Z] Progress: 14.964/6\\n[2023-05-01T00:33:59.338Z] ========================\\n[2023-05-01T00:34:03.066Z] =============== SUMMARY ===============\\n[2023-05-01T00:34:03.067Z] Initial ask price: 1736.5105932250406\\n[2023-05-01T00:34:03.067Z] Final ask price: 1743.0257418908755\\n[2023-05-01T00:34:03.067Z] Initial bid price: 1715.796749170666\\n[2023-05-01T00:34:03.067Z] Final bid price: 1722.2341823454576\\n[2023-05-01T00:34:03.067Z] =======================================\\n[2023-05-01T00:34:04.067Z] ========================\\n[2023-05-01T00:34:04.067Z] Growing server foodnstuff\\n[2023-05-01T00:34:04.067Z] Progress: 0/45000000\\n[2023-05-01T00:34:04.067Z] ========================\\n[2023-05-01T00:34:06.346Z] ========================\\n[2023-05-01T00:34:06.346Z] Weakening server foodnstuff\\n[2023-05-01T00:34:06.346Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:34:06.346Z] ========================\\n[2023-05-01T00:34:09.366Z] ========================\\n[2023-05-01T00:34:09.366Z] Growing server foodnstuff\\n[2023-05-01T00:34:09.366Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:34:09.366Z] ========================\\n[2023-05-01T00:34:11.645Z] ========================\\n[2023-05-01T00:34:11.645Z] Weakening server foodnstuff\\n[2023-05-01T00:34:11.645Z] Progress: 15/6\\n[2023-05-01T00:34:11.645Z] ========================\\n[2023-05-01T00:34:14.661Z] ========================\\n[2023-05-01T00:34:14.661Z] Growing server foodnstuff\\n[2023-05-01T00:34:14.661Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:34:14.661Z] ========================\\n[2023-05-01T00:34:16.940Z] ========================\\n[2023-05-01T00:34:16.940Z] Weakening server foodnstuff\\n[2023-05-01T00:34:16.940Z] Progress: 15/6\\n[2023-05-01T00:34:16.940Z] ========================\\n[2023-05-01T00:34:19.958Z] ========================\\n[2023-05-01T00:34:19.958Z] Growing server foodnstuff\\n[2023-05-01T00:34:19.958Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:34:19.958Z] ========================\\n[2023-05-01T00:34:22.237Z] ========================\\n[2023-05-01T00:34:22.237Z] Weakening server foodnstuff\\n[2023-05-01T00:34:22.237Z] Progress: 15/6\\n[2023-05-01T00:34:22.237Z] ========================\\n[2023-05-01T00:34:25.253Z] ========================\\n[2023-05-01T00:34:25.253Z] Growing server foodnstuff\\n[2023-05-01T00:34:25.253Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:34:25.253Z] ========================\\n[2023-05-01T00:34:27.532Z] ========================\\n[2023-05-01T00:34:27.532Z] Weakening server foodnstuff\\n[2023-05-01T00:34:27.532Z] Progress: 15/6\\n[2023-05-01T00:34:27.532Z] ========================\\n[2023-05-01T00:34:30.549Z] ========================\\n[2023-05-01T00:34:30.549Z] Growing server foodnstuff\\n[2023-05-01T00:34:30.549Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:34:30.549Z] ========================\\n[2023-05-01T00:34:32.827Z] ========================\\n[2023-05-01T00:34:32.828Z] Weakening server foodnstuff\\n[2023-05-01T00:34:32.828Z] Progress: 14.944/6\\n[2023-05-01T00:34:32.828Z] ========================\\n[2023-05-01T00:34:36.556Z] =============== SUMMARY ===============\\n[2023-05-01T00:34:36.556Z] Initial ask price: 1743.0257418908755\\n[2023-05-01T00:34:36.556Z] Final ask price: 1776.859929698164\\n[2023-05-01T00:34:36.556Z] Initial bid price: 1722.2341823454576\\n[2023-05-01T00:34:36.556Z] Final bid price: 1755.6647814313867\\n[2023-05-01T00:34:36.556Z] =======================================\\n[2023-05-01T00:34:37.557Z] ========================\\n[2023-05-01T00:34:37.557Z] Growing server foodnstuff\\n[2023-05-01T00:34:37.557Z] Progress: 0/45000000\\n[2023-05-01T00:34:37.557Z] ========================\\n[2023-05-01T00:34:39.835Z] ========================\\n[2023-05-01T00:34:39.835Z] Weakening server foodnstuff\\n[2023-05-01T00:34:39.835Z] Progress: 15.04/6\\n[2023-05-01T00:34:39.835Z] ========================\\n[2023-05-01T00:34:42.851Z] ========================\\n[2023-05-01T00:34:42.851Z] Growing server foodnstuff\\n[2023-05-01T00:34:42.851Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:34:42.851Z] ========================\\n[2023-05-01T00:34:45.128Z] ========================\\n[2023-05-01T00:34:45.128Z] Weakening server foodnstuff\\n[2023-05-01T00:34:45.128Z] Progress: 15/6\\n[2023-05-01T00:34:45.128Z] ========================\\n[2023-05-01T00:34:48.144Z] ========================\\n[2023-05-01T00:34:48.144Z] Growing server foodnstuff\\n[2023-05-01T00:34:48.144Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:34:48.144Z] ========================\\n[2023-05-01T00:34:50.422Z] ========================\\n[2023-05-01T00:34:50.422Z] Weakening server foodnstuff\\n[2023-05-01T00:34:50.422Z] Progress: 15/6\\n[2023-05-01T00:34:50.422Z] ========================\\n[2023-05-01T00:34:53.437Z] ========================\\n[2023-05-01T00:34:53.437Z] Growing server foodnstuff\\n[2023-05-01T00:34:53.437Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:34:53.437Z] ========================\\n[2023-05-01T00:34:55.715Z] ========================\\n[2023-05-01T00:34:55.715Z] Weakening server foodnstuff\\n[2023-05-01T00:34:55.715Z] Progress: 15/6\\n[2023-05-01T00:34:55.715Z] ========================\\n[2023-05-01T00:34:58.730Z] ========================\\n[2023-05-01T00:34:58.730Z] Growing server foodnstuff\\n[2023-05-01T00:34:58.730Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:34:58.730Z] ========================\\n[2023-05-01T00:35:01.007Z] ========================\\n[2023-05-01T00:35:01.007Z] Weakening server foodnstuff\\n[2023-05-01T00:35:01.007Z] Progress: 15/6\\n[2023-05-01T00:35:01.007Z] ========================\\n[2023-05-01T00:35:04.022Z] ========================\\n[2023-05-01T00:35:04.022Z] Growing server foodnstuff\\n[2023-05-01T00:35:04.022Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:35:04.022Z] ========================\\n[2023-05-01T00:35:06.301Z] ========================\\n[2023-05-01T00:35:06.301Z] Weakening server foodnstuff\\n[2023-05-01T00:35:06.301Z] Progress: 14.944/6\\n[2023-05-01T00:35:06.301Z] ========================\\n[2023-05-01T00:35:10.028Z] =============== SUMMARY ===============\\n[2023-05-01T00:35:10.028Z] Initial ask price: 1772.663863897599\\n[2023-05-01T00:35:10.028Z] Final ask price: 1762.9513383042868\\n[2023-05-01T00:35:10.028Z] Initial bid price: 1751.5187681055797\\n[2023-05-01T00:35:10.028Z] Final bid price: 1741.9220976883312\\n[2023-05-01T00:35:10.028Z] =======================================\\n[2023-05-01T00:35:11.029Z] ========================\\n[2023-05-01T00:35:11.029Z] Growing server foodnstuff\\n[2023-05-01T00:35:11.029Z] Progress: 0/45000000\\n[2023-05-01T00:35:11.029Z] ========================\\n[2023-05-01T00:35:13.309Z] ========================\\n[2023-05-01T00:35:13.309Z] Weakening server foodnstuff\\n[2023-05-01T00:35:13.309Z] Progress: 15/6\\n[2023-05-01T00:35:13.309Z] ========================\\n[2023-05-01T00:35:16.326Z] ========================\\n[2023-05-01T00:35:16.326Z] Growing server foodnstuff\\n[2023-05-01T00:35:16.326Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:35:16.326Z] ========================\\n[2023-05-01T00:35:18.603Z] ========================\\n[2023-05-01T00:35:18.604Z] Weakening server foodnstuff\\n[2023-05-01T00:35:18.604Z] Progress: 15/6\\n[2023-05-01T00:35:18.604Z] ========================\\n[2023-05-01T00:35:21.619Z] ========================\\n[2023-05-01T00:35:21.619Z] Growing server foodnstuff\\n[2023-05-01T00:35:21.619Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:35:21.619Z] ========================\\n[2023-05-01T00:35:23.897Z] ========================\\n[2023-05-01T00:35:23.897Z] Weakening server foodnstuff\\n[2023-05-01T00:35:23.897Z] Progress: 15/6\\n[2023-05-01T00:35:23.897Z] ========================\\n[2023-05-01T00:35:26.913Z] ========================\\n[2023-05-01T00:35:26.913Z] Growing server foodnstuff\\n[2023-05-01T00:35:26.913Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:35:26.913Z] ========================\\n[2023-05-01T00:35:29.191Z] ========================\\n[2023-05-01T00:35:29.191Z] Weakening server foodnstuff\\n[2023-05-01T00:35:29.191Z] Progress: 15/6\\n[2023-05-01T00:35:29.191Z] ========================\\n[2023-05-01T00:35:32.207Z] ========================\\n[2023-05-01T00:35:32.207Z] Growing server foodnstuff\\n[2023-05-01T00:35:32.207Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:35:32.207Z] ========================\\n[2023-05-01T00:35:34.486Z] ========================\\n[2023-05-01T00:35:34.486Z] Weakening server foodnstuff\\n[2023-05-01T00:35:34.486Z] Progress: 15/6\\n[2023-05-01T00:35:34.486Z] ========================\\n[2023-05-01T00:35:37.501Z] ========================\\n[2023-05-01T00:35:37.501Z] Growing server foodnstuff\\n[2023-05-01T00:35:37.501Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:35:37.501Z] ========================\\n[2023-05-01T00:35:39.780Z] ========================\\n[2023-05-01T00:35:39.780Z] Weakening server foodnstuff\\n[2023-05-01T00:35:39.780Z] Progress: 14.964/6\\n[2023-05-01T00:35:39.780Z] ========================\\n[2023-05-01T00:35:43.507Z] =============== SUMMARY ===============\\n[2023-05-01T00:35:43.507Z] Initial ask price: 1762.9513383042868\\n[2023-05-01T00:35:43.507Z] Final ask price: 1747.6281091167266\\n[2023-05-01T00:35:43.507Z] Initial bid price: 1741.9220976883312\\n[2023-05-01T00:35:43.507Z] Final bid price: 1726.7816505586743\\n[2023-05-01T00:35:43.507Z] =======================================\\n[2023-05-01T00:35:44.508Z] ========================\\n[2023-05-01T00:35:44.508Z] Growing server foodnstuff\\n[2023-05-01T00:35:44.508Z] Progress: 0/45000000\\n[2023-05-01T00:35:44.508Z] ========================\\n[2023-05-01T00:35:46.788Z] ========================\\n[2023-05-01T00:35:46.788Z] Weakening server foodnstuff\\n[2023-05-01T00:35:46.788Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:35:46.788Z] ========================\\n[2023-05-01T00:35:49.805Z] ========================\\n[2023-05-01T00:35:49.805Z] Growing server foodnstuff\\n[2023-05-01T00:35:49.805Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:35:49.805Z] ========================\\n[2023-05-01T00:35:52.084Z] ========================\\n[2023-05-01T00:35:52.084Z] Weakening server foodnstuff\\n[2023-05-01T00:35:52.084Z] Progress: 15/6\\n[2023-05-01T00:35:52.084Z] ========================\\n[2023-05-01T00:35:55.100Z] ========================\\n[2023-05-01T00:35:55.100Z] Growing server foodnstuff\\n[2023-05-01T00:35:55.100Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:35:55.100Z] ========================\\n[2023-05-01T00:35:57.377Z] ========================\\n[2023-05-01T00:35:57.377Z] Weakening server foodnstuff\\n[2023-05-01T00:35:57.377Z] Progress: 15/6\\n[2023-05-01T00:35:57.377Z] ========================\\n[2023-05-01T00:36:00.391Z] ========================\\n[2023-05-01T00:36:00.391Z] Growing server foodnstuff\\n[2023-05-01T00:36:00.391Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:36:00.391Z] ========================\\n[2023-05-01T00:36:02.669Z] ========================\\n[2023-05-01T00:36:02.669Z] Weakening server foodnstuff\\n[2023-05-01T00:36:02.669Z] Progress: 15/6\\n[2023-05-01T00:36:02.669Z] ========================\\n[2023-05-01T00:36:05.685Z] ========================\\n[2023-05-01T00:36:05.685Z] Growing server foodnstuff\\n[2023-05-01T00:36:05.685Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:36:05.685Z] ========================\\n[2023-05-01T00:36:07.962Z] ========================\\n[2023-05-01T00:36:07.962Z] Weakening server foodnstuff\\n[2023-05-01T00:36:07.962Z] Progress: 15/6\\n[2023-05-01T00:36:07.962Z] ========================\\n[2023-05-01T00:36:10.978Z] ========================\\n[2023-05-01T00:36:10.978Z] Growing server foodnstuff\\n[2023-05-01T00:36:10.978Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:36:10.978Z] ========================\\n[2023-05-01T00:36:13.255Z] ========================\\n[2023-05-01T00:36:13.255Z] Weakening server foodnstuff\\n[2023-05-01T00:36:13.255Z] Progress: 14.944/6\\n[2023-05-01T00:36:13.255Z] ========================\\n[2023-05-01T00:36:16.983Z] =============== SUMMARY ===============\\n[2023-05-01T00:36:16.983Z] Initial ask price: 1747.6281091167266\\n[2023-05-01T00:36:16.983Z] Final ask price: 1762.670027234405\\n[2023-05-01T00:36:16.983Z] Initial bid price: 1726.7816505586743\\n[2023-05-01T00:36:16.983Z] Final bid price: 1741.6441422176927\\n[2023-05-01T00:36:16.983Z] =======================================\\n[2023-05-01T00:36:17.984Z] ========================\\n[2023-05-01T00:36:17.984Z] Growing server foodnstuff\\n[2023-05-01T00:36:17.984Z] Progress: 0/45000000\\n[2023-05-01T00:36:17.984Z] ========================\\n[2023-05-01T00:36:20.262Z] ========================\\n[2023-05-01T00:36:20.262Z] Weakening server foodnstuff\\n[2023-05-01T00:36:20.262Z] Progress: 15.04/6\\n[2023-05-01T00:36:20.262Z] ========================\\n[2023-05-01T00:36:23.278Z] ========================\\n[2023-05-01T00:36:23.278Z] Growing server foodnstuff\\n[2023-05-01T00:36:23.278Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:36:23.278Z] ========================\\n[2023-05-01T00:36:25.556Z] ========================\\n[2023-05-01T00:36:25.556Z] Weakening server foodnstuff\\n[2023-05-01T00:36:25.556Z] Progress: 15/6\\n[2023-05-01T00:36:25.556Z] ========================\\n[2023-05-01T00:36:28.572Z] ========================\\n[2023-05-01T00:36:28.572Z] Growing server foodnstuff\\n[2023-05-01T00:36:28.572Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:36:28.572Z] ========================\\n[2023-05-01T00:36:30.849Z] ========================\\n[2023-05-01T00:36:30.849Z] Weakening server foodnstuff\\n[2023-05-01T00:36:30.849Z] Progress: 15/6\\n[2023-05-01T00:36:30.849Z] ========================\\n[2023-05-01T00:36:33.864Z] ========================\\n[2023-05-01T00:36:33.864Z] Growing server foodnstuff\\n[2023-05-01T00:36:33.864Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:36:33.864Z] ========================\\n[2023-05-01T00:36:36.142Z] ========================\\n[2023-05-01T00:36:36.142Z] Weakening server foodnstuff\\n[2023-05-01T00:36:36.142Z] Progress: 15/6\\n[2023-05-01T00:36:36.142Z] ========================\\n[2023-05-01T00:36:39.156Z] ========================\\n[2023-05-01T00:36:39.156Z] Growing server foodnstuff\\n[2023-05-01T00:36:39.156Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:36:39.156Z] ========================\\n[2023-05-01T00:36:41.435Z] ========================\\n[2023-05-01T00:36:41.435Z] Weakening server foodnstuff\\n[2023-05-01T00:36:41.435Z] Progress: 15/6\\n[2023-05-01T00:36:41.435Z] ========================\\n[2023-05-01T00:36:44.450Z] ========================\\n[2023-05-01T00:36:44.450Z] Growing server foodnstuff\\n[2023-05-01T00:36:44.450Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:36:44.450Z] ========================\\n[2023-05-01T00:36:46.728Z] ========================\\n[2023-05-01T00:36:46.728Z] Weakening server foodnstuff\\n[2023-05-01T00:36:46.728Z] Progress: 14.944/6\\n[2023-05-01T00:36:46.728Z] ========================\\n[2023-05-01T00:36:50.455Z] =============== SUMMARY ===============\\n[2023-05-01T00:36:50.455Z] Initial ask price: 1762.670027234405\\n[2023-05-01T00:36:50.455Z] Final ask price: 1803.7685876592652\\n[2023-05-01T00:36:50.455Z] Initial bid price: 1741.6441422176927\\n[2023-05-01T00:36:50.455Z] Final bid price: 1782.2524613651187\\n[2023-05-01T00:36:50.455Z] =======================================\\n[2023-05-01T00:36:51.455Z] ========================\\n[2023-05-01T00:36:51.455Z] Growing server foodnstuff\\n[2023-05-01T00:36:51.455Z] Progress: 0/45000000\\n[2023-05-01T00:36:51.455Z] ========================\\n[2023-05-01T00:36:53.735Z] ========================\\n[2023-05-01T00:36:53.735Z] Weakening server foodnstuff\\n[2023-05-01T00:36:53.735Z] Progress: 15/6\\n[2023-05-01T00:36:53.735Z] ========================\\n[2023-05-01T00:36:56.751Z] ========================\\n[2023-05-01T00:36:56.751Z] Growing server foodnstuff\\n[2023-05-01T00:36:56.751Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:36:56.751Z] ========================\\n[2023-05-01T00:36:59.028Z] ========================\\n[2023-05-01T00:36:59.028Z] Weakening server foodnstuff\\n[2023-05-01T00:36:59.028Z] Progress: 15/6\\n[2023-05-01T00:36:59.028Z] ========================\\n[2023-05-01T00:37:02.038Z] ========================\\n[2023-05-01T00:37:02.038Z] Growing server foodnstuff\\n[2023-05-01T00:37:02.039Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:37:02.039Z] ========================\\n[2023-05-01T00:37:04.313Z] ========================\\n[2023-05-01T00:37:04.313Z] Weakening server foodnstuff\\n[2023-05-01T00:37:04.313Z] Progress: 15/6\\n[2023-05-01T00:37:04.313Z] ========================\\n[2023-05-01T00:37:07.324Z] ========================\\n[2023-05-01T00:37:07.325Z] Growing server foodnstuff\\n[2023-05-01T00:37:07.325Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:37:07.325Z] ========================\\n[2023-05-01T00:37:09.600Z] ========================\\n[2023-05-01T00:37:09.600Z] Weakening server foodnstuff\\n[2023-05-01T00:37:09.600Z] Progress: 15/6\\n[2023-05-01T00:37:09.600Z] ========================\\n[2023-05-01T00:37:12.612Z] ========================\\n[2023-05-01T00:37:12.612Z] Growing server foodnstuff\\n[2023-05-01T00:37:12.612Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:37:12.612Z] ========================\\n[2023-05-01T00:37:14.886Z] ========================\\n[2023-05-01T00:37:14.886Z] Weakening server foodnstuff\\n[2023-05-01T00:37:14.886Z] Progress: 15/6\\n[2023-05-01T00:37:14.886Z] ========================\\n[2023-05-01T00:37:17.898Z] ========================\\n[2023-05-01T00:37:17.898Z] Growing server foodnstuff\\n[2023-05-01T00:37:17.898Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:37:17.898Z] ========================\\n[2023-05-01T00:37:20.173Z] ========================\\n[2023-05-01T00:37:20.173Z] Weakening server foodnstuff\\n[2023-05-01T00:37:20.173Z] Progress: 14.964/6\\n[2023-05-01T00:37:20.173Z] ========================\\n[2023-05-01T00:37:23.896Z] =============== SUMMARY ===============\\n[2023-05-01T00:37:23.896Z] Initial ask price: 1803.7685876592652\\n[2023-05-01T00:37:23.896Z] Final ask price: 1784.455142141053\\n[2023-05-01T00:37:23.896Z] Initial bid price: 1782.2524613651187\\n[2023-05-01T00:37:23.896Z] Final bid price: 1763.1693949186945\\n[2023-05-01T00:37:23.896Z] =======================================\\n[2023-05-01T00:37:24.896Z] ========================\\n[2023-05-01T00:37:24.896Z] Growing server foodnstuff\\n[2023-05-01T00:37:24.896Z] Progress: 0/45000000\\n[2023-05-01T00:37:24.896Z] ========================\\n[2023-05-01T00:37:27.171Z] ========================\\n[2023-05-01T00:37:27.171Z] Weakening server foodnstuff\\n[2023-05-01T00:37:27.171Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:37:27.171Z] ========================\\n[2023-05-01T00:37:30.184Z] ========================\\n[2023-05-01T00:37:30.184Z] Growing server foodnstuff\\n[2023-05-01T00:37:30.184Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:37:30.184Z] ========================\\n[2023-05-01T00:37:32.459Z] ========================\\n[2023-05-01T00:37:32.459Z] Weakening server foodnstuff\\n[2023-05-01T00:37:32.459Z] Progress: 15/6\\n[2023-05-01T00:37:32.459Z] ========================\\n[2023-05-01T00:37:35.469Z] ========================\\n[2023-05-01T00:37:35.469Z] Growing server foodnstuff\\n[2023-05-01T00:37:35.469Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:37:35.469Z] ========================\\n[2023-05-01T00:37:37.743Z] ========================\\n[2023-05-01T00:37:37.743Z] Weakening server foodnstuff\\n[2023-05-01T00:37:37.743Z] Progress: 15/6\\n[2023-05-01T00:37:37.743Z] ========================\\n[2023-05-01T00:37:40.752Z] ========================\\n[2023-05-01T00:37:40.753Z] Growing server foodnstuff\\n[2023-05-01T00:37:40.753Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:37:40.753Z] ========================\\n[2023-05-01T00:37:43.026Z] ========================\\n[2023-05-01T00:37:43.026Z] Weakening server foodnstuff\\n[2023-05-01T00:37:43.026Z] Progress: 15/6\\n[2023-05-01T00:37:43.026Z] ========================\\n[2023-05-01T00:37:46.037Z] ========================\\n[2023-05-01T00:37:46.037Z] Growing server foodnstuff\\n[2023-05-01T00:37:46.037Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:37:46.037Z] ========================\\n[2023-05-01T00:37:48.310Z] ========================\\n[2023-05-01T00:37:48.311Z] Weakening server foodnstuff\\n[2023-05-01T00:37:48.311Z] Progress: 15/6\\n[2023-05-01T00:37:48.311Z] ========================\\n[2023-05-01T00:37:51.321Z] ========================\\n[2023-05-01T00:37:51.321Z] Growing server foodnstuff\\n[2023-05-01T00:37:51.321Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:37:51.321Z] ========================\\n[2023-05-01T00:37:53.595Z] ========================\\n[2023-05-01T00:37:53.595Z] Weakening server foodnstuff\\n[2023-05-01T00:37:53.595Z] Progress: 14.944/6\\n[2023-05-01T00:37:53.595Z] ========================\\n[2023-05-01T00:37:57.316Z] =============== SUMMARY ===============\\n[2023-05-01T00:37:57.316Z] Initial ask price: 1784.455142141053\\n[2023-05-01T00:37:57.316Z] Final ask price: 1754.377166634324\\n[2023-05-01T00:37:57.316Z] Initial bid price: 1763.1693949186945\\n[2023-05-01T00:37:57.316Z] Final bid price: 1733.4502024199983\\n[2023-05-01T00:37:57.316Z] =======================================\\n[2023-05-01T00:37:58.316Z] ========================\\n[2023-05-01T00:37:58.316Z] Growing server foodnstuff\\n[2023-05-01T00:37:58.316Z] Progress: 0/45000000\\n[2023-05-01T00:37:58.316Z] ========================\\n[2023-05-01T00:38:00.590Z] ========================\\n[2023-05-01T00:38:00.590Z] Weakening server foodnstuff\\n[2023-05-01T00:38:00.590Z] Progress: 15.04/6\\n[2023-05-01T00:38:00.590Z] ========================\\n[2023-05-01T00:38:03.600Z] ========================\\n[2023-05-01T00:38:03.600Z] Growing server foodnstuff\\n[2023-05-01T00:38:03.600Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:38:03.600Z] ========================\\n[2023-05-01T00:38:05.874Z] ========================\\n[2023-05-01T00:38:05.874Z] Weakening server foodnstuff\\n[2023-05-01T00:38:05.874Z] Progress: 15/6\\n[2023-05-01T00:38:05.874Z] ========================\\n[2023-05-01T00:38:08.973Z] ========================\\n[2023-05-01T00:38:08.973Z] Growing server foodnstuff\\n[2023-05-01T00:38:08.973Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:38:08.973Z] ========================\\n[2023-05-01T00:38:11.247Z] ========================\\n[2023-05-01T00:38:11.247Z] Weakening server foodnstuff\\n[2023-05-01T00:38:11.247Z] Progress: 15/6\\n[2023-05-01T00:38:11.247Z] ========================\\n[2023-05-01T00:38:14.256Z] ========================\\n[2023-05-01T00:38:14.256Z] Growing server foodnstuff\\n[2023-05-01T00:38:14.256Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:38:14.256Z] ========================\\n[2023-05-01T00:38:16.530Z] ========================\\n[2023-05-01T00:38:16.530Z] Weakening server foodnstuff\\n[2023-05-01T00:38:16.530Z] Progress: 15/6\\n[2023-05-01T00:38:16.530Z] ========================\\n[2023-05-01T00:38:19.540Z] ========================\\n[2023-05-01T00:38:19.540Z] Growing server foodnstuff\\n[2023-05-01T00:38:19.540Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:38:19.540Z] ========================\\n[2023-05-01T00:38:21.814Z] ========================\\n[2023-05-01T00:38:21.814Z] Weakening server foodnstuff\\n[2023-05-01T00:38:21.814Z] Progress: 15/6\\n[2023-05-01T00:38:21.814Z] ========================\\n[2023-05-01T00:38:24.825Z] ========================\\n[2023-05-01T00:38:24.825Z] Growing server foodnstuff\\n[2023-05-01T00:38:24.825Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:38:24.825Z] ========================\\n[2023-05-01T00:38:27.098Z] ========================\\n[2023-05-01T00:38:27.098Z] Weakening server foodnstuff\\n[2023-05-01T00:38:27.098Z] Progress: 14.944/6\\n[2023-05-01T00:38:27.098Z] ========================\\n[2023-05-01T00:38:30.818Z] =============== SUMMARY ===============\\n[2023-05-01T00:38:30.818Z] Initial ask price: 1754.377166634324\\n[2023-05-01T00:38:30.818Z] Final ask price: 1777.301687423766\\n[2023-05-01T00:38:30.818Z] Initial bid price: 1733.4502024199983\\n[2023-05-01T00:38:30.818Z] Final bid price: 1756.1012696811367\\n[2023-05-01T00:38:30.818Z] =======================================\\n[2023-05-01T00:38:31.819Z] ========================\\n[2023-05-01T00:38:31.819Z] Growing server foodnstuff\\n[2023-05-01T00:38:31.819Z] Progress: 0/45000000\\n[2023-05-01T00:38:31.819Z] ========================\\n[2023-05-01T00:38:34.095Z] ========================\\n[2023-05-01T00:38:34.095Z] Weakening server foodnstuff\\n[2023-05-01T00:38:34.095Z] Progress: 15/6\\n[2023-05-01T00:38:34.095Z] ========================\\n[2023-05-01T00:38:37.106Z] ========================\\n[2023-05-01T00:38:37.106Z] Growing server foodnstuff\\n[2023-05-01T00:38:37.106Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:38:37.106Z] ========================\\n[2023-05-01T00:38:39.378Z] ========================\\n[2023-05-01T00:38:39.378Z] Weakening server foodnstuff\\n[2023-05-01T00:38:39.378Z] Progress: 15/6\\n[2023-05-01T00:38:39.378Z] ========================\\n[2023-05-01T00:38:42.387Z] ========================\\n[2023-05-01T00:38:42.387Z] Growing server foodnstuff\\n[2023-05-01T00:38:42.387Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:38:42.387Z] ========================\\n[2023-05-01T00:38:44.660Z] ========================\\n[2023-05-01T00:38:44.660Z] Weakening server foodnstuff\\n[2023-05-01T00:38:44.660Z] Progress: 15/6\\n[2023-05-01T00:38:44.660Z] ========================\\n[2023-05-01T00:38:47.670Z] ========================\\n[2023-05-01T00:38:47.670Z] Growing server foodnstuff\\n[2023-05-01T00:38:47.670Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:38:47.670Z] ========================\\n[2023-05-01T00:38:49.943Z] ========================\\n[2023-05-01T00:38:49.943Z] Weakening server foodnstuff\\n[2023-05-01T00:38:49.943Z] Progress: 15/6\\n[2023-05-01T00:38:49.943Z] ========================\\n[2023-05-01T00:38:52.951Z] ========================\\n[2023-05-01T00:38:52.951Z] Growing server foodnstuff\\n[2023-05-01T00:38:52.951Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:38:52.951Z] ========================\\n[2023-05-01T00:38:55.225Z] ========================\\n[2023-05-01T00:38:55.225Z] Weakening server foodnstuff\\n[2023-05-01T00:38:55.225Z] Progress: 15/6\\n[2023-05-01T00:38:55.225Z] ========================\\n[2023-05-01T00:38:58.234Z] ========================\\n[2023-05-01T00:38:58.234Z] Growing server foodnstuff\\n[2023-05-01T00:38:58.234Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:38:58.234Z] ========================\\n[2023-05-01T00:39:00.507Z] ========================\\n[2023-05-01T00:39:00.507Z] Weakening server foodnstuff\\n[2023-05-01T00:39:00.507Z] Progress: 14.964/6\\n[2023-05-01T00:39:00.507Z] ========================\\n[2023-05-01T00:39:04.225Z] =============== SUMMARY ===============\\n[2023-05-01T00:39:04.225Z] Initial ask price: 1768.1606360867254\\n[2023-05-01T00:39:04.225Z] Final ask price: 1772.9882783100272\\n[2023-05-01T00:39:04.225Z] Initial bid price: 1747.069256729826\\n[2023-05-01T00:39:04.225Z] Final bid price: 1751.8393127635857\\n[2023-05-01T00:39:04.225Z] =======================================\\n[2023-05-01T00:39:05.226Z] ========================\\n[2023-05-01T00:39:05.226Z] Growing server foodnstuff\\n[2023-05-01T00:39:05.226Z] Progress: 0/45000000\\n[2023-05-01T00:39:05.226Z] ========================\\n[2023-05-01T00:39:07.500Z] ========================\\n[2023-05-01T00:39:07.500Z] Weakening server foodnstuff\\n[2023-05-01T00:39:07.500Z] Progress: 15/6\\n[2023-05-01T00:39:07.500Z] ========================\\n[2023-05-01T00:39:10.509Z] ========================\\n[2023-05-01T00:39:10.509Z] Growing server foodnstuff\\n[2023-05-01T00:39:10.509Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:39:10.509Z] ========================\\n[2023-05-01T00:39:12.782Z] ========================\\n[2023-05-01T00:39:12.782Z] Weakening server foodnstuff\\n[2023-05-01T00:39:12.782Z] Progress: 15/6\\n[2023-05-01T00:39:12.782Z] ========================\\n[2023-05-01T00:39:15.791Z] ========================\\n[2023-05-01T00:39:15.791Z] Growing server foodnstuff\\n[2023-05-01T00:39:15.791Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:39:15.791Z] ========================\\n[2023-05-01T00:39:18.065Z] ========================\\n[2023-05-01T00:39:18.065Z] Weakening server foodnstuff\\n[2023-05-01T00:39:18.065Z] Progress: 15/6\\n[2023-05-01T00:39:18.065Z] ========================\\n[2023-05-01T00:39:21.074Z] ========================\\n[2023-05-01T00:39:21.074Z] Growing server foodnstuff\\n[2023-05-01T00:39:21.074Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:39:21.074Z] ========================\\n[2023-05-01T00:39:23.347Z] ========================\\n[2023-05-01T00:39:23.347Z] Weakening server foodnstuff\\n[2023-05-01T00:39:23.347Z] Progress: 15/6\\n[2023-05-01T00:39:23.347Z] ========================\\n[2023-05-01T00:39:26.356Z] ========================\\n[2023-05-01T00:39:26.356Z] Growing server foodnstuff\\n[2023-05-01T00:39:26.356Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:39:26.356Z] ========================\\n[2023-05-01T00:39:28.630Z] ========================\\n[2023-05-01T00:39:28.630Z] Weakening server foodnstuff\\n[2023-05-01T00:39:28.630Z] Progress: 15/6\\n[2023-05-01T00:39:28.630Z] ========================\\n[2023-05-01T00:39:31.639Z] ========================\\n[2023-05-01T00:39:31.639Z] Growing server foodnstuff\\n[2023-05-01T00:39:31.639Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:39:31.639Z] ========================\\n[2023-05-01T00:39:33.912Z] ========================\\n[2023-05-01T00:39:33.912Z] Weakening server foodnstuff\\n[2023-05-01T00:39:33.912Z] Progress: 14.964/6\\n[2023-05-01T00:39:33.912Z] ========================\\n[2023-05-01T00:39:37.632Z] =============== SUMMARY ===============\\n[2023-05-01T00:39:37.632Z] Initial ask price: 1772.9882783100272\\n[2023-05-01T00:39:37.632Z] Final ask price: 1790.4065747044765\\n[2023-05-01T00:39:37.632Z] Initial bid price: 1751.8393127635857\\n[2023-05-01T00:39:37.632Z] Final bid price: 1769.0498362388166\\n[2023-05-01T00:39:37.632Z] =======================================\\n[2023-05-01T00:39:38.634Z] ========================\\n[2023-05-01T00:39:38.634Z] Growing server foodnstuff\\n[2023-05-01T00:39:38.634Z] Progress: 0/45000000\\n[2023-05-01T00:39:38.634Z] ========================\\n[2023-05-01T00:39:40.908Z] ========================\\n[2023-05-01T00:39:40.908Z] Weakening server foodnstuff\\n[2023-05-01T00:39:40.908Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:39:40.908Z] ========================\\n[2023-05-01T00:39:43.918Z] ========================\\n[2023-05-01T00:39:43.918Z] Growing server foodnstuff\\n[2023-05-01T00:39:43.918Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:39:43.918Z] ========================\\n[2023-05-01T00:39:46.191Z] ========================\\n[2023-05-01T00:39:46.191Z] Weakening server foodnstuff\\n[2023-05-01T00:39:46.191Z] Progress: 15/6\\n[2023-05-01T00:39:46.191Z] ========================\\n[2023-05-01T00:39:49.201Z] ========================\\n[2023-05-01T00:39:49.201Z] Growing server foodnstuff\\n[2023-05-01T00:39:49.201Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:39:49.201Z] ========================\\n[2023-05-01T00:39:51.474Z] ========================\\n[2023-05-01T00:39:51.474Z] Weakening server foodnstuff\\n[2023-05-01T00:39:51.474Z] Progress: 15/6\\n[2023-05-01T00:39:51.474Z] ========================\\n[2023-05-01T00:39:54.483Z] ========================\\n[2023-05-01T00:39:54.483Z] Growing server foodnstuff\\n[2023-05-01T00:39:54.483Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:39:54.483Z] ========================\\n[2023-05-01T00:39:56.756Z] ========================\\n[2023-05-01T00:39:56.756Z] Weakening server foodnstuff\\n[2023-05-01T00:39:56.756Z] Progress: 15/6\\n[2023-05-01T00:39:56.756Z] ========================\\n[2023-05-01T00:39:59.766Z] ========================\\n[2023-05-01T00:39:59.766Z] Growing server foodnstuff\\n[2023-05-01T00:39:59.766Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:39:59.766Z] ========================\\n[2023-05-01T00:40:02.039Z] ========================\\n[2023-05-01T00:40:02.039Z] Weakening server foodnstuff\\n[2023-05-01T00:40:02.039Z] Progress: 15/6\\n[2023-05-01T00:40:02.039Z] ========================\\n[2023-05-01T00:40:05.048Z] ========================\\n[2023-05-01T00:40:05.048Z] Growing server foodnstuff\\n[2023-05-01T00:40:05.048Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:40:05.048Z] ========================\\n[2023-05-01T00:40:07.321Z] ========================\\n[2023-05-01T00:40:07.321Z] Weakening server foodnstuff\\n[2023-05-01T00:40:07.321Z] Progress: 14.944/6\\n[2023-05-01T00:40:07.321Z] ========================\\n[2023-05-01T00:40:11.040Z] =============== SUMMARY ===============\\n[2023-05-01T00:40:11.040Z] Initial ask price: 1790.4065747044765\\n[2023-05-01T00:40:11.040Z] Final ask price: 1783.6724141920506\\n[2023-05-01T00:40:11.040Z] Initial bid price: 1769.0498362388166\\n[2023-05-01T00:40:11.040Z] Final bid price: 1762.3960036847895\\n[2023-05-01T00:40:11.040Z] =======================================\\n[2023-05-01T00:40:12.041Z] ========================\\n[2023-05-01T00:40:12.041Z] Growing server foodnstuff\\n[2023-05-01T00:40:12.041Z] Progress: 0/45000000\\n[2023-05-01T00:40:12.041Z] ========================\\n[2023-05-01T00:40:14.314Z] ========================\\n[2023-05-01T00:40:14.314Z] Weakening server foodnstuff\\n[2023-05-01T00:40:14.314Z] Progress: 15.04/6\\n[2023-05-01T00:40:14.314Z] ========================\\n[2023-05-01T00:40:17.323Z] ========================\\n[2023-05-01T00:40:17.323Z] Growing server foodnstuff\\n[2023-05-01T00:40:17.323Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:40:17.323Z] ========================\\n[2023-05-01T00:40:19.596Z] ========================\\n[2023-05-01T00:40:19.596Z] Weakening server foodnstuff\\n[2023-05-01T00:40:19.596Z] Progress: 15/6\\n[2023-05-01T00:40:19.596Z] ========================\\n[2023-05-01T00:40:22.604Z] ========================\\n[2023-05-01T00:40:22.604Z] Growing server foodnstuff\\n[2023-05-01T00:40:22.604Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:40:22.604Z] ========================\\n[2023-05-01T00:40:24.878Z] ========================\\n[2023-05-01T00:40:24.878Z] Weakening server foodnstuff\\n[2023-05-01T00:40:24.878Z] Progress: 15/6\\n[2023-05-01T00:40:24.878Z] ========================\\n[2023-05-01T00:40:27.888Z] ========================\\n[2023-05-01T00:40:27.888Z] Growing server foodnstuff\\n[2023-05-01T00:40:27.888Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:40:27.888Z] ========================\\n[2023-05-01T00:40:30.161Z] ========================\\n[2023-05-01T00:40:30.161Z] Weakening server foodnstuff\\n[2023-05-01T00:40:30.161Z] Progress: 15/6\\n[2023-05-01T00:40:30.161Z] ========================\\n[2023-05-01T00:40:33.173Z] ========================\\n[2023-05-01T00:40:33.173Z] Growing server foodnstuff\\n[2023-05-01T00:40:33.173Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:40:33.173Z] ========================\\n[2023-05-01T00:40:35.446Z] ========================\\n[2023-05-01T00:40:35.446Z] Weakening server foodnstuff\\n[2023-05-01T00:40:35.446Z] Progress: 15/6\\n[2023-05-01T00:40:35.446Z] ========================\\n[2023-05-01T00:40:38.453Z] ========================\\n[2023-05-01T00:40:38.453Z] Growing server foodnstuff\\n[2023-05-01T00:40:38.453Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:40:38.453Z] ========================\\n[2023-05-01T00:40:40.721Z] ========================\\n[2023-05-01T00:40:40.722Z] Weakening server foodnstuff\\n[2023-05-01T00:40:40.722Z] Progress: 14.944/6\\n[2023-05-01T00:40:40.722Z] ========================\\n[2023-05-01T00:40:44.436Z] =============== SUMMARY ===============\\n[2023-05-01T00:40:44.436Z] Initial ask price: 1783.6724141920506\\n[2023-05-01T00:40:44.436Z] Final ask price: 1786.4078479347597\\n[2023-05-01T00:40:44.436Z] Initial bid price: 1762.3960036847895\\n[2023-05-01T00:40:44.436Z] Final bid price: 1765.0988079991564\\n[2023-05-01T00:40:44.436Z] =======================================\\n[2023-05-01T00:40:45.437Z] ========================\\n[2023-05-01T00:40:45.437Z] Growing server foodnstuff\\n[2023-05-01T00:40:45.437Z] Progress: 0/45000000\\n[2023-05-01T00:40:45.437Z] ========================\\n[2023-05-01T00:40:47.708Z] ========================\\n[2023-05-01T00:40:47.708Z] Weakening server foodnstuff\\n[2023-05-01T00:40:47.708Z] Progress: 15/6\\n[2023-05-01T00:40:47.708Z] ========================\\n[2023-05-01T00:40:50.712Z] ========================\\n[2023-05-01T00:40:50.712Z] Growing server foodnstuff\\n[2023-05-01T00:40:50.712Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:40:50.712Z] ========================\\n[2023-05-01T00:40:52.981Z] ========================\\n[2023-05-01T00:40:52.981Z] Weakening server foodnstuff\\n[2023-05-01T00:40:52.981Z] Progress: 15/6\\n[2023-05-01T00:40:52.981Z] ========================\\n[2023-05-01T00:40:55.985Z] ========================\\n[2023-05-01T00:40:55.985Z] Growing server foodnstuff\\n[2023-05-01T00:40:55.985Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:40:55.985Z] ========================\\n[2023-05-01T00:40:58.254Z] ========================\\n[2023-05-01T00:40:58.254Z] Weakening server foodnstuff\\n[2023-05-01T00:40:58.255Z] Progress: 15/6\\n[2023-05-01T00:40:58.255Z] ========================\\n[2023-05-01T00:41:01.259Z] ========================\\n[2023-05-01T00:41:01.259Z] Growing server foodnstuff\\n[2023-05-01T00:41:01.259Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:41:01.259Z] ========================\\n[2023-05-01T00:41:03.527Z] ========================\\n[2023-05-01T00:41:03.527Z] Weakening server foodnstuff\\n[2023-05-01T00:41:03.527Z] Progress: 15/6\\n[2023-05-01T00:41:03.527Z] ========================\\n[2023-05-01T00:41:06.531Z] ========================\\n[2023-05-01T00:41:06.531Z] Growing server foodnstuff\\n[2023-05-01T00:41:06.531Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:41:06.531Z] ========================\\n[2023-05-01T00:41:08.801Z] ========================\\n[2023-05-01T00:41:08.801Z] Weakening server foodnstuff\\n[2023-05-01T00:41:08.801Z] Progress: 15/6\\n[2023-05-01T00:41:08.801Z] ========================\\n[2023-05-01T00:41:11.804Z] ========================\\n[2023-05-01T00:41:11.804Z] Growing server foodnstuff\\n[2023-05-01T00:41:11.804Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:41:11.804Z] ========================\\n[2023-05-01T00:41:14.073Z] ========================\\n[2023-05-01T00:41:14.073Z] Weakening server foodnstuff\\n[2023-05-01T00:41:14.073Z] Progress: 14.964/6\\n[2023-05-01T00:41:14.073Z] ========================\\n[2023-05-01T00:41:17.784Z] =============== SUMMARY ===============\\n[2023-05-01T00:41:17.784Z] Initial ask price: 1786.4078479347597\\n[2023-05-01T00:41:17.784Z] Final ask price: 1767.196789698608\\n[2023-05-01T00:41:17.784Z] Initial bid price: 1765.0988079991564\\n[2023-05-01T00:41:17.784Z] Final bid price: 1746.1169075153243\\n[2023-05-01T00:41:17.784Z] =======================================\\n[2023-05-01T00:41:18.785Z] ========================\\n[2023-05-01T00:41:18.785Z] Growing server foodnstuff\\n[2023-05-01T00:41:18.785Z] Progress: 0/45000000\\n[2023-05-01T00:41:18.785Z] ========================\\n[2023-05-01T00:41:21.055Z] ========================\\n[2023-05-01T00:41:21.055Z] Weakening server foodnstuff\\n[2023-05-01T00:41:21.055Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:41:21.055Z] ========================\\n[2023-05-01T00:41:24.060Z] ========================\\n[2023-05-01T00:41:24.060Z] Growing server foodnstuff\\n[2023-05-01T00:41:24.060Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:41:24.060Z] ========================\\n[2023-05-01T00:41:26.327Z] ========================\\n[2023-05-01T00:41:26.327Z] Weakening server foodnstuff\\n[2023-05-01T00:41:26.327Z] Progress: 15/6\\n[2023-05-01T00:41:26.327Z] ========================\\n[2023-05-01T00:41:29.331Z] ========================\\n[2023-05-01T00:41:29.331Z] Growing server foodnstuff\\n[2023-05-01T00:41:29.331Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:41:29.331Z] ========================\\n[2023-05-01T00:41:31.599Z] ========================\\n[2023-05-01T00:41:31.599Z] Weakening server foodnstuff\\n[2023-05-01T00:41:31.599Z] Progress: 15/6\\n[2023-05-01T00:41:31.599Z] ========================\\n[2023-05-01T00:41:34.603Z] ========================\\n[2023-05-01T00:41:34.603Z] Growing server foodnstuff\\n[2023-05-01T00:41:34.603Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:41:34.603Z] ========================\\n[2023-05-01T00:41:36.871Z] ========================\\n[2023-05-01T00:41:36.871Z] Weakening server foodnstuff\\n[2023-05-01T00:41:36.871Z] Progress: 15/6\\n[2023-05-01T00:41:36.871Z] ========================\\n[2023-05-01T00:41:39.875Z] ========================\\n[2023-05-01T00:41:39.875Z] Growing server foodnstuff\\n[2023-05-01T00:41:39.875Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:41:39.875Z] ========================\\n[2023-05-01T00:41:42.142Z] ========================\\n[2023-05-01T00:41:42.142Z] Weakening server foodnstuff\\n[2023-05-01T00:41:42.142Z] Progress: 15/6\\n[2023-05-01T00:41:42.142Z] ========================\\n[2023-05-01T00:41:45.144Z] ========================\\n[2023-05-01T00:41:45.144Z] Growing server foodnstuff\\n[2023-05-01T00:41:45.144Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:41:45.144Z] ========================\\n[2023-05-01T00:41:47.412Z] ========================\\n[2023-05-01T00:41:47.412Z] Weakening server foodnstuff\\n[2023-05-01T00:41:47.412Z] Progress: 14.944/6\\n[2023-05-01T00:41:47.412Z] ========================\\n[2023-05-01T00:41:51.122Z] =============== SUMMARY ===============\\n[2023-05-01T00:41:51.122Z] Initial ask price: 1767.196789698608\\n[2023-05-01T00:41:51.122Z] Final ask price: 1755.2569726482707\\n[2023-05-01T00:41:51.122Z] Initial bid price: 1746.1169075153243\\n[2023-05-01T00:41:51.122Z] Final bid price: 1734.3195137300008\\n[2023-05-01T00:41:51.122Z] =======================================\\n[2023-05-01T00:41:52.123Z] ========================\\n[2023-05-01T00:41:52.123Z] Growing server foodnstuff\\n[2023-05-01T00:41:52.123Z] Progress: 0/45000000\\n[2023-05-01T00:41:52.123Z] ========================\\n[2023-05-01T00:41:54.392Z] ========================\\n[2023-05-01T00:41:54.392Z] Weakening server foodnstuff\\n[2023-05-01T00:41:54.392Z] Progress: 15/6\\n[2023-05-01T00:41:54.392Z] ========================\\n[2023-05-01T00:41:57.395Z] ========================\\n[2023-05-01T00:41:57.395Z] Growing server foodnstuff\\n[2023-05-01T00:41:57.395Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:41:57.395Z] ========================\\n[2023-05-01T00:41:59.663Z] ========================\\n[2023-05-01T00:41:59.663Z] Weakening server foodnstuff\\n[2023-05-01T00:41:59.663Z] Progress: 15/6\\n[2023-05-01T00:41:59.663Z] ========================\\n[2023-05-01T00:42:02.667Z] ========================\\n[2023-05-01T00:42:02.667Z] Growing server foodnstuff\\n[2023-05-01T00:42:02.667Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:42:02.667Z] ========================\\n[2023-05-01T00:42:04.936Z] ========================\\n[2023-05-01T00:42:04.936Z] Weakening server foodnstuff\\n[2023-05-01T00:42:04.936Z] Progress: 15/6\\n[2023-05-01T00:42:04.936Z] ========================\\n[2023-05-01T00:42:07.939Z] ========================\\n[2023-05-01T00:42:07.939Z] Growing server foodnstuff\\n[2023-05-01T00:42:07.939Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:42:07.939Z] ========================\\n[2023-05-01T00:42:10.208Z] ========================\\n[2023-05-01T00:42:10.208Z] Weakening server foodnstuff\\n[2023-05-01T00:42:10.208Z] Progress: 15/6\\n[2023-05-01T00:42:10.208Z] ========================\\n[2023-05-01T00:42:13.211Z] ========================\\n[2023-05-01T00:42:13.211Z] Growing server foodnstuff\\n[2023-05-01T00:42:13.211Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:42:13.211Z] ========================\\n[2023-05-01T00:42:15.479Z] ========================\\n[2023-05-01T00:42:15.479Z] Weakening server foodnstuff\\n[2023-05-01T00:42:15.479Z] Progress: 15/6\\n[2023-05-01T00:42:15.479Z] ========================\\n[2023-05-01T00:42:18.482Z] ========================\\n[2023-05-01T00:42:18.482Z] Growing server foodnstuff\\n[2023-05-01T00:42:18.482Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:42:18.482Z] ========================\\n[2023-05-01T00:42:20.750Z] ========================\\n[2023-05-01T00:42:20.750Z] Weakening server foodnstuff\\n[2023-05-01T00:42:20.750Z] Progress: 14.964/6\\n[2023-05-01T00:42:20.750Z] ========================\\n[2023-05-01T00:42:24.460Z] =============== SUMMARY ===============\\n[2023-05-01T00:42:24.460Z] Initial ask price: 1755.2569726482707\\n[2023-05-01T00:42:24.460Z] Final ask price: 1765.5777797165522\\n[2023-05-01T00:42:24.460Z] Initial bid price: 1734.3195137300008\\n[2023-05-01T00:42:24.460Z] Final bid price: 1744.5172097795755\\n[2023-05-01T00:42:24.460Z] =======================================\\n[2023-05-01T00:42:25.460Z] ========================\\n[2023-05-01T00:42:25.460Z] Growing server foodnstuff\\n[2023-05-01T00:42:25.460Z] Progress: 0/45000000\\n[2023-05-01T00:42:25.460Z] ========================\\n[2023-05-01T00:42:27.729Z] ========================\\n[2023-05-01T00:42:27.729Z] Weakening server foodnstuff\\n[2023-05-01T00:42:27.729Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:42:27.729Z] ========================\\n[2023-05-01T00:42:30.733Z] ========================\\n[2023-05-01T00:42:30.733Z] Growing server foodnstuff\\n[2023-05-01T00:42:30.733Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:42:30.733Z] ========================\\n[2023-05-01T00:42:33.000Z] ========================\\n[2023-05-01T00:42:33.000Z] Weakening server foodnstuff\\n[2023-05-01T00:42:33.000Z] Progress: 15/6\\n[2023-05-01T00:42:33.000Z] ========================\\n[2023-05-01T00:42:36.002Z] ========================\\n[2023-05-01T00:42:36.002Z] Growing server foodnstuff\\n[2023-05-01T00:42:36.002Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:42:36.002Z] ========================\\n[2023-05-01T00:42:38.268Z] ========================\\n[2023-05-01T00:42:38.268Z] Weakening server foodnstuff\\n[2023-05-01T00:42:38.268Z] Progress: 15/6\\n[2023-05-01T00:42:38.268Z] ========================\\n[2023-05-01T00:42:41.271Z] ========================\\n[2023-05-01T00:42:41.271Z] Growing server foodnstuff\\n[2023-05-01T00:42:41.271Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:42:41.271Z] ========================\\n[2023-05-01T00:42:43.538Z] ========================\\n[2023-05-01T00:42:43.538Z] Weakening server foodnstuff\\n[2023-05-01T00:42:43.538Z] Progress: 15/6\\n[2023-05-01T00:42:43.538Z] ========================\\n[2023-05-01T00:42:46.541Z] ========================\\n[2023-05-01T00:42:46.541Z] Growing server foodnstuff\\n[2023-05-01T00:42:46.541Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:42:46.541Z] ========================\\n[2023-05-01T00:42:48.807Z] ========================\\n[2023-05-01T00:42:48.808Z] Weakening server foodnstuff\\n[2023-05-01T00:42:48.808Z] Progress: 15/6\\n[2023-05-01T00:42:48.808Z] ========================\\n[2023-05-01T00:42:51.809Z] ========================\\n[2023-05-01T00:42:51.809Z] Growing server foodnstuff\\n[2023-05-01T00:42:51.809Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:42:51.809Z] ========================\\n[2023-05-01T00:42:54.076Z] ========================\\n[2023-05-01T00:42:54.076Z] Weakening server foodnstuff\\n[2023-05-01T00:42:54.076Z] Progress: 14.944/6\\n[2023-05-01T00:42:54.076Z] ========================\\n[2023-05-01T00:42:57.788Z] =============== SUMMARY ===============\\n[2023-05-01T00:42:57.788Z] Initial ask price: 1770.3063740760776\\n[2023-05-01T00:42:57.788Z] Final ask price: 1753.5963319256603\\n[2023-05-01T00:42:57.788Z] Initial bid price: 1749.1893994350112\\n[2023-05-01T00:42:57.788Z] Final bid price: 1732.6786818430478\\n[2023-05-01T00:42:57.788Z] =======================================\\n[2023-05-01T00:42:58.790Z] ========================\\n[2023-05-01T00:42:58.790Z] Growing server foodnstuff\\n[2023-05-01T00:42:58.790Z] Progress: 0/45000000\\n[2023-05-01T00:42:58.790Z] ========================\\n[2023-05-01T00:43:01.056Z] ========================\\n[2023-05-01T00:43:01.056Z] Weakening server foodnstuff\\n[2023-05-01T00:43:01.056Z] Progress: 15.04/6\\n[2023-05-01T00:43:01.056Z] ========================\\n[2023-05-01T00:43:04.058Z] ========================\\n[2023-05-01T00:43:04.058Z] Growing server foodnstuff\\n[2023-05-01T00:43:04.058Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:43:04.058Z] ========================\\n[2023-05-01T00:43:06.325Z] ========================\\n[2023-05-01T00:43:06.325Z] Weakening server foodnstuff\\n[2023-05-01T00:43:06.325Z] Progress: 15/6\\n[2023-05-01T00:43:06.325Z] ========================\\n[2023-05-01T00:43:09.327Z] ========================\\n[2023-05-01T00:43:09.327Z] Growing server foodnstuff\\n[2023-05-01T00:43:09.327Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:43:09.327Z] ========================\\n[2023-05-01T00:43:11.595Z] ========================\\n[2023-05-01T00:43:11.595Z] Weakening server foodnstuff\\n[2023-05-01T00:43:11.595Z] Progress: 15/6\\n[2023-05-01T00:43:11.595Z] ========================\\n[2023-05-01T00:43:14.597Z] ========================\\n[2023-05-01T00:43:14.597Z] Growing server foodnstuff\\n[2023-05-01T00:43:14.597Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:43:14.597Z] ========================\\n[2023-05-01T00:43:16.863Z] ========================\\n[2023-05-01T00:43:16.863Z] Weakening server foodnstuff\\n[2023-05-01T00:43:16.863Z] Progress: 15/6\\n[2023-05-01T00:43:16.863Z] ========================\\n[2023-05-01T00:43:19.865Z] ========================\\n[2023-05-01T00:43:19.865Z] Growing server foodnstuff\\n[2023-05-01T00:43:19.865Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:43:19.865Z] ========================\\n[2023-05-01T00:43:22.133Z] ========================\\n[2023-05-01T00:43:22.133Z] Weakening server foodnstuff\\n[2023-05-01T00:43:22.133Z] Progress: 15/6\\n[2023-05-01T00:43:22.133Z] ========================\\n[2023-05-01T00:43:25.134Z] ========================\\n[2023-05-01T00:43:25.134Z] Growing server foodnstuff\\n[2023-05-01T00:43:25.134Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:43:25.134Z] ========================\\n[2023-05-01T00:43:27.401Z] ========================\\n[2023-05-01T00:43:27.401Z] Weakening server foodnstuff\\n[2023-05-01T00:43:27.401Z] Progress: 14.944/6\\n[2023-05-01T00:43:27.401Z] ========================\\n[2023-05-01T00:43:31.112Z] =============== SUMMARY ===============\\n[2023-05-01T00:43:31.112Z] Initial ask price: 1753.5963319256603\\n[2023-05-01T00:43:31.112Z] Final ask price: 1736.7819534733162\\n[2023-05-01T00:43:31.112Z] Initial bid price: 1732.6786818430478\\n[2023-05-01T00:43:31.112Z] Final bid price: 1716.064872517372\\n[2023-05-01T00:43:31.112Z] =======================================\\n[2023-05-01T00:43:32.113Z] ========================\\n[2023-05-01T00:43:32.113Z] Growing server foodnstuff\\n[2023-05-01T00:43:32.113Z] Progress: 0/45000000\\n[2023-05-01T00:43:32.113Z] ========================\\n[2023-05-01T00:43:34.380Z] ========================\\n[2023-05-01T00:43:34.380Z] Weakening server foodnstuff\\n[2023-05-01T00:43:34.380Z] Progress: 15/6\\n[2023-05-01T00:43:34.380Z] ========================\\n[2023-05-01T00:43:37.383Z] ========================\\n[2023-05-01T00:43:37.383Z] Growing server foodnstuff\\n[2023-05-01T00:43:37.383Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:43:37.383Z] ========================\\n[2023-05-01T00:43:39.651Z] ========================\\n[2023-05-01T00:43:39.651Z] Weakening server foodnstuff\\n[2023-05-01T00:43:39.651Z] Progress: 15/6\\n[2023-05-01T00:43:39.651Z] ========================\\n[2023-05-01T00:43:42.652Z] ========================\\n[2023-05-01T00:43:42.652Z] Growing server foodnstuff\\n[2023-05-01T00:43:42.652Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:43:42.652Z] ========================\\n[2023-05-01T00:43:44.919Z] ========================\\n[2023-05-01T00:43:44.919Z] Weakening server foodnstuff\\n[2023-05-01T00:43:44.919Z] Progress: 15/6\\n[2023-05-01T00:43:44.919Z] ========================\\n[2023-05-01T00:43:47.922Z] ========================\\n[2023-05-01T00:43:47.922Z] Growing server foodnstuff\\n[2023-05-01T00:43:47.922Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:43:47.922Z] ========================\\n[2023-05-01T00:43:50.188Z] ========================\\n[2023-05-01T00:43:50.188Z] Weakening server foodnstuff\\n[2023-05-01T00:43:50.188Z] Progress: 15/6\\n[2023-05-01T00:43:50.188Z] ========================\\n[2023-05-01T00:43:53.191Z] ========================\\n[2023-05-01T00:43:53.191Z] Growing server foodnstuff\\n[2023-05-01T00:43:53.191Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:43:53.191Z] ========================\\n[2023-05-01T00:43:55.457Z] ========================\\n[2023-05-01T00:43:55.457Z] Weakening server foodnstuff\\n[2023-05-01T00:43:55.457Z] Progress: 15/6\\n[2023-05-01T00:43:55.457Z] ========================\\n[2023-05-01T00:43:58.459Z] ========================\\n[2023-05-01T00:43:58.459Z] Growing server foodnstuff\\n[2023-05-01T00:43:58.459Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:43:58.459Z] ========================\\n[2023-05-01T00:44:00.727Z] ========================\\n[2023-05-01T00:44:00.727Z] Weakening server foodnstuff\\n[2023-05-01T00:44:00.727Z] Progress: 14.964/6\\n[2023-05-01T00:44:00.727Z] ========================\\n[2023-05-01T00:44:04.437Z] =============== SUMMARY ===============\\n[2023-05-01T00:44:04.437Z] Initial ask price: 1736.7819534733162\\n[2023-05-01T00:44:04.437Z] Final ask price: 1733.7580822306074\\n[2023-05-01T00:44:04.437Z] Initial bid price: 1716.064872517372\\n[2023-05-01T00:44:04.437Z] Final bid price: 1713.0770713093677\\n[2023-05-01T00:44:04.437Z] =======================================\\n[2023-05-01T00:44:05.439Z] ========================\\n[2023-05-01T00:44:05.439Z] Growing server foodnstuff\\n[2023-05-01T00:44:05.439Z] Progress: 0/45000000\\n[2023-05-01T00:44:05.439Z] ========================\\n[2023-05-01T00:44:07.708Z] ========================\\n[2023-05-01T00:44:07.708Z] Weakening server foodnstuff\\n[2023-05-01T00:44:07.708Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:44:07.708Z] ========================\\n[2023-05-01T00:44:10.711Z] ========================\\n[2023-05-01T00:44:10.711Z] Growing server foodnstuff\\n[2023-05-01T00:44:10.711Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:44:10.711Z] ========================\\n[2023-05-01T00:44:12.979Z] ========================\\n[2023-05-01T00:44:12.979Z] Weakening server foodnstuff\\n[2023-05-01T00:44:12.979Z] Progress: 15/6\\n[2023-05-01T00:44:12.979Z] ========================\\n[2023-05-01T00:44:15.981Z] ========================\\n[2023-05-01T00:44:15.981Z] Growing server foodnstuff\\n[2023-05-01T00:44:15.981Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:44:15.981Z] ========================\\n[2023-05-01T00:44:18.247Z] ========================\\n[2023-05-01T00:44:18.247Z] Weakening server foodnstuff\\n[2023-05-01T00:44:18.247Z] Progress: 15/6\\n[2023-05-01T00:44:18.247Z] ========================\\n[2023-05-01T00:44:21.249Z] ========================\\n[2023-05-01T00:44:21.249Z] Growing server foodnstuff\\n[2023-05-01T00:44:21.249Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:44:21.249Z] ========================\\n[2023-05-01T00:44:23.517Z] ========================\\n[2023-05-01T00:44:23.517Z] Weakening server foodnstuff\\n[2023-05-01T00:44:23.517Z] Progress: 15/6\\n[2023-05-01T00:44:23.517Z] ========================\\n[2023-05-01T00:44:26.520Z] ========================\\n[2023-05-01T00:44:26.520Z] Growing server foodnstuff\\n[2023-05-01T00:44:26.520Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:44:26.520Z] ========================\\n[2023-05-01T00:44:28.788Z] ========================\\n[2023-05-01T00:44:28.788Z] Weakening server foodnstuff\\n[2023-05-01T00:44:28.788Z] Progress: 15/6\\n[2023-05-01T00:44:28.788Z] ========================\\n[2023-05-01T00:44:31.788Z] ========================\\n[2023-05-01T00:44:31.788Z] Growing server foodnstuff\\n[2023-05-01T00:44:31.788Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:44:31.788Z] ========================\\n[2023-05-01T00:44:34.054Z] ========================\\n[2023-05-01T00:44:34.054Z] Weakening server foodnstuff\\n[2023-05-01T00:44:34.054Z] Progress: 14.944/6\\n[2023-05-01T00:44:34.054Z] ========================\\n[2023-05-01T00:44:37.762Z] =============== SUMMARY ===============\\n[2023-05-01T00:44:37.762Z] Initial ask price: 1733.7580822306074\\n[2023-05-01T00:44:37.762Z] Final ask price: 1753.146011113395\\n[2023-05-01T00:44:37.762Z] Initial bid price: 1713.0770713093677\\n[2023-05-01T00:44:37.762Z] Final bid price: 1732.2337326508098\\n[2023-05-01T00:44:37.762Z] =======================================\\n[2023-05-01T00:44:38.763Z] ========================\\n[2023-05-01T00:44:38.763Z] Growing server foodnstuff\\n[2023-05-01T00:44:38.763Z] Progress: 0/45000000\\n[2023-05-01T00:44:38.763Z] ========================\\n[2023-05-01T00:44:41.029Z] ========================\\n[2023-05-01T00:44:41.029Z] Weakening server foodnstuff\\n[2023-05-01T00:44:41.029Z] Progress: 15.04/6\\n[2023-05-01T00:44:41.029Z] ========================\\n[2023-05-01T00:44:44.031Z] ========================\\n[2023-05-01T00:44:44.031Z] Growing server foodnstuff\\n[2023-05-01T00:44:44.031Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:44:44.031Z] ========================\\n[2023-05-01T00:44:46.298Z] ========================\\n[2023-05-01T00:44:46.298Z] Weakening server foodnstuff\\n[2023-05-01T00:44:46.298Z] Progress: 15/6\\n[2023-05-01T00:44:46.298Z] ========================\\n[2023-05-01T00:44:49.297Z] ========================\\n[2023-05-01T00:44:49.297Z] Growing server foodnstuff\\n[2023-05-01T00:44:49.297Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:44:49.297Z] ========================\\n[2023-05-01T00:44:51.563Z] ========================\\n[2023-05-01T00:44:51.563Z] Weakening server foodnstuff\\n[2023-05-01T00:44:51.563Z] Progress: 15/6\\n[2023-05-01T00:44:51.563Z] ========================\\n[2023-05-01T00:44:54.563Z] ========================\\n[2023-05-01T00:44:54.563Z] Growing server foodnstuff\\n[2023-05-01T00:44:54.563Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:44:54.563Z] ========================\\n[2023-05-01T00:44:56.829Z] ========================\\n[2023-05-01T00:44:56.829Z] Weakening server foodnstuff\\n[2023-05-01T00:44:56.829Z] Progress: 15/6\\n[2023-05-01T00:44:56.829Z] ========================\\n[2023-05-01T00:44:59.828Z] ========================\\n[2023-05-01T00:44:59.828Z] Growing server foodnstuff\\n[2023-05-01T00:44:59.828Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:44:59.828Z] ========================\\n[2023-05-01T00:45:02.094Z] ========================\\n[2023-05-01T00:45:02.094Z] Weakening server foodnstuff\\n[2023-05-01T00:45:02.094Z] Progress: 15/6\\n[2023-05-01T00:45:02.094Z] ========================\\n[2023-05-01T00:45:05.094Z] ========================\\n[2023-05-01T00:45:05.094Z] Growing server foodnstuff\\n[2023-05-01T00:45:05.094Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:45:05.094Z] ========================\\n[2023-05-01T00:45:07.361Z] ========================\\n[2023-05-01T00:45:07.361Z] Weakening server foodnstuff\\n[2023-05-01T00:45:07.361Z] Progress: 14.944/6\\n[2023-05-01T00:45:07.361Z] ========================\\n[2023-05-01T00:45:11.069Z] =============== SUMMARY ===============\\n[2023-05-01T00:45:11.069Z] Initial ask price: 1753.146011113395\\n[2023-05-01T00:45:11.069Z] Final ask price: 1779.6886472477809\\n[2023-05-01T00:45:11.069Z] Initial bid price: 1732.2337326508098\\n[2023-05-01T00:45:11.069Z] Final bid price: 1758.459756823354\\n[2023-05-01T00:45:11.069Z] =======================================\\n[2023-05-01T00:45:12.070Z] ========================\\n[2023-05-01T00:45:12.070Z] Growing server foodnstuff\\n[2023-05-01T00:45:12.070Z] Progress: 0/45000000\\n[2023-05-01T00:45:12.070Z] ========================\\n[2023-05-01T00:45:14.338Z] ========================\\n[2023-05-01T00:45:14.338Z] Weakening server foodnstuff\\n[2023-05-01T00:45:14.338Z] Progress: 15/6\\n[2023-05-01T00:45:14.338Z] ========================\\n[2023-05-01T00:45:17.339Z] ========================\\n[2023-05-01T00:45:17.339Z] Growing server foodnstuff\\n[2023-05-01T00:45:17.339Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:45:17.339Z] ========================\\n[2023-05-01T00:45:19.605Z] ========================\\n[2023-05-01T00:45:19.605Z] Weakening server foodnstuff\\n[2023-05-01T00:45:19.605Z] Progress: 15/6\\n[2023-05-01T00:45:19.605Z] ========================\\n[2023-05-01T00:45:22.604Z] ========================\\n[2023-05-01T00:45:22.604Z] Growing server foodnstuff\\n[2023-05-01T00:45:22.604Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:45:22.604Z] ========================\\n[2023-05-01T00:45:24.870Z] ========================\\n[2023-05-01T00:45:24.870Z] Weakening server foodnstuff\\n[2023-05-01T00:45:24.870Z] Progress: 15/6\\n[2023-05-01T00:45:24.870Z] ========================\\n[2023-05-01T00:45:27.869Z] ========================\\n[2023-05-01T00:45:27.869Z] Growing server foodnstuff\\n[2023-05-01T00:45:27.869Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:45:27.869Z] ========================\\n[2023-05-01T00:45:30.135Z] ========================\\n[2023-05-01T00:45:30.135Z] Weakening server foodnstuff\\n[2023-05-01T00:45:30.135Z] Progress: 15/6\\n[2023-05-01T00:45:30.135Z] ========================\\n[2023-05-01T00:45:33.136Z] ========================\\n[2023-05-01T00:45:33.136Z] Growing server foodnstuff\\n[2023-05-01T00:45:33.136Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:45:33.136Z] ========================\\n[2023-05-01T00:45:35.402Z] ========================\\n[2023-05-01T00:45:35.402Z] Weakening server foodnstuff\\n[2023-05-01T00:45:35.402Z] Progress: 15/6\\n[2023-05-01T00:45:35.402Z] ========================\\n[2023-05-01T00:45:38.403Z] ========================\\n[2023-05-01T00:45:38.403Z] Growing server foodnstuff\\n[2023-05-01T00:45:38.403Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:45:38.403Z] ========================\\n[2023-05-01T00:45:40.668Z] ========================\\n[2023-05-01T00:45:40.668Z] Weakening server foodnstuff\\n[2023-05-01T00:45:40.668Z] Progress: 14.964/6\\n[2023-05-01T00:45:40.668Z] ========================\\n[2023-05-01T00:45:44.378Z] =============== SUMMARY ===============\\n[2023-05-01T00:45:44.378Z] Initial ask price: 1779.6886472477809\\n[2023-05-01T00:45:44.378Z] Final ask price: 1807.767094357303\\n[2023-05-01T00:45:44.378Z] Initial bid price: 1758.459756823354\\n[2023-05-01T00:45:44.378Z] Final bid price: 1786.20327215821\\n[2023-05-01T00:45:44.378Z] =======================================\\n[2023-05-01T00:45:45.379Z] ========================\\n[2023-05-01T00:45:45.379Z] Growing server foodnstuff\\n[2023-05-01T00:45:45.379Z] Progress: 0/45000000\\n[2023-05-01T00:45:45.379Z] ========================\\n[2023-05-01T00:45:47.647Z] ========================\\n[2023-05-01T00:45:47.647Z] Weakening server foodnstuff\\n[2023-05-01T00:45:47.647Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:45:47.647Z] ========================\\n[2023-05-01T00:45:50.649Z] ========================\\n[2023-05-01T00:45:50.649Z] Growing server foodnstuff\\n[2023-05-01T00:45:50.649Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:45:50.649Z] ========================\\n[2023-05-01T00:45:52.915Z] ========================\\n[2023-05-01T00:45:52.915Z] Weakening server foodnstuff\\n[2023-05-01T00:45:52.915Z] Progress: 15/6\\n[2023-05-01T00:45:52.915Z] ========================\\n[2023-05-01T00:45:55.915Z] ========================\\n[2023-05-01T00:45:55.915Z] Growing server foodnstuff\\n[2023-05-01T00:45:55.915Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:45:55.915Z] ========================\\n[2023-05-01T00:45:58.182Z] ========================\\n[2023-05-01T00:45:58.182Z] Weakening server foodnstuff\\n[2023-05-01T00:45:58.182Z] Progress: 15/6\\n[2023-05-01T00:45:58.182Z] ========================\\n[2023-05-01T00:46:01.182Z] ========================\\n[2023-05-01T00:46:01.182Z] Growing server foodnstuff\\n[2023-05-01T00:46:01.182Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:46:01.182Z] ========================\\n[2023-05-01T00:46:03.448Z] ========================\\n[2023-05-01T00:46:03.448Z] Weakening server foodnstuff\\n[2023-05-01T00:46:03.448Z] Progress: 15/6\\n[2023-05-01T00:46:03.448Z] ========================\\n[2023-05-01T00:46:06.449Z] ========================\\n[2023-05-01T00:46:06.449Z] Growing server foodnstuff\\n[2023-05-01T00:46:06.449Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:46:06.449Z] ========================\\n[2023-05-01T00:46:08.715Z] ========================\\n[2023-05-01T00:46:08.715Z] Weakening server foodnstuff\\n[2023-05-01T00:46:08.715Z] Progress: 15/6\\n[2023-05-01T00:46:08.715Z] ========================\\n[2023-05-01T00:46:11.714Z] ========================\\n[2023-05-01T00:46:11.714Z] Growing server foodnstuff\\n[2023-05-01T00:46:11.714Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:46:11.714Z] ========================\\n[2023-05-01T00:46:13.980Z] ========================\\n[2023-05-01T00:46:13.980Z] Weakening server foodnstuff\\n[2023-05-01T00:46:13.980Z] Progress: 14.944/6\\n[2023-05-01T00:46:13.980Z] ========================\\n[2023-05-01T00:46:17.688Z] =============== SUMMARY ===============\\n[2023-05-01T00:46:17.688Z] Initial ask price: 1807.767094357303\\n[2023-05-01T00:46:17.688Z] Final ask price: 1799.949203551632\\n[2023-05-01T00:46:17.688Z] Initial bid price: 1786.20327215821\\n[2023-05-01T00:46:17.688Z] Final bid price: 1778.4786365112548\\n[2023-05-01T00:46:17.688Z] =======================================\\n[2023-05-01T00:46:18.690Z] ========================\\n[2023-05-01T00:46:18.690Z] Growing server foodnstuff\\n[2023-05-01T00:46:18.690Z] Progress: 0/45000000\\n[2023-05-01T00:46:18.690Z] ========================\\n[2023-05-01T00:46:20.956Z] ========================\\n[2023-05-01T00:46:20.956Z] Weakening server foodnstuff\\n[2023-05-01T00:46:20.956Z] Progress: 15.04/6\\n[2023-05-01T00:46:20.956Z] ========================\\n[2023-05-01T00:46:23.957Z] ========================\\n[2023-05-01T00:46:23.957Z] Growing server foodnstuff\\n[2023-05-01T00:46:23.957Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:46:23.957Z] ========================\\n[2023-05-01T00:46:26.222Z] ========================\\n[2023-05-01T00:46:26.222Z] Weakening server foodnstuff\\n[2023-05-01T00:46:26.222Z] Progress: 15/6\\n[2023-05-01T00:46:26.222Z] ========================\\n[2023-05-01T00:46:29.223Z] ========================\\n[2023-05-01T00:46:29.223Z] Growing server foodnstuff\\n[2023-05-01T00:46:29.223Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:46:29.223Z] ========================\\n[2023-05-01T00:46:31.489Z] ========================\\n[2023-05-01T00:46:31.489Z] Weakening server foodnstuff\\n[2023-05-01T00:46:31.489Z] Progress: 15/6\\n[2023-05-01T00:46:31.489Z] ========================\\n[2023-05-01T00:46:34.490Z] ========================\\n[2023-05-01T00:46:34.490Z] Growing server foodnstuff\\n[2023-05-01T00:46:34.490Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:46:34.490Z] ========================\\n[2023-05-01T00:46:36.757Z] ========================\\n[2023-05-01T00:46:36.757Z] Weakening server foodnstuff\\n[2023-05-01T00:46:36.757Z] Progress: 15/6\\n[2023-05-01T00:46:36.757Z] ========================\\n[2023-05-01T00:46:39.756Z] ========================\\n[2023-05-01T00:46:39.756Z] Growing server foodnstuff\\n[2023-05-01T00:46:39.756Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:46:39.756Z] ========================\\n[2023-05-01T00:46:42.021Z] ========================\\n[2023-05-01T00:46:42.022Z] Weakening server foodnstuff\\n[2023-05-01T00:46:42.022Z] Progress: 15/6\\n[2023-05-01T00:46:42.022Z] ========================\\n[2023-05-01T00:46:45.019Z] ========================\\n[2023-05-01T00:46:45.019Z] Growing server foodnstuff\\n[2023-05-01T00:46:45.019Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:46:45.019Z] ========================\\n[2023-05-01T00:46:47.282Z] ========================\\n[2023-05-01T00:46:47.282Z] Weakening server foodnstuff\\n[2023-05-01T00:46:47.282Z] Progress: 14.944/6\\n[2023-05-01T00:46:47.282Z] ========================\\n[2023-05-01T00:46:50.985Z] =============== SUMMARY ===============\\n[2023-05-01T00:46:50.985Z] Initial ask price: 1799.949203551632\\n[2023-05-01T00:46:50.985Z] Final ask price: 1799.2695398452022\\n[2023-05-01T00:46:50.985Z] Initial bid price: 1778.4786365112548\\n[2023-05-01T00:46:50.985Z] Final bid price: 1777.8070801253787\\n[2023-05-01T00:46:50.985Z] =======================================\\n[2023-05-01T00:46:51.988Z] ========================\\n[2023-05-01T00:46:51.988Z] Growing server foodnstuff\\n[2023-05-01T00:46:51.988Z] Progress: 0/45000000\\n[2023-05-01T00:46:51.988Z] ========================\\n[2023-05-01T00:46:54.252Z] ========================\\n[2023-05-01T00:46:54.252Z] Weakening server foodnstuff\\n[2023-05-01T00:46:54.252Z] Progress: 15/6\\n[2023-05-01T00:46:54.252Z] ========================\\n[2023-05-01T00:46:57.248Z] ========================\\n[2023-05-01T00:46:57.248Z] Growing server foodnstuff\\n[2023-05-01T00:46:57.248Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:46:57.248Z] ========================\\n[2023-05-01T00:46:59.511Z] ========================\\n[2023-05-01T00:46:59.512Z] Weakening server foodnstuff\\n[2023-05-01T00:46:59.512Z] Progress: 15/6\\n[2023-05-01T00:46:59.512Z] ========================\\n[2023-05-01T00:47:02.508Z] ========================\\n[2023-05-01T00:47:02.508Z] Growing server foodnstuff\\n[2023-05-01T00:47:02.508Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:47:02.508Z] ========================\\n[2023-05-01T00:47:04.771Z] ========================\\n[2023-05-01T00:47:04.771Z] Weakening server foodnstuff\\n[2023-05-01T00:47:04.771Z] Progress: 15/6\\n[2023-05-01T00:47:04.771Z] ========================\\n[2023-05-01T00:47:07.767Z] ========================\\n[2023-05-01T00:47:07.767Z] Growing server foodnstuff\\n[2023-05-01T00:47:07.767Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:47:07.767Z] ========================\\n[2023-05-01T00:47:10.030Z] ========================\\n[2023-05-01T00:47:10.030Z] Weakening server foodnstuff\\n[2023-05-01T00:47:10.030Z] Progress: 15/6\\n[2023-05-01T00:47:10.030Z] ========================\\n[2023-05-01T00:47:13.025Z] ========================\\n[2023-05-01T00:47:13.025Z] Growing server foodnstuff\\n[2023-05-01T00:47:13.026Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:47:13.026Z] ========================\\n[2023-05-01T00:47:15.288Z] ========================\\n[2023-05-01T00:47:15.288Z] Weakening server foodnstuff\\n[2023-05-01T00:47:15.288Z] Progress: 15/6\\n[2023-05-01T00:47:15.288Z] ========================\\n[2023-05-01T00:47:18.283Z] ========================\\n[2023-05-01T00:47:18.283Z] Growing server foodnstuff\\n[2023-05-01T00:47:18.283Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:47:18.283Z] ========================\\n[2023-05-01T00:47:20.546Z] ========================\\n[2023-05-01T00:47:20.546Z] Weakening server foodnstuff\\n[2023-05-01T00:47:20.546Z] Progress: 14.964/6\\n[2023-05-01T00:47:20.546Z] ========================\\n[2023-05-01T00:47:24.248Z] =============== SUMMARY ===============\\n[2023-05-01T00:47:24.248Z] Initial ask price: 1799.2695398452022\\n[2023-05-01T00:47:24.248Z] Final ask price: 1820.4858517716352\\n[2023-05-01T00:47:24.248Z] Initial bid price: 1777.8070801253787\\n[2023-05-01T00:47:24.248Z] Final bid price: 1798.770314772371\\n[2023-05-01T00:47:24.248Z] =======================================\\n[2023-05-01T00:47:25.249Z] ========================\\n[2023-05-01T00:47:25.249Z] Growing server foodnstuff\\n[2023-05-01T00:47:25.249Z] Progress: 0/45000000\\n[2023-05-01T00:47:25.249Z] ========================\\n[2023-05-01T00:47:27.512Z] ========================\\n[2023-05-01T00:47:27.512Z] Weakening server foodnstuff\\n[2023-05-01T00:47:27.512Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:47:27.512Z] ========================\\n[2023-05-01T00:47:30.510Z] ========================\\n[2023-05-01T00:47:30.510Z] Growing server foodnstuff\\n[2023-05-01T00:47:30.510Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:47:30.510Z] ========================\\n[2023-05-01T00:47:32.771Z] ========================\\n[2023-05-01T00:47:32.771Z] Weakening server foodnstuff\\n[2023-05-01T00:47:32.771Z] Progress: 15/6\\n[2023-05-01T00:47:32.771Z] ========================\\n[2023-05-01T00:47:35.766Z] ========================\\n[2023-05-01T00:47:35.766Z] Growing server foodnstuff\\n[2023-05-01T00:47:35.767Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:47:35.767Z] ========================\\n[2023-05-01T00:47:38.029Z] ========================\\n[2023-05-01T00:47:38.029Z] Weakening server foodnstuff\\n[2023-05-01T00:47:38.029Z] Progress: 15/6\\n[2023-05-01T00:47:38.029Z] ========================\\n[2023-05-01T00:47:41.023Z] ========================\\n[2023-05-01T00:47:41.023Z] Growing server foodnstuff\\n[2023-05-01T00:47:41.023Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:47:41.023Z] ========================\\n[2023-05-01T00:47:43.285Z] ========================\\n[2023-05-01T00:47:43.285Z] Weakening server foodnstuff\\n[2023-05-01T00:47:43.285Z] Progress: 15/6\\n[2023-05-01T00:47:43.285Z] ========================\\n[2023-05-01T00:47:46.280Z] ========================\\n[2023-05-01T00:47:46.280Z] Growing server foodnstuff\\n[2023-05-01T00:47:46.280Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:47:46.280Z] ========================\\n[2023-05-01T00:47:48.542Z] ========================\\n[2023-05-01T00:47:48.542Z] Weakening server foodnstuff\\n[2023-05-01T00:47:48.542Z] Progress: 15/6\\n[2023-05-01T00:47:48.542Z] ========================\\n[2023-05-01T00:47:51.537Z] ========================\\n[2023-05-01T00:47:51.537Z] Growing server foodnstuff\\n[2023-05-01T00:47:51.537Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:47:51.537Z] ========================\\n[2023-05-01T00:47:53.798Z] ========================\\n[2023-05-01T00:47:53.798Z] Weakening server foodnstuff\\n[2023-05-01T00:47:53.798Z] Progress: 14.944/6\\n[2023-05-01T00:47:53.798Z] ========================\\n[2023-05-01T00:47:57.504Z] =============== SUMMARY ===============\\n[2023-05-01T00:47:57.504Z] Initial ask price: 1830.6688648449447\\n[2023-05-01T00:47:57.504Z] Final ask price: 1818.4302652065248\\n[2023-05-01T00:47:57.504Z] Initial bid price: 1808.8318604929175\\n[2023-05-01T00:47:57.504Z] Final bid price: 1796.7392481265265\\n[2023-05-01T00:47:57.504Z] =======================================\\n[2023-05-01T00:47:58.506Z] ========================\\n[2023-05-01T00:47:58.506Z] Growing server foodnstuff\\n[2023-05-01T00:47:58.506Z] Progress: 0/45000000\\n[2023-05-01T00:47:58.506Z] ========================\\n[2023-05-01T00:48:00.768Z] ========================\\n[2023-05-01T00:48:00.768Z] Weakening server foodnstuff\\n[2023-05-01T00:48:00.768Z] Progress: 15/6\\n[2023-05-01T00:48:00.768Z] ========================\\n[2023-05-01T00:48:03.763Z] ========================\\n[2023-05-01T00:48:03.763Z] Growing server foodnstuff\\n[2023-05-01T00:48:03.763Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:48:03.763Z] ========================\\n[2023-05-01T00:48:06.026Z] ========================\\n[2023-05-01T00:48:06.026Z] Weakening server foodnstuff\\n[2023-05-01T00:48:06.026Z] Progress: 15/6\\n[2023-05-01T00:48:06.026Z] ========================\\n[2023-05-01T00:48:09.036Z] ========================\\n[2023-05-01T00:48:09.036Z] Growing server foodnstuff\\n[2023-05-01T00:48:09.036Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:48:09.036Z] ========================\\n[2023-05-01T00:48:11.299Z] ========================\\n[2023-05-01T00:48:11.299Z] Weakening server foodnstuff\\n[2023-05-01T00:48:11.299Z] Progress: 15/6\\n[2023-05-01T00:48:11.299Z] ========================\\n[2023-05-01T00:48:14.295Z] ========================\\n[2023-05-01T00:48:14.295Z] Growing server foodnstuff\\n[2023-05-01T00:48:14.295Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:48:14.295Z] ========================\\n[2023-05-01T00:48:16.557Z] ========================\\n[2023-05-01T00:48:16.557Z] Weakening server foodnstuff\\n[2023-05-01T00:48:16.557Z] Progress: 15/6\\n[2023-05-01T00:48:16.557Z] ========================\\n[2023-05-01T00:48:19.552Z] ========================\\n[2023-05-01T00:48:19.553Z] Growing server foodnstuff\\n[2023-05-01T00:48:19.553Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:48:19.553Z] ========================\\n[2023-05-01T00:48:21.814Z] ========================\\n[2023-05-01T00:48:21.814Z] Weakening server foodnstuff\\n[2023-05-01T00:48:21.814Z] Progress: 15/6\\n[2023-05-01T00:48:21.814Z] ========================\\n[2023-05-01T00:48:24.810Z] ========================\\n[2023-05-01T00:48:24.810Z] Growing server foodnstuff\\n[2023-05-01T00:48:24.810Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:48:24.810Z] ========================\\n[2023-05-01T00:48:27.073Z] ========================\\n[2023-05-01T00:48:27.073Z] Weakening server foodnstuff\\n[2023-05-01T00:48:27.073Z] Progress: 14.964/6\\n[2023-05-01T00:48:27.073Z] ========================\\n[2023-05-01T00:48:30.774Z] =============== SUMMARY ===============\\n[2023-05-01T00:48:30.774Z] Initial ask price: 1818.4302652065248\\n[2023-05-01T00:48:30.774Z] Final ask price: 1811.3007220350014\\n[2023-05-01T00:48:30.774Z] Initial bid price: 1796.7392481265265\\n[2023-05-01T00:48:30.774Z] Final bid price: 1789.694749207546\\n[2023-05-01T00:48:30.774Z] =======================================\\n[2023-05-01T00:48:31.775Z] ========================\\n[2023-05-01T00:48:31.775Z] Growing server foodnstuff\\n[2023-05-01T00:48:31.775Z] Progress: 0/45000000\\n[2023-05-01T00:48:31.775Z] ========================\\n[2023-05-01T00:48:34.039Z] ========================\\n[2023-05-01T00:48:34.039Z] Weakening server foodnstuff\\n[2023-05-01T00:48:34.039Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:48:34.039Z] ========================\\n[2023-05-01T00:48:37.036Z] ========================\\n[2023-05-01T00:48:37.036Z] Growing server foodnstuff\\n[2023-05-01T00:48:37.036Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:48:37.036Z] ========================\\n[2023-05-01T00:48:39.297Z] ========================\\n[2023-05-01T00:48:39.297Z] Weakening server foodnstuff\\n[2023-05-01T00:48:39.297Z] Progress: 15/6\\n[2023-05-01T00:48:39.297Z] ========================\\n[2023-05-01T00:48:42.293Z] ========================\\n[2023-05-01T00:48:42.293Z] Growing server foodnstuff\\n[2023-05-01T00:48:42.293Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:48:42.293Z] ========================\\n[2023-05-01T00:48:44.555Z] ========================\\n[2023-05-01T00:48:44.555Z] Weakening server foodnstuff\\n[2023-05-01T00:48:44.555Z] Progress: 15/6\\n[2023-05-01T00:48:44.555Z] ========================\\n[2023-05-01T00:48:47.551Z] ========================\\n[2023-05-01T00:48:47.551Z] Growing server foodnstuff\\n[2023-05-01T00:48:47.551Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:48:47.551Z] ========================\\n[2023-05-01T00:48:49.813Z] ========================\\n[2023-05-01T00:48:49.813Z] Weakening server foodnstuff\\n[2023-05-01T00:48:49.813Z] Progress: 15/6\\n[2023-05-01T00:48:49.813Z] ========================\\n[2023-05-01T00:48:52.809Z] ========================\\n[2023-05-01T00:48:52.809Z] Growing server foodnstuff\\n[2023-05-01T00:48:52.809Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:48:52.809Z] ========================\\n[2023-05-01T00:48:55.071Z] ========================\\n[2023-05-01T00:48:55.071Z] Weakening server foodnstuff\\n[2023-05-01T00:48:55.071Z] Progress: 15/6\\n[2023-05-01T00:48:55.071Z] ========================\\n[2023-05-01T00:48:58.064Z] ========================\\n[2023-05-01T00:48:58.064Z] Growing server foodnstuff\\n[2023-05-01T00:48:58.064Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:48:58.064Z] ========================\\n[2023-05-01T00:49:00.324Z] ========================\\n[2023-05-01T00:49:00.324Z] Weakening server foodnstuff\\n[2023-05-01T00:49:00.324Z] Progress: 14.944/6\\n[2023-05-01T00:49:00.324Z] ========================\\n[2023-05-01T00:49:04.024Z] =============== SUMMARY ===============\\n[2023-05-01T00:49:04.024Z] Initial ask price: 1812.9865166008883\\n[2023-05-01T00:49:04.024Z] Final ask price: 1786.1674978007009\\n[2023-05-01T00:49:04.024Z] Initial bid price: 1791.3604348919314\\n[2023-05-01T00:49:04.024Z] Final bid price: 1764.8613248647084\\n[2023-05-01T00:49:04.024Z] =======================================\\n[2023-05-01T00:49:05.025Z] ========================\\n[2023-05-01T00:49:05.025Z] Growing server foodnstuff\\n[2023-05-01T00:49:05.025Z] Progress: 0/45000000\\n[2023-05-01T00:49:05.025Z] ========================\\n[2023-05-01T00:49:07.288Z] ========================\\n[2023-05-01T00:49:07.288Z] Weakening server foodnstuff\\n[2023-05-01T00:49:07.288Z] Progress: 15.04/6\\n[2023-05-01T00:49:07.288Z] ========================\\n[2023-05-01T00:49:10.281Z] ========================\\n[2023-05-01T00:49:10.281Z] Growing server foodnstuff\\n[2023-05-01T00:49:10.281Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:49:10.281Z] ========================\\n[2023-05-01T00:49:12.542Z] ========================\\n[2023-05-01T00:49:12.542Z] Weakening server foodnstuff\\n[2023-05-01T00:49:12.542Z] Progress: 15/6\\n[2023-05-01T00:49:12.542Z] ========================\\n[2023-05-01T00:49:15.535Z] ========================\\n[2023-05-01T00:49:15.536Z] Growing server foodnstuff\\n[2023-05-01T00:49:15.536Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:49:15.536Z] ========================\\n[2023-05-01T00:49:17.797Z] ========================\\n[2023-05-01T00:49:17.797Z] Weakening server foodnstuff\\n[2023-05-01T00:49:17.797Z] Progress: 15/6\\n[2023-05-01T00:49:17.797Z] ========================\\n[2023-05-01T00:49:20.790Z] ========================\\n[2023-05-01T00:49:20.790Z] Growing server foodnstuff\\n[2023-05-01T00:49:20.790Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:49:20.790Z] ========================\\n[2023-05-01T00:49:23.051Z] ========================\\n[2023-05-01T00:49:23.051Z] Weakening server foodnstuff\\n[2023-05-01T00:49:23.051Z] Progress: 15/6\\n[2023-05-01T00:49:23.051Z] ========================\\n[2023-05-01T00:49:26.044Z] ========================\\n[2023-05-01T00:49:26.044Z] Growing server foodnstuff\\n[2023-05-01T00:49:26.044Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:49:26.044Z] ========================\\n[2023-05-01T00:49:28.306Z] ========================\\n[2023-05-01T00:49:28.306Z] Weakening server foodnstuff\\n[2023-05-01T00:49:28.306Z] Progress: 15/6\\n[2023-05-01T00:49:28.306Z] ========================\\n[2023-05-01T00:49:31.299Z] ========================\\n[2023-05-01T00:49:31.299Z] Growing server foodnstuff\\n[2023-05-01T00:49:31.299Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:49:31.299Z] ========================\\n[2023-05-01T00:49:33.560Z] ========================\\n[2023-05-01T00:49:33.560Z] Weakening server foodnstuff\\n[2023-05-01T00:49:33.560Z] Progress: 14.944/6\\n[2023-05-01T00:49:33.560Z] ========================\\n[2023-05-01T00:49:37.259Z] =============== SUMMARY ===============\\n[2023-05-01T00:49:37.259Z] Initial ask price: 1786.1674978007009\\n[2023-05-01T00:49:37.259Z] Final ask price: 1774.979229350035\\n[2023-05-01T00:49:37.259Z] Initial bid price: 1764.8613248647084\\n[2023-05-01T00:49:37.259Z] Final bid price: 1753.8065148846272\\n[2023-05-01T00:49:37.259Z] =======================================\\n[2023-05-01T00:49:38.261Z] ========================\\n[2023-05-01T00:49:38.261Z] Growing server foodnstuff\\n[2023-05-01T00:49:38.261Z] Progress: 0/45000000\\n[2023-05-01T00:49:38.261Z] ========================\\n[2023-05-01T00:49:40.524Z] ========================\\n[2023-05-01T00:49:40.524Z] Weakening server foodnstuff\\n[2023-05-01T00:49:40.524Z] Progress: 15/6\\n[2023-05-01T00:49:40.524Z] ========================\\n[2023-05-01T00:49:43.517Z] ========================\\n[2023-05-01T00:49:43.517Z] Growing server foodnstuff\\n[2023-05-01T00:49:43.517Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:49:43.517Z] ========================\\n[2023-05-01T00:49:45.778Z] ========================\\n[2023-05-01T00:49:45.778Z] Weakening server foodnstuff\\n[2023-05-01T00:49:45.778Z] Progress: 15/6\\n[2023-05-01T00:49:45.778Z] ========================\\n[2023-05-01T00:49:48.772Z] ========================\\n[2023-05-01T00:49:48.772Z] Growing server foodnstuff\\n[2023-05-01T00:49:48.772Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:49:48.772Z] ========================\\n[2023-05-01T00:49:51.033Z] ========================\\n[2023-05-01T00:49:51.033Z] Weakening server foodnstuff\\n[2023-05-01T00:49:51.033Z] Progress: 15/6\\n[2023-05-01T00:49:51.033Z] ========================\\n[2023-05-01T00:49:54.026Z] ========================\\n[2023-05-01T00:49:54.026Z] Growing server foodnstuff\\n[2023-05-01T00:49:54.026Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:49:54.026Z] ========================\\n[2023-05-01T00:49:56.286Z] ========================\\n[2023-05-01T00:49:56.286Z] Weakening server foodnstuff\\n[2023-05-01T00:49:56.286Z] Progress: 15/6\\n[2023-05-01T00:49:56.286Z] ========================\\n[2023-05-01T00:49:59.279Z] ========================\\n[2023-05-01T00:49:59.279Z] Growing server foodnstuff\\n[2023-05-01T00:49:59.279Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:49:59.279Z] ========================\\n[2023-05-01T00:50:01.541Z] ========================\\n[2023-05-01T00:50:01.541Z] Weakening server foodnstuff\\n[2023-05-01T00:50:01.542Z] Progress: 15/6\\n[2023-05-01T00:50:01.542Z] ========================\\n[2023-05-01T00:50:04.534Z] ========================\\n[2023-05-01T00:50:04.534Z] Growing server foodnstuff\\n[2023-05-01T00:50:04.534Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:50:04.534Z] ========================\\n[2023-05-01T00:50:06.796Z] ========================\\n[2023-05-01T00:50:06.796Z] Weakening server foodnstuff\\n[2023-05-01T00:50:06.796Z] Progress: 14.964/6\\n[2023-05-01T00:50:06.796Z] ========================\\n[2023-05-01T00:50:10.499Z] =============== SUMMARY ===============\\n[2023-05-01T00:50:10.499Z] Initial ask price: 1774.979229350035\\n[2023-05-01T00:50:10.499Z] Final ask price: 1764.5146097657857\\n[2023-05-01T00:50:10.499Z] Initial bid price: 1753.8065148846272\\n[2023-05-01T00:50:10.499Z] Final bid price: 1743.4667217765318\\n[2023-05-01T00:50:10.499Z] =======================================\\n[2023-05-01T00:50:11.500Z] ========================\\n[2023-05-01T00:50:11.500Z] Growing server foodnstuff\\n[2023-05-01T00:50:11.500Z] Progress: 0/45000000\\n[2023-05-01T00:50:11.500Z] ========================\\n[2023-05-01T00:50:13.762Z] ========================\\n[2023-05-01T00:50:13.762Z] Weakening server foodnstuff\\n[2023-05-01T00:50:13.762Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:50:13.762Z] ========================\\n[2023-05-01T00:50:16.758Z] ========================\\n[2023-05-01T00:50:16.758Z] Growing server foodnstuff\\n[2023-05-01T00:50:16.758Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:50:16.758Z] ========================\\n[2023-05-01T00:50:19.020Z] ========================\\n[2023-05-01T00:50:19.020Z] Weakening server foodnstuff\\n[2023-05-01T00:50:19.020Z] Progress: 15/6\\n[2023-05-01T00:50:19.020Z] ========================\\n[2023-05-01T00:50:22.013Z] ========================\\n[2023-05-01T00:50:22.013Z] Growing server foodnstuff\\n[2023-05-01T00:50:22.013Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:50:22.013Z] ========================\\n[2023-05-01T00:50:24.275Z] ========================\\n[2023-05-01T00:50:24.275Z] Weakening server foodnstuff\\n[2023-05-01T00:50:24.275Z] Progress: 15/6\\n[2023-05-01T00:50:24.275Z] ========================\\n[2023-05-01T00:50:27.268Z] ========================\\n[2023-05-01T00:50:27.268Z] Growing server foodnstuff\\n[2023-05-01T00:50:27.268Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:50:27.268Z] ========================\\n[2023-05-01T00:50:29.529Z] ========================\\n[2023-05-01T00:50:29.529Z] Weakening server foodnstuff\\n[2023-05-01T00:50:29.529Z] Progress: 15/6\\n[2023-05-01T00:50:29.529Z] ========================\\n[2023-05-01T00:50:32.522Z] ========================\\n[2023-05-01T00:50:32.522Z] Growing server foodnstuff\\n[2023-05-01T00:50:32.522Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:50:32.522Z] ========================\\n[2023-05-01T00:50:34.783Z] ========================\\n[2023-05-01T00:50:34.783Z] Weakening server foodnstuff\\n[2023-05-01T00:50:34.783Z] Progress: 15/6\\n[2023-05-01T00:50:34.783Z] ========================\\n[2023-05-01T00:50:37.777Z] ========================\\n[2023-05-01T00:50:37.777Z] Growing server foodnstuff\\n[2023-05-01T00:50:37.777Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:50:37.777Z] ========================\\n[2023-05-01T00:50:40.037Z] ========================\\n[2023-05-01T00:50:40.037Z] Weakening server foodnstuff\\n[2023-05-01T00:50:40.037Z] Progress: 14.944/6\\n[2023-05-01T00:50:40.037Z] ========================\\n[2023-05-01T00:50:43.738Z] =============== SUMMARY ===============\\n[2023-05-01T00:50:43.738Z] Initial ask price: 1764.5146097657857\\n[2023-05-01T00:50:43.738Z] Final ask price: 1748.5714405946608\\n[2023-05-01T00:50:43.738Z] Initial bid price: 1743.4667217765318\\n[2023-05-01T00:50:43.738Z] Final bid price: 1727.7137295736509\\n[2023-05-01T00:50:43.738Z] =======================================\\n[2023-05-01T00:50:44.739Z] ========================\\n[2023-05-01T00:50:44.739Z] Growing server foodnstuff\\n[2023-05-01T00:50:44.739Z] Progress: 0/45000000\\n[2023-05-01T00:50:44.739Z] ========================\\n[2023-05-01T00:50:47.001Z] ========================\\n[2023-05-01T00:50:47.001Z] Weakening server foodnstuff\\n[2023-05-01T00:50:47.001Z] Progress: 15.04/6\\n[2023-05-01T00:50:47.001Z] ========================\\n[2023-05-01T00:50:49.996Z] ========================\\n[2023-05-01T00:50:49.996Z] Growing server foodnstuff\\n[2023-05-01T00:50:49.996Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:50:49.996Z] ========================\\n[2023-05-01T00:50:52.257Z] ========================\\n[2023-05-01T00:50:52.257Z] Weakening server foodnstuff\\n[2023-05-01T00:50:52.257Z] Progress: 15/6\\n[2023-05-01T00:50:52.257Z] ========================\\n[2023-05-01T00:50:55.250Z] ========================\\n[2023-05-01T00:50:55.251Z] Growing server foodnstuff\\n[2023-05-01T00:50:55.251Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:50:55.251Z] ========================\\n[2023-05-01T00:50:57.512Z] ========================\\n[2023-05-01T00:50:57.512Z] Weakening server foodnstuff\\n[2023-05-01T00:50:57.512Z] Progress: 15/6\\n[2023-05-01T00:50:57.512Z] ========================\\n[2023-05-01T00:51:00.505Z] ========================\\n[2023-05-01T00:51:00.505Z] Growing server foodnstuff\\n[2023-05-01T00:51:00.505Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:51:00.505Z] ========================\\n[2023-05-01T00:51:02.766Z] ========================\\n[2023-05-01T00:51:02.766Z] Weakening server foodnstuff\\n[2023-05-01T00:51:02.766Z] Progress: 15/6\\n[2023-05-01T00:51:02.766Z] ========================\\n[2023-05-01T00:51:05.758Z] ========================\\n[2023-05-01T00:51:05.758Z] Growing server foodnstuff\\n[2023-05-01T00:51:05.758Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:51:05.758Z] ========================\\n[2023-05-01T00:51:08.019Z] ========================\\n[2023-05-01T00:51:08.019Z] Weakening server foodnstuff\\n[2023-05-01T00:51:08.019Z] Progress: 15/6\\n[2023-05-01T00:51:08.019Z] ========================\\n[2023-05-01T00:51:11.013Z] ========================\\n[2023-05-01T00:51:11.013Z] Growing server foodnstuff\\n[2023-05-01T00:51:11.013Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:51:11.013Z] ========================\\n[2023-05-01T00:51:13.274Z] ========================\\n[2023-05-01T00:51:13.274Z] Weakening server foodnstuff\\n[2023-05-01T00:51:13.274Z] Progress: 14.944/6\\n[2023-05-01T00:51:13.274Z] ========================\\n[2023-05-01T00:51:16.974Z] =============== SUMMARY ===============\\n[2023-05-01T00:51:16.974Z] Initial ask price: 1748.5714405946608\\n[2023-05-01T00:51:16.974Z] Final ask price: 1752.968768301461\\n[2023-05-01T00:51:16.974Z] Initial bid price: 1727.7137295736509\\n[2023-05-01T00:51:16.974Z] Final bid price: 1732.058604067249\\n[2023-05-01T00:51:16.974Z] =======================================\\n[2023-05-01T00:51:17.975Z] ========================\\n[2023-05-01T00:51:17.976Z] Growing server foodnstuff\\n[2023-05-01T00:51:17.976Z] Progress: 0/45000000\\n[2023-05-01T00:51:17.976Z] ========================\\n[2023-05-01T00:51:20.237Z] ========================\\n[2023-05-01T00:51:20.237Z] Weakening server foodnstuff\\n[2023-05-01T00:51:20.237Z] Progress: 15/6\\n[2023-05-01T00:51:20.237Z] ========================\\n[2023-05-01T00:51:23.230Z] ========================\\n[2023-05-01T00:51:23.230Z] Growing server foodnstuff\\n[2023-05-01T00:51:23.230Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:51:23.230Z] ========================\\n[2023-05-01T00:51:25.491Z] ========================\\n[2023-05-01T00:51:25.491Z] Weakening server foodnstuff\\n[2023-05-01T00:51:25.491Z] Progress: 15/6\\n[2023-05-01T00:51:25.491Z] ========================\\n[2023-05-01T00:51:28.485Z] ========================\\n[2023-05-01T00:51:28.485Z] Growing server foodnstuff\\n[2023-05-01T00:51:28.485Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:51:28.485Z] ========================\\n[2023-05-01T00:51:30.746Z] ========================\\n[2023-05-01T00:51:30.746Z] Weakening server foodnstuff\\n[2023-05-01T00:51:30.746Z] Progress: 15/6\\n[2023-05-01T00:51:30.746Z] ========================\\n[2023-05-01T00:51:33.737Z] ========================\\n[2023-05-01T00:51:33.737Z] Growing server foodnstuff\\n[2023-05-01T00:51:33.738Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:51:33.738Z] ========================\\n[2023-05-01T00:51:35.997Z] ========================\\n[2023-05-01T00:51:35.998Z] Weakening server foodnstuff\\n[2023-05-01T00:51:35.998Z] Progress: 15/6\\n[2023-05-01T00:51:35.998Z] ========================\\n[2023-05-01T00:51:38.993Z] ========================\\n[2023-05-01T00:51:38.993Z] Growing server foodnstuff\\n[2023-05-01T00:51:38.993Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:51:38.993Z] ========================\\n[2023-05-01T00:51:41.253Z] ========================\\n[2023-05-01T00:51:41.253Z] Weakening server foodnstuff\\n[2023-05-01T00:51:41.253Z] Progress: 15/6\\n[2023-05-01T00:51:41.253Z] ========================\\n[2023-05-01T00:51:44.246Z] ========================\\n[2023-05-01T00:51:44.246Z] Growing server foodnstuff\\n[2023-05-01T00:51:44.246Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:51:44.246Z] ========================\\n[2023-05-01T00:51:46.505Z] ========================\\n[2023-05-01T00:51:46.505Z] Weakening server foodnstuff\\n[2023-05-01T00:51:46.505Z] Progress: 14.964/6\\n[2023-05-01T00:51:46.505Z] ========================\\n[2023-05-01T00:51:50.205Z] =============== SUMMARY ===============\\n[2023-05-01T00:51:50.205Z] Initial ask price: 1752.968768301461\\n[2023-05-01T00:51:50.205Z] Final ask price: 1741.909300534843\\n[2023-05-01T00:51:50.205Z] Initial bid price: 1732.058604067249\\n[2023-05-01T00:51:50.205Z] Final bid price: 1721.1310583813458\\n[2023-05-01T00:51:50.205Z] =======================================\\n[2023-05-01T00:51:51.207Z] ========================\\n[2023-05-01T00:51:51.207Z] Growing server foodnstuff\\n[2023-05-01T00:51:51.207Z] Progress: 0/45000000\\n[2023-05-01T00:51:51.207Z] ========================\\n[2023-05-01T00:51:53.468Z] ========================\\n[2023-05-01T00:51:53.468Z] Weakening server foodnstuff\\n[2023-05-01T00:51:53.468Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:51:53.468Z] ========================\\n[2023-05-01T00:51:56.462Z] ========================\\n[2023-05-01T00:51:56.462Z] Growing server foodnstuff\\n[2023-05-01T00:51:56.462Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:51:56.462Z] ========================\\n[2023-05-01T00:51:58.722Z] ========================\\n[2023-05-01T00:51:58.722Z] Weakening server foodnstuff\\n[2023-05-01T00:51:58.722Z] Progress: 15/6\\n[2023-05-01T00:51:58.722Z] ========================\\n[2023-05-01T00:52:01.714Z] ========================\\n[2023-05-01T00:52:01.714Z] Growing server foodnstuff\\n[2023-05-01T00:52:01.714Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:52:01.714Z] ========================\\n[2023-05-01T00:52:03.975Z] ========================\\n[2023-05-01T00:52:03.975Z] Weakening server foodnstuff\\n[2023-05-01T00:52:03.975Z] Progress: 15/6\\n[2023-05-01T00:52:03.975Z] ========================\\n[2023-05-01T00:52:06.967Z] ========================\\n[2023-05-01T00:52:06.967Z] Growing server foodnstuff\\n[2023-05-01T00:52:06.967Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:52:06.967Z] ========================\\n[2023-05-01T00:52:09.227Z] ========================\\n[2023-05-01T00:52:09.227Z] Weakening server foodnstuff\\n[2023-05-01T00:52:09.227Z] Progress: 15/6\\n[2023-05-01T00:52:09.227Z] ========================\\n[2023-05-01T00:52:12.220Z] ========================\\n[2023-05-01T00:52:12.220Z] Growing server foodnstuff\\n[2023-05-01T00:52:12.220Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:52:12.220Z] ========================\\n[2023-05-01T00:52:14.480Z] ========================\\n[2023-05-01T00:52:14.480Z] Weakening server foodnstuff\\n[2023-05-01T00:52:14.480Z] Progress: 15/6\\n[2023-05-01T00:52:14.480Z] ========================\\n[2023-05-01T00:52:17.472Z] ========================\\n[2023-05-01T00:52:17.472Z] Growing server foodnstuff\\n[2023-05-01T00:52:17.472Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:52:17.472Z] ========================\\n[2023-05-01T00:52:19.733Z] ========================\\n[2023-05-01T00:52:19.733Z] Weakening server foodnstuff\\n[2023-05-01T00:52:19.733Z] Progress: 14.944/6\\n[2023-05-01T00:52:19.733Z] ========================\\n[2023-05-01T00:52:23.430Z] =============== SUMMARY ===============\\n[2023-05-01T00:52:23.430Z] Initial ask price: 1741.909300534843\\n[2023-05-01T00:52:23.430Z] Final ask price: 1747.984096307325\\n[2023-05-01T00:52:23.430Z] Initial bid price: 1721.1310583813458\\n[2023-05-01T00:52:23.430Z] Final bid price: 1727.1333913811939\\n[2023-05-01T00:52:23.430Z] =======================================\\n[2023-05-01T00:52:24.432Z] ========================\\n[2023-05-01T00:52:24.432Z] Growing server foodnstuff\\n[2023-05-01T00:52:24.432Z] Progress: 0/45000000\\n[2023-05-01T00:52:24.432Z] ========================\\n[2023-05-01T00:52:26.693Z] ========================\\n[2023-05-01T00:52:26.693Z] Weakening server foodnstuff\\n[2023-05-01T00:52:26.693Z] Progress: 15.04/6\\n[2023-05-01T00:52:26.693Z] ========================\\n[2023-05-01T00:52:29.686Z] ========================\\n[2023-05-01T00:52:29.686Z] Growing server foodnstuff\\n[2023-05-01T00:52:29.686Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:52:29.686Z] ========================\\n[2023-05-01T00:52:31.945Z] ========================\\n[2023-05-01T00:52:31.945Z] Weakening server foodnstuff\\n[2023-05-01T00:52:31.945Z] Progress: 15/6\\n[2023-05-01T00:52:31.945Z] ========================\\n[2023-05-01T00:52:34.937Z] ========================\\n[2023-05-01T00:52:34.938Z] Growing server foodnstuff\\n[2023-05-01T00:52:34.938Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:52:34.938Z] ========================\\n[2023-05-01T00:52:37.197Z] ========================\\n[2023-05-01T00:52:37.197Z] Weakening server foodnstuff\\n[2023-05-01T00:52:37.197Z] Progress: 15/6\\n[2023-05-01T00:52:37.197Z] ========================\\n[2023-05-01T00:52:40.192Z] ========================\\n[2023-05-01T00:52:40.193Z] Growing server foodnstuff\\n[2023-05-01T00:52:40.193Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:52:40.193Z] ========================\\n[2023-05-01T00:52:42.452Z] ========================\\n[2023-05-01T00:52:42.452Z] Weakening server foodnstuff\\n[2023-05-01T00:52:42.453Z] Progress: 15/6\\n[2023-05-01T00:52:42.453Z] ========================\\n[2023-05-01T00:52:45.445Z] ========================\\n[2023-05-01T00:52:45.445Z] Growing server foodnstuff\\n[2023-05-01T00:52:45.445Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:52:45.445Z] ========================\\n[2023-05-01T00:52:47.705Z] ========================\\n[2023-05-01T00:52:47.705Z] Weakening server foodnstuff\\n[2023-05-01T00:52:47.705Z] Progress: 15/6\\n[2023-05-01T00:52:47.705Z] ========================\\n[2023-05-01T00:52:50.697Z] ========================\\n[2023-05-01T00:52:50.697Z] Growing server foodnstuff\\n[2023-05-01T00:52:50.697Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:52:50.697Z] ========================\\n[2023-05-01T00:52:52.957Z] ========================\\n[2023-05-01T00:52:52.958Z] Weakening server foodnstuff\\n[2023-05-01T00:52:52.958Z] Progress: 14.944/6\\n[2023-05-01T00:52:52.958Z] ========================\\n[2023-05-01T00:52:56.656Z] =============== SUMMARY ===============\\n[2023-05-01T00:52:56.656Z] Initial ask price: 1747.984096307325\\n[2023-05-01T00:52:56.656Z] Final ask price: 1727.2631597461234\\n[2023-05-01T00:52:56.656Z] Initial bid price: 1727.1333913811939\\n[2023-05-01T00:52:56.656Z] Final bid price: 1706.6596230493503\\n[2023-05-01T00:52:56.656Z] =======================================\\n[2023-05-01T00:52:57.656Z] ========================\\n[2023-05-01T00:52:57.656Z] Growing server foodnstuff\\n[2023-05-01T00:52:57.656Z] Progress: 0/45000000\\n[2023-05-01T00:52:57.656Z] ========================\\n[2023-05-01T00:52:59.918Z] ========================\\n[2023-05-01T00:52:59.918Z] Weakening server foodnstuff\\n[2023-05-01T00:52:59.918Z] Progress: 15/6\\n[2023-05-01T00:52:59.918Z] ========================\\n[2023-05-01T00:53:02.909Z] ========================\\n[2023-05-01T00:53:02.909Z] Growing server foodnstuff\\n[2023-05-01T00:53:02.909Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:53:02.909Z] ========================\\n[2023-05-01T00:53:05.170Z] ========================\\n[2023-05-01T00:53:05.170Z] Weakening server foodnstuff\\n[2023-05-01T00:53:05.170Z] Progress: 15/6\\n[2023-05-01T00:53:05.170Z] ========================\\n[2023-05-01T00:53:08.162Z] ========================\\n[2023-05-01T00:53:08.162Z] Growing server foodnstuff\\n[2023-05-01T00:53:08.162Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:53:08.162Z] ========================\\n[2023-05-01T00:53:10.422Z] ========================\\n[2023-05-01T00:53:10.422Z] Weakening server foodnstuff\\n[2023-05-01T00:53:10.422Z] Progress: 15/6\\n[2023-05-01T00:53:10.422Z] ========================\\n[2023-05-01T00:53:13.414Z] ========================\\n[2023-05-01T00:53:13.414Z] Growing server foodnstuff\\n[2023-05-01T00:53:13.414Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:53:13.414Z] ========================\\n[2023-05-01T00:53:15.674Z] ========================\\n[2023-05-01T00:53:15.674Z] Weakening server foodnstuff\\n[2023-05-01T00:53:15.674Z] Progress: 15/6\\n[2023-05-01T00:53:15.674Z] ========================\\n[2023-05-01T00:53:18.666Z] ========================\\n[2023-05-01T00:53:18.666Z] Growing server foodnstuff\\n[2023-05-01T00:53:18.666Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:53:18.666Z] ========================\\n[2023-05-01T00:53:20.927Z] ========================\\n[2023-05-01T00:53:20.927Z] Weakening server foodnstuff\\n[2023-05-01T00:53:20.927Z] Progress: 15/6\\n[2023-05-01T00:53:20.927Z] ========================\\n[2023-05-01T00:53:23.920Z] ========================\\n[2023-05-01T00:53:23.920Z] Growing server foodnstuff\\n[2023-05-01T00:53:23.920Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:53:23.920Z] ========================\\n[2023-05-01T00:53:26.181Z] ========================\\n[2023-05-01T00:53:26.181Z] Weakening server foodnstuff\\n[2023-05-01T00:53:26.181Z] Progress: 14.964/6\\n[2023-05-01T00:53:26.181Z] ========================\\n[2023-05-01T00:53:29.881Z] =============== SUMMARY ===============\\n[2023-05-01T00:53:29.881Z] Initial ask price: 1727.2631597461234\\n[2023-05-01T00:53:29.881Z] Final ask price: 1722.8482453419317\\n[2023-05-01T00:53:29.881Z] Initial bid price: 1706.6596230493503\\n[2023-05-01T00:53:29.881Z] Final bid price: 1702.29737164004\\n[2023-05-01T00:53:29.881Z] =======================================\\n[2023-05-01T00:53:30.882Z] ========================\\n[2023-05-01T00:53:30.882Z] Growing server foodnstuff\\n[2023-05-01T00:53:30.882Z] Progress: 0/45000000\\n[2023-05-01T00:53:30.882Z] ========================\\n[2023-05-01T00:53:33.143Z] ========================\\n[2023-05-01T00:53:33.143Z] Weakening server foodnstuff\\n[2023-05-01T00:53:33.143Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:53:33.143Z] ========================\\n[2023-05-01T00:53:36.138Z] ========================\\n[2023-05-01T00:53:36.138Z] Growing server foodnstuff\\n[2023-05-01T00:53:36.138Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:53:36.138Z] ========================\\n[2023-05-01T00:53:38.397Z] ========================\\n[2023-05-01T00:53:38.397Z] Weakening server foodnstuff\\n[2023-05-01T00:53:38.397Z] Progress: 15/6\\n[2023-05-01T00:53:38.397Z] ========================\\n[2023-05-01T00:53:41.391Z] ========================\\n[2023-05-01T00:53:41.391Z] Growing server foodnstuff\\n[2023-05-01T00:53:41.391Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:53:41.391Z] ========================\\n[2023-05-01T00:53:43.650Z] ========================\\n[2023-05-01T00:53:43.650Z] Weakening server foodnstuff\\n[2023-05-01T00:53:43.650Z] Progress: 15/6\\n[2023-05-01T00:53:43.650Z] ========================\\n[2023-05-01T00:53:46.643Z] ========================\\n[2023-05-01T00:53:46.643Z] Growing server foodnstuff\\n[2023-05-01T00:53:46.643Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:53:46.643Z] ========================\\n[2023-05-01T00:53:48.903Z] ========================\\n[2023-05-01T00:53:48.903Z] Weakening server foodnstuff\\n[2023-05-01T00:53:48.903Z] Progress: 15/6\\n[2023-05-01T00:53:48.903Z] ========================\\n[2023-05-01T00:53:51.896Z] ========================\\n[2023-05-01T00:53:51.896Z] Growing server foodnstuff\\n[2023-05-01T00:53:51.896Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:53:51.896Z] ========================\\n[2023-05-01T00:53:54.156Z] ========================\\n[2023-05-01T00:53:54.156Z] Weakening server foodnstuff\\n[2023-05-01T00:53:54.156Z] Progress: 15/6\\n[2023-05-01T00:53:54.156Z] ========================\\n[2023-05-01T00:53:57.147Z] ========================\\n[2023-05-01T00:53:57.147Z] Growing server foodnstuff\\n[2023-05-01T00:53:57.147Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:53:57.147Z] ========================\\n[2023-05-01T00:53:59.407Z] ========================\\n[2023-05-01T00:53:59.407Z] Weakening server foodnstuff\\n[2023-05-01T00:53:59.407Z] Progress: 14.944/6\\n[2023-05-01T00:53:59.407Z] ========================\\n[2023-05-01T00:54:03.104Z] =============== SUMMARY ===============\\n[2023-05-01T00:54:03.104Z] Initial ask price: 1722.8482453419317\\n[2023-05-01T00:54:03.104Z] Final ask price: 1733.9710134073277\\n[2023-05-01T00:54:03.104Z] Initial bid price: 1702.29737164004\\n[2023-05-01T00:54:03.104Z] Final bid price: 1713.2874625515744\\n[2023-05-01T00:54:03.104Z] =======================================\\n[2023-05-01T00:54:04.104Z] ========================\\n[2023-05-01T00:54:04.104Z] Growing server foodnstuff\\n[2023-05-01T00:54:04.104Z] Progress: 0/45000000\\n[2023-05-01T00:54:04.104Z] ========================\\n[2023-05-01T00:54:06.365Z] ========================\\n[2023-05-01T00:54:06.365Z] Weakening server foodnstuff\\n[2023-05-01T00:54:06.365Z] Progress: 15.04/6\\n[2023-05-01T00:54:06.365Z] ========================\\n[2023-05-01T00:54:09.358Z] ========================\\n[2023-05-01T00:54:09.358Z] Growing server foodnstuff\\n[2023-05-01T00:54:09.358Z] Progress: 14668.58737801925/45000000\\n[2023-05-01T00:54:09.358Z] ========================\\n[2023-05-01T00:54:11.619Z] ========================\\n[2023-05-01T00:54:11.619Z] Weakening server foodnstuff\\n[2023-05-01T00:54:11.619Z] Progress: 15/6\\n[2023-05-01T00:54:11.619Z] ========================\\n[2023-05-01T00:54:14.610Z] ========================\\n[2023-05-01T00:54:14.610Z] Growing server foodnstuff\\n[2023-05-01T00:54:14.610Z] Progress: 86054.5450767427/45000000\\n[2023-05-01T00:54:14.610Z] ========================\\n[2023-05-01T00:54:16.869Z] ========================\\n[2023-05-01T00:54:16.869Z] Weakening server foodnstuff\\n[2023-05-01T00:54:16.869Z] Progress: 15/6\\n[2023-05-01T00:54:16.869Z] ========================\\n[2023-05-01T00:54:19.860Z] ========================\\n[2023-05-01T00:54:19.860Z] Growing server foodnstuff\\n[2023-05-01T00:54:19.860Z] Progress: 433698.0951923559/45000000\\n[2023-05-01T00:54:19.860Z] ========================\\n[2023-05-01T00:54:22.119Z] ========================\\n[2023-05-01T00:54:22.119Z] Weakening server foodnstuff\\n[2023-05-01T00:54:22.119Z] Progress: 15/6\\n[2023-05-01T00:54:22.119Z] ========================\\n[2023-05-01T00:54:25.109Z] ========================\\n[2023-05-01T00:54:25.109Z] Growing server foodnstuff\\n[2023-05-01T00:54:25.109Z] Progress: 2126692.6536886706/45000000\\n[2023-05-01T00:54:25.109Z] ========================\\n[2023-05-01T00:54:27.368Z] ========================\\n[2023-05-01T00:54:27.369Z] Weakening server foodnstuff\\n[2023-05-01T00:54:27.369Z] Progress: 15/6\\n[2023-05-01T00:54:27.369Z] ========================\\n[2023-05-01T00:54:30.360Z] ========================\\n[2023-05-01T00:54:30.360Z] Growing server foodnstuff\\n[2023-05-01T00:54:30.360Z] Progress: 10371432.342214258/45000000\\n[2023-05-01T00:54:30.360Z] ========================\\n[2023-05-01T00:54:32.618Z] ========================\\n[2023-05-01T00:54:32.618Z] Weakening server foodnstuff\\n[2023-05-01T00:54:32.618Z] Progress: 14.944/6\\n[2023-05-01T00:54:32.618Z] ========================\\n[2023-05-01T00:54:36.315Z] =============== SUMMARY ===============\\n[2023-05-01T00:54:36.315Z] Initial ask price: 1733.9710134073277\\n[2023-05-01T00:54:36.315Z] Final ask price: 1776.1908126493288\\n[2023-05-01T00:54:36.315Z] Initial bid price: 1713.2874625515744\\n[2023-05-01T00:54:36.315Z] Final bid price: 1755.0036458980446\\n[2023-05-01T00:54:36.315Z] =======================================\\n[2023-05-01T00:54:37.316Z] ========================\\n[2023-05-01T00:54:37.316Z] Growing server foodnstuff\\n[2023-05-01T00:54:37.316Z] Progress: 0/45000000\\n[2023-05-01T00:54:37.316Z] ========================\\n[2023-05-01T00:54:39.576Z] ========================\\n[2023-05-01T00:54:39.576Z] Weakening server foodnstuff\\n[2023-05-01T00:54:39.576Z] Progress: 15/6\\n[2023-05-01T00:54:39.576Z] ========================\\n[2023-05-01T00:54:42.567Z] ========================\\n[2023-05-01T00:54:42.567Z] Growing server foodnstuff\\n[2023-05-01T00:54:42.567Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:54:42.567Z] ========================\\n[2023-05-01T00:54:44.826Z] ========================\\n[2023-05-01T00:54:44.826Z] Weakening server foodnstuff\\n[2023-05-01T00:54:44.826Z] Progress: 15/6\\n[2023-05-01T00:54:44.826Z] ========================\\n[2023-05-01T00:54:47.818Z] ========================\\n[2023-05-01T00:54:47.818Z] Growing server foodnstuff\\n[2023-05-01T00:54:47.818Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:54:47.818Z] ========================\\n[2023-05-01T00:54:50.077Z] ========================\\n[2023-05-01T00:54:50.077Z] Weakening server foodnstuff\\n[2023-05-01T00:54:50.077Z] Progress: 15/6\\n[2023-05-01T00:54:50.077Z] ========================\\n[2023-05-01T00:54:53.069Z] ========================\\n[2023-05-01T00:54:53.069Z] Growing server foodnstuff\\n[2023-05-01T00:54:53.069Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:54:53.069Z] ========================\\n[2023-05-01T00:54:55.328Z] ========================\\n[2023-05-01T00:54:55.328Z] Weakening server foodnstuff\\n[2023-05-01T00:54:55.328Z] Progress: 15/6\\n[2023-05-01T00:54:55.328Z] ========================\\n[2023-05-01T00:54:58.318Z] ========================\\n[2023-05-01T00:54:58.318Z] Growing server foodnstuff\\n[2023-05-01T00:54:58.318Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:54:58.318Z] ========================\\n[2023-05-01T00:55:00.578Z] ========================\\n[2023-05-01T00:55:00.578Z] Weakening server foodnstuff\\n[2023-05-01T00:55:00.578Z] Progress: 15/6\\n[2023-05-01T00:55:00.578Z] ========================\\n[2023-05-01T00:55:03.568Z] ========================\\n[2023-05-01T00:55:03.568Z] Growing server foodnstuff\\n[2023-05-01T00:55:03.568Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:55:03.568Z] ========================\\n[2023-05-01T00:55:05.828Z] ========================\\n[2023-05-01T00:55:05.828Z] Weakening server foodnstuff\\n[2023-05-01T00:55:05.828Z] Progress: 14.964/6\\n[2023-05-01T00:55:05.828Z] ========================\\n[2023-05-01T00:55:09.524Z] =============== SUMMARY ===============\\n[2023-05-01T00:55:09.524Z] Initial ask price: 1770.8148605967415\\n[2023-05-01T00:55:09.524Z] Final ask price: 1778.3603804090976\\n[2023-05-01T00:55:09.524Z] Initial bid price: 1749.6918205101003\\n[2023-05-01T00:55:09.524Z] Final bid price: 1757.1473341219116\\n[2023-05-01T00:55:09.524Z] =======================================\\n[2023-05-01T00:55:10.525Z] ========================\\n[2023-05-01T00:55:10.525Z] Growing server foodnstuff\\n[2023-05-01T00:55:10.525Z] Progress: 0/45000000\\n[2023-05-01T00:55:10.525Z] ========================\\n[2023-05-01T00:55:12.785Z] ========================\\n[2023-05-01T00:55:12.785Z] Weakening server foodnstuff\\n[2023-05-01T00:55:12.785Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:55:12.785Z] ========================\\n[2023-05-01T00:55:15.779Z] ========================\\n[2023-05-01T00:55:15.779Z] Growing server foodnstuff\\n[2023-05-01T00:55:15.779Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:55:15.779Z] ========================\\n[2023-05-01T00:55:18.038Z] ========================\\n[2023-05-01T00:55:18.038Z] Weakening server foodnstuff\\n[2023-05-01T00:55:18.038Z] Progress: 15/6\\n[2023-05-01T00:55:18.038Z] ========================\\n[2023-05-01T00:55:21.030Z] ========================\\n[2023-05-01T00:55:21.030Z] Growing server foodnstuff\\n[2023-05-01T00:55:21.030Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:55:21.030Z] ========================\\n[2023-05-01T00:55:23.289Z] ========================\\n[2023-05-01T00:55:23.289Z] Weakening server foodnstuff\\n[2023-05-01T00:55:23.289Z] Progress: 15/6\\n[2023-05-01T00:55:23.289Z] ========================\\n[2023-05-01T00:55:26.276Z] ========================\\n[2023-05-01T00:55:26.276Z] Growing server foodnstuff\\n[2023-05-01T00:55:26.276Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:55:26.276Z] ========================\\n[2023-05-01T00:55:28.532Z] ========================\\n[2023-05-01T00:55:28.532Z] Weakening server foodnstuff\\n[2023-05-01T00:55:28.532Z] Progress: 15/6\\n[2023-05-01T00:55:28.532Z] ========================\\n[2023-05-01T00:55:31.520Z] ========================\\n[2023-05-01T00:55:31.520Z] Growing server foodnstuff\\n[2023-05-01T00:55:31.520Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:55:31.520Z] ========================\\n[2023-05-01T00:55:33.775Z] ========================\\n[2023-05-01T00:55:33.775Z] Weakening server foodnstuff\\n[2023-05-01T00:55:33.775Z] Progress: 15/6\\n[2023-05-01T00:55:33.775Z] ========================\\n[2023-05-01T00:55:36.762Z] ========================\\n[2023-05-01T00:55:36.762Z] Growing server foodnstuff\\n[2023-05-01T00:55:36.762Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:55:36.762Z] ========================\\n[2023-05-01T00:55:39.018Z] ========================\\n[2023-05-01T00:55:39.018Z] Weakening server foodnstuff\\n[2023-05-01T00:55:39.018Z] Progress: 14.944/6\\n[2023-05-01T00:55:39.018Z] ========================\\n[2023-05-01T00:55:42.708Z] =============== SUMMARY ===============\\n[2023-05-01T00:55:42.708Z] Initial ask price: 1778.3603804090976\\n[2023-05-01T00:55:42.708Z] Final ask price: 1815.0661896854729\\n[2023-05-01T00:55:42.708Z] Initial bid price: 1757.1473341219116\\n[2023-05-01T00:55:42.708Z] Final bid price: 1793.4153007429024\\n[2023-05-01T00:55:42.708Z] =======================================\\n[2023-05-01T00:55:43.709Z] ========================\\n[2023-05-01T00:55:43.709Z] Growing server foodnstuff\\n[2023-05-01T00:55:43.709Z] Progress: 0/45000000\\n[2023-05-01T00:55:43.709Z] ========================\\n[2023-05-01T00:55:45.967Z] ========================\\n[2023-05-01T00:55:45.967Z] Weakening server foodnstuff\\n[2023-05-01T00:55:45.967Z] Progress: 15/6\\n[2023-05-01T00:55:45.967Z] ========================\\n[2023-05-01T00:55:48.954Z] ========================\\n[2023-05-01T00:55:48.954Z] Growing server foodnstuff\\n[2023-05-01T00:55:48.954Z] Progress: 14619.770568325945/45000000\\n[2023-05-01T00:55:48.954Z] ========================\\n[2023-05-01T00:55:51.210Z] ========================\\n[2023-05-01T00:55:51.210Z] Weakening server foodnstuff\\n[2023-05-01T00:55:51.210Z] Progress: 15/6\\n[2023-05-01T00:55:51.210Z] ========================\\n[2023-05-01T00:55:54.196Z] ========================\\n[2023-05-01T00:55:54.196Z] Growing server foodnstuff\\n[2023-05-01T00:55:54.196Z] Progress: 85816.81136027815/45000000\\n[2023-05-01T00:55:54.196Z] ========================\\n[2023-05-01T00:55:56.528Z] ========================\\n[2023-05-01T00:55:56.528Z] Weakening server foodnstuff\\n[2023-05-01T00:55:56.528Z] Progress: 15/6\\n[2023-05-01T00:55:56.528Z] ========================\\n[2023-05-01T00:55:59.516Z] ========================\\n[2023-05-01T00:55:59.516Z] Growing server foodnstuff\\n[2023-05-01T00:55:59.516Z] Progress: 432540.3521874541/45000000\\n[2023-05-01T00:55:59.516Z] ========================\\n[2023-05-01T00:56:01.772Z] ========================\\n[2023-05-01T00:56:01.772Z] Weakening server foodnstuff\\n[2023-05-01T00:56:01.772Z] Progress: 15/6\\n[2023-05-01T00:56:01.772Z] ========================\\n[2023-05-01T00:56:04.759Z] ========================\\n[2023-05-01T00:56:04.759Z] Growing server foodnstuff\\n[2023-05-01T00:56:04.759Z] Progress: 2121054.54359923/45000000\\n[2023-05-01T00:56:04.759Z] ========================\\n[2023-05-01T00:56:07.015Z] ========================\\n[2023-05-01T00:56:07.015Z] Weakening server foodnstuff\\n[2023-05-01T00:56:07.015Z] Progress: 15/6\\n[2023-05-01T00:56:07.015Z] ========================\\n[2023-05-01T00:56:10.002Z] ========================\\n[2023-05-01T00:56:10.002Z] Growing server foodnstuff\\n[2023-05-01T00:56:10.002Z] Progress: 10343975.225007707/45000000\\n[2023-05-01T00:56:10.002Z] ========================\\n[2023-05-01T00:56:12.258Z] ========================\\n[2023-05-01T00:56:12.258Z] Weakening server foodnstuff\\n[2023-05-01T00:56:12.258Z] Progress: 14.964/6\\n[2023-05-01T00:56:12.258Z] ========================\\n[2023-05-01T00:56:15.950Z] =============== SUMMARY ===============\\n[2023-05-01T00:56:15.950Z] Initial ask price: 1810.223733112709\\n[2023-05-01T00:56:15.950Z] Final ask price: 1819.2357179252076\\n[2023-05-01T00:56:15.950Z] Initial bid price: 1788.6306070716032\\n[2023-05-01T00:56:15.950Z] Final bid price: 1797.5350930593004\\n[2023-05-01T00:56:15.950Z] =======================================\\n[2023-05-01T00:56:16.952Z] ========================\\n[2023-05-01T00:56:16.952Z] Growing server foodnstuff\\n[2023-05-01T00:56:16.952Z] Progress: 0/45000000\\n[2023-05-01T00:56:16.952Z] ========================\\n[2023-05-01T00:56:19.209Z] ========================\\n[2023-05-01T00:56:19.209Z] Weakening server foodnstuff\\n[2023-05-01T00:56:19.209Z] Progress: 15.152000000000001/6\\n[2023-05-01T00:56:19.209Z] ========================\\n[2023-05-01T00:56:22.197Z] ========================\\n[2023-05-01T00:56:22.197Z] Growing server foodnstuff\\n[2023-05-01T00:56:22.197Z] Progress: 14668.313293308052/45000000\\n[2023-05-01T00:56:22.197Z] ========================\\n[2023-05-01T00:56:24.452Z] ========================\\n[2023-05-01T00:56:24.452Z] Weakening server foodnstuff\\n[2023-05-01T00:56:24.452Z] Progress: 15/6\\n[2023-05-01T00:56:24.452Z] ========================\\n[2023-05-01T00:56:27.438Z] ========================\\n[2023-05-01T00:56:27.438Z] Growing server foodnstuff\\n[2023-05-01T00:56:27.438Z] Progress: 86053.21030748129/45000000\\n[2023-05-01T00:56:27.438Z] ========================\\n[2023-05-01T00:56:29.692Z] ========================\\n[2023-05-01T00:56:29.692Z] Weakening server foodnstuff\\n[2023-05-01T00:56:29.692Z] Progress: 15/6\\n[2023-05-01T00:56:29.692Z] ========================\\n[2023-05-01T00:56:32.677Z] ========================\\n[2023-05-01T00:56:32.677Z] Growing server foodnstuff\\n[2023-05-01T00:56:32.677Z] Progress: 433691.5949794348/45000000\\n[2023-05-01T00:56:32.677Z] ========================\\n[2023-05-01T00:56:34.932Z] ========================\\n[2023-05-01T00:56:34.932Z] Weakening server foodnstuff\\n[2023-05-01T00:56:34.932Z] Progress: 15/6\\n[2023-05-01T00:56:34.932Z] ========================\\n[2023-05-01T00:56:37.917Z] ========================\\n[2023-05-01T00:56:37.917Z] Growing server foodnstuff\\n[2023-05-01T00:56:37.917Z] Progress: 2126660.998203905/45000000\\n[2023-05-01T00:56:37.917Z] ========================\\n[2023-05-01T00:56:40.172Z] ========================\\n[2023-05-01T00:56:40.172Z] Weakening server foodnstuff\\n[2023-05-01T00:56:40.172Z] Progress: 15/6\\n[2023-05-01T00:56:40.172Z] ========================\\n[2023-05-01T00:56:43.157Z] ========================\\n[2023-05-01T00:56:43.157Z] Growing server foodnstuff\\n[2023-05-01T00:56:43.157Z] Progress: 10371278.182692423/45000000\\n[2023-05-01T00:56:43.157Z] ========================\\n[2023-05-01T00:56:45.412Z] ========================\\n[2023-05-01T00:56:45.412Z] Weakening server foodnstuff\\n[2023-05-01T00:56:45.412Z] Progress: 14.944/6\\n[2023-05-01T00:56:45.412Z] ========================\\n[2023-05-01T00:56:49.100Z] =============== SUMMARY ===============\\n[2023-05-01T00:56:49.100Z] Initial ask price: 1819.2357179252076\\n[2023-05-01T00:56:49.100Z] Final ask price: 1804.489577395807\\n[2023-05-01T00:56:49.100Z] Initial bid price: 1797.5350930593004\\n[2023-05-01T00:56:49.100Z] Final bid price: 1782.9648508264731\\n[2023-05-01T00:56:49.100Z] =======================================\\n[2023-05-01T00:56:50.101Z] ========================\\n[2023-05-01T00:56:50.101Z] Growing server foodnstuff\\n[2023-05-01T00:56:50.101Z] Progress: 0/45000000\\n[2023-05-01T00:56:50.101Z] ========================\\n[2023-05-01T00:56:52.356Z] ========================\\n[2023-05-01T00:56:52.356Z] Weakening server foodnstuff\\n[2023-05-01T00:56:52.356Z] Progress: 19.04/6\\n[2023-05-01T00:56:52.356Z] ========================\\n[2023-05-01T00:56:55.397Z] ========================\\n[2023-05-01T00:56:55.397Z] Growing server foodnstuff\\n[2023-05-01T00:56:55.397Z] Progress: 22273.296180417794/45000000\\n[2023-05-01T00:56:55.397Z] ========================\\n[2023-05-01T00:56:57.652Z] ========================\\n[2023-05-01T00:56:57.652Z] Weakening server foodnstuff\\n[2023-05-01T00:56:57.652Z] Progress: 19/6\\n[2023-05-01T00:56:57.652Z] ========================\\n[2023-05-01T00:57:00.693Z] ========================\\n[2023-05-01T00:57:00.693Z] Growing server foodnstuff\\n[2023-05-01T00:57:00.693Z] Progress: 191145.28063559774/45000000\\n[2023-05-01T00:57:00.693Z] ========================\\n[2023-05-01T00:57:02.948Z] ========================\\n[2023-05-01T00:57:02.948Z] Weakening server foodnstuff\\n[2023-05-01T00:57:02.948Z] Progress: 18.5/6\\n[2023-05-01T00:57:02.948Z] ========================\\n[2023-05-01T00:57:05.982Z] ========================\\n[2023-05-01T00:57:05.982Z] Growing server foodnstuff\\n[2023-05-01T00:57:05.982Z] Progress: 1472157.8130182019/45000000\\n[2023-05-01T00:57:05.982Z] ========================\\n[2023-05-01T00:57:08.238Z] ========================\\n[2023-05-01T00:57:08.238Z] Weakening server foodnstuff\\n[2023-05-01T00:57:08.238Z] Progress: 18.5/6\\n[2023-05-01T00:57:08.238Z] ========================\\n[2023-05-01T00:57:11.273Z] ========================\\n[2023-05-01T00:57:11.273Z] Growing server foodnstuff\\n[2023-05-01T00:57:11.273Z] Progress: 11189458.558219185/45000000\\n[2023-05-01T00:57:11.273Z] ========================\\n[2023-05-01T00:57:13.527Z] ========================\\n[2023-05-01T00:57:13.527Z] Weakening server foodnstuff\\n[2023-05-01T00:57:13.527Z] Progress: 14.5/6\\n[2023-05-01T00:57:13.527Z] ========================\\n[2023-05-01T00:57:17.211Z] =============== SUMMARY ===============\\n[2023-05-01T00:57:17.211Z] Initial ask price: 1804.489577395807\\n[2023-05-01T00:57:17.211Z] Final ask price: 1814.0823221123487\\n[2023-05-01T00:57:17.211Z] Initial bid price: 1782.9648508264731\\n[2023-05-01T00:57:17.211Z] Final bid price: 1792.4431691646864\\n[2023-05-01T00:57:17.211Z] =======================================\\n[2023-05-01T00:57:18.212Z] ========================\\n[2023-05-01T00:57:18.212Z] Growing server foodnstuff\\n[2023-05-01T00:57:18.212Z] Progress: 0/45000000\\n[2023-05-01T00:57:18.212Z] ========================\\n[2023-05-01T00:57:20.469Z] ========================\\n[2023-05-01T00:57:20.469Z] Weakening server foodnstuff\\n[2023-05-01T00:57:20.469Z] Progress: 19/6\\n[2023-05-01T00:57:20.469Z] ========================\\n[2023-05-01T00:57:23.510Z] ========================\\n[2023-05-01T00:57:23.510Z] Growing server foodnstuff\\n[2023-05-01T00:57:23.510Z] Progress: 22197.200274174797/45000000\\n[2023-05-01T00:57:23.510Z] ========================\\n[2023-05-01T00:57:25.781Z] ========================\\n[2023-05-01T00:57:25.781Z] Weakening server foodnstuff\\n[2023-05-01T00:57:25.781Z] Progress: 19/6\\n[2023-05-01T00:57:25.781Z] ========================\\n[2023-05-01T00:57:28.822Z] ========================\\n[2023-05-01T00:57:28.822Z] Growing server foodnstuff\\n[2023-05-01T00:57:28.822Z] Progress: 190568.07566427335/45000000\\n[2023-05-01T00:57:28.822Z] ========================\\n[2023-05-01T00:57:31.077Z] ========================\\n[2023-05-01T00:57:31.077Z] Weakening server foodnstuff\\n[2023-05-01T00:57:31.077Z] Progress: 19/6\\n[2023-05-01T00:57:31.077Z] ========================\\n[2023-05-01T00:57:34.118Z] ========================\\n[2023-05-01T00:57:34.118Z] Growing server foodnstuff\\n[2023-05-01T00:57:34.118Z] Progress: 1467699.935965155/45000000\\n[2023-05-01T00:57:34.118Z] ========================\\n[2023-05-01T00:57:36.388Z] ========================\\n[2023-05-01T00:57:36.388Z] Weakening server foodnstuff\\n[2023-05-01T00:57:36.388Z] Progress: 19/6\\n[2023-05-01T00:57:36.388Z] ========================\\n[2023-05-01T00:57:39.429Z] ========================\\n[2023-05-01T00:57:39.429Z] Growing server foodnstuff\\n[2023-05-01T00:57:39.429Z] Progress: 11155039.179267023/45000000\\n[2023-05-01T00:57:39.429Z] ========================\\n[2023-05-01T00:57:41.683Z] ========================\\n[2023-05-01T00:57:41.683Z] Weakening server foodnstuff\\n[2023-05-01T00:57:41.683Z] Progress: 15.02/6\\n[2023-05-01T00:57:41.683Z] ========================\\n[2023-05-01T00:57:45.371Z] =============== SUMMARY ===============\\n[2023-05-01T00:57:45.371Z] Initial ask price: 1814.0823221123487\\n[2023-05-01T00:57:45.371Z] Final ask price: 1808.1636285311502\\n[2023-05-01T00:57:45.371Z] Initial bid price: 1792.4431691646864\\n[2023-05-01T00:57:45.371Z] Final bid price: 1786.5950763021501\\n[2023-05-01T00:57:45.371Z] =======================================\\n[2023-05-01T00:57:46.372Z] ========================\\n[2023-05-01T00:57:46.372Z] Growing server foodnstuff\\n[2023-05-01T00:57:46.372Z] Progress: 0/45000000\\n[2023-05-01T00:57:46.372Z] ========================\\n[2023-05-01T00:57:48.625Z] ========================\\n[2023-05-01T00:57:48.625Z] Weakening server foodnstuff\\n[2023-05-01T00:57:48.625Z] Progress: 19.152/6\\n[2023-05-01T00:57:48.625Z] ========================\\n[2023-05-01T00:57:51.664Z] ========================\\n[2023-05-01T00:57:51.665Z] Growing server foodnstuff\\n[2023-05-01T00:57:51.665Z] Progress: 22273.035984953527/45000000\\n[2023-05-01T00:57:51.665Z] ========================\\n[2023-05-01T00:57:53.917Z] ========================\\n[2023-05-01T00:57:53.917Z] Weakening server foodnstuff\\n[2023-05-01T00:57:53.917Z] Progress: 19/6\\n[2023-05-01T00:57:53.917Z] ========================\\n[2023-05-01T00:57:56.954Z] ========================\\n[2023-05-01T00:57:56.954Z] Growing server foodnstuff\\n[2023-05-01T00:57:56.954Z] Progress: 191143.3069930865/45000000\\n[2023-05-01T00:57:56.954Z] ========================\\n[2023-05-01T00:57:59.206Z] ========================\\n[2023-05-01T00:57:59.206Z] Weakening server foodnstuff\\n[2023-05-01T00:57:59.206Z] Progress: 19/6\\n[2023-05-01T00:57:59.206Z] ========================\\n[2023-05-01T00:58:02.243Z] ========================\\n[2023-05-01T00:58:02.243Z] Growing server foodnstuff\\n[2023-05-01T00:58:02.243Z] Progress: 1472063.1980517146/45000000\\n[2023-05-01T00:58:02.243Z] ========================\\n[2023-05-01T00:58:04.495Z] ========================\\n[2023-05-01T00:58:04.495Z] Weakening server foodnstuff\\n[2023-05-01T00:58:04.495Z] Progress: 19/6\\n[2023-05-01T00:58:04.495Z] ========================\\n[2023-05-01T00:58:07.532Z] ========================\\n[2023-05-01T00:58:07.532Z] Growing server foodnstuff\\n[2023-05-01T00:58:07.532Z] Progress: 11188135.526914308/45000000\\n[2023-05-01T00:58:07.532Z] ========================\\n[2023-05-01T00:58:09.784Z] ========================\\n[2023-05-01T00:58:09.784Z] Weakening server foodnstuff\\n[2023-05-01T00:58:09.784Z] Progress: 14.5/6\\n[2023-05-01T00:58:09.784Z] ========================\\n[2023-05-01T00:58:13.461Z] =============== SUMMARY ===============\\n[2023-05-01T00:58:13.461Z] Initial ask price: 1808.1636285311502\\n[2023-05-01T00:58:13.461Z] Final ask price: 1797.956828593913\\n[2023-05-01T00:58:13.461Z] Initial bid price: 1786.5950763021501\\n[2023-05-01T00:58:13.461Z] Final bid price: 1776.5100274576039\\n[2023-05-01T00:58:13.461Z] =======================================\\n[2023-05-01T00:58:14.461Z] ========================\\n[2023-05-01T00:58:14.461Z] Growing server foodnstuff\\n[2023-05-01T00:58:14.462Z] Progress: 0/45000000\\n[2023-05-01T00:58:14.462Z] ========================\\n[2023-05-01T00:58:16.713Z] ========================\\n[2023-05-01T00:58:16.713Z] Weakening server foodnstuff\\n[2023-05-01T00:58:16.713Z] Progress: 19.04/6\\n[2023-05-01T00:58:16.713Z] ========================\\n[2023-05-01T00:58:19.749Z] ========================\\n[2023-05-01T00:58:19.749Z] Growing server foodnstuff\\n[2023-05-01T00:58:19.749Z] Progress: 22279.723574894495/45000000\\n[2023-05-01T00:58:19.749Z] ========================\\n[2023-05-01T00:58:22.000Z] ========================\\n[2023-05-01T00:58:22.000Z] Weakening server foodnstuff\\n[2023-05-01T00:58:22.000Z] Progress: 18.5/6\\n[2023-05-01T00:58:22.000Z] ========================\\n[2023-05-01T00:58:25.028Z] ========================\\n[2023-05-01T00:58:25.028Z] Growing server foodnstuff\\n[2023-05-01T00:58:25.029Z] Progress: 191659.81519343142/45000000\\n[2023-05-01T00:58:25.029Z] ========================\\n[2023-05-01T00:58:27.279Z] ========================\\n[2023-05-01T00:58:27.279Z] Weakening server foodnstuff\\n[2023-05-01T00:58:27.279Z] Progress: 19.04/6\\n[2023-05-01T00:58:27.279Z] ========================\\n[2023-05-01T00:58:30.316Z] ========================\\n[2023-05-01T00:58:30.316Z] Growing server foodnstuff\\n[2023-05-01T00:58:30.316Z] Progress: 1482521.6028227464/45000000\\n[2023-05-01T00:58:30.316Z] ========================\\n[2023-05-01T00:58:32.568Z] ========================\\n[2023-05-01T00:58:32.568Z] Weakening server foodnstuff\\n[2023-05-01T00:58:32.568Z] Progress: 18.5/6\\n[2023-05-01T00:58:32.568Z] ========================\\n[2023-05-01T00:58:35.595Z] ========================\\n[2023-05-01T00:58:35.596Z] Growing server foodnstuff\\n[2023-05-01T00:58:35.596Z] Progress: 11268074.543500371/45000000\\n[2023-05-01T00:58:35.596Z] ========================\\n[2023-05-01T00:58:37.847Z] ========================\\n[2023-05-01T00:58:37.847Z] Weakening server foodnstuff\\n[2023-05-01T00:58:37.847Z] Progress: 14.443999999999999/6\\n[2023-05-01T00:58:37.847Z] ========================\\n[2023-05-01T00:58:41.523Z] =============== SUMMARY ===============\\n[2023-05-01T00:58:41.523Z] Initial ask price: 1797.956828593913\\n[2023-05-01T00:58:41.523Z] Final ask price: 1799.3292802251626\\n[2023-05-01T00:58:41.523Z] Initial bid price: 1776.5100274576039\\n[2023-05-01T00:58:41.523Z] Final bid price: 1777.8661078964328\\n[2023-05-01T00:58:41.523Z] =======================================\\n[2023-05-01T00:58:42.524Z] ========================\\n[2023-05-01T00:58:42.524Z] Growing server foodnstuff\\n[2023-05-01T00:58:42.524Z] Progress: 0/45000000\\n[2023-05-01T00:58:42.524Z] ========================\\n[2023-05-01T00:58:44.775Z] ========================\\n[2023-05-01T00:58:44.775Z] Weakening server foodnstuff\\n[2023-05-01T00:58:44.775Z] Progress: 19.04/6\\n[2023-05-01T00:58:44.775Z] ========================\\n[2023-05-01T00:58:47.812Z] ========================\\n[2023-05-01T00:58:47.812Z] Growing server foodnstuff\\n[2023-05-01T00:58:47.812Z] Progress: 22273.296180417794/45000000\\n[2023-05-01T00:58:47.812Z] ========================\\n[2023-05-01T00:58:50.063Z] ========================\\n[2023-05-01T00:58:50.063Z] Weakening server foodnstuff\\n[2023-05-01T00:58:50.063Z] Progress: 19/6\\n[2023-05-01T00:58:50.063Z] ========================\\n[2023-05-01T00:58:53.097Z] ========================\\n[2023-05-01T00:58:53.097Z] Growing server foodnstuff\\n[2023-05-01T00:58:53.097Z] Progress: 191145.28063559774/45000000\\n[2023-05-01T00:58:53.097Z] ========================\\n[2023-05-01T00:58:55.348Z] ========================\\n[2023-05-01T00:58:55.348Z] Weakening server foodnstuff\\n[2023-05-01T00:58:55.348Z] Progress: 18.5/6\\n[2023-05-01T00:58:55.348Z] ========================\\n[2023-05-01T00:58:58.376Z] ========================\\n[2023-05-01T00:58:58.377Z] Growing server foodnstuff\\n[2023-05-01T00:58:58.377Z] Progress: 1472157.8130182019/45000000\\n[2023-05-01T00:58:58.377Z] ========================\\n[2023-05-01T00:59:00.628Z] ========================\\n[2023-05-01T00:59:00.628Z] Weakening server foodnstuff\\n[2023-05-01T00:59:00.628Z] Progress: 18.5/6\\n[2023-05-01T00:59:00.628Z] ========================\\n[2023-05-01T00:59:03.657Z] ========================\\n[2023-05-01T00:59:03.657Z] Growing server foodnstuff\\n[2023-05-01T00:59:03.657Z] Progress: 11189458.558219185/45000000\\n[2023-05-01T00:59:03.657Z] ========================\\n[2023-05-01T00:59:05.908Z] ========================\\n[2023-05-01T00:59:05.908Z] Weakening server foodnstuff\\n[2023-05-01T00:59:05.908Z] Progress: 14.5/6\\n[2023-05-01T00:59:05.908Z] ========================\\n[2023-05-01T00:59:09.735Z] =============== SUMMARY ===============\\n[2023-05-01T00:59:09.735Z] Initial ask price: 1799.3292802251626\\n[2023-05-01T00:59:09.735Z] Final ask price: 1792.743711761187\\n[2023-05-01T00:59:09.735Z] Initial bid price: 1777.8661078964328\\n[2023-05-01T00:59:09.735Z] Final bid price: 1771.3590949210932\\n[2023-05-01T00:59:09.735Z] =======================================\\n[2023-05-01T00:59:10.737Z] ========================\\n[2023-05-01T00:59:10.737Z] Growing server foodnstuff\\n[2023-05-01T00:59:10.737Z] Progress: 0/45000000\\n[2023-05-01T00:59:10.737Z] ========================\\n[2023-05-01T00:59:12.989Z] ========================\\n[2023-05-01T00:59:12.989Z] Weakening server foodnstuff\\n[2023-05-01T00:59:12.989Z] Progress: 19/6\\n[2023-05-01T00:59:12.989Z] ========================\\n[2023-05-01T00:59:16.024Z] ========================\\n[2023-05-01T00:59:16.024Z] Growing server foodnstuff\\n[2023-05-01T00:59:16.024Z] Progress: 22197.200274174797/45000000\\n[2023-05-01T00:59:16.024Z] ========================\\n[2023-05-01T00:59:18.275Z] ========================\\n[2023-05-01T00:59:18.275Z] Weakening server foodnstuff\\n[2023-05-01T00:59:18.275Z] Progress: 19/6\\n[2023-05-01T00:59:18.275Z] ========================\\n[2023-05-01T00:59:21.310Z] ========================\\n[2023-05-01T00:59:21.311Z] Growing server foodnstuff\\n[2023-05-01T00:59:21.311Z] Progress: 190568.07566427335/45000000\\n[2023-05-01T00:59:21.311Z] ========================\\n[2023-05-01T00:59:23.562Z] ========================\\n[2023-05-01T00:59:23.562Z] Weakening server foodnstuff\\n[2023-05-01T00:59:23.562Z] Progress: 19/6\\n[2023-05-01T00:59:23.562Z] ========================\\n[2023-05-01T00:59:26.597Z] ========================\\n[2023-05-01T00:59:26.597Z] Growing server foodnstuff\\n[2023-05-01T00:59:26.597Z] Progress: 1467699.935965155/45000000\\n[2023-05-01T00:59:26.597Z] ========================\\n[2023-05-01T00:59:28.847Z] ========================\\n[2023-05-01T00:59:28.847Z] Weakening server foodnstuff\\n[2023-05-01T00:59:28.847Z] Progress: 19/6\\n[2023-05-01T00:59:28.847Z] ========================\\n[2023-05-01T00:59:31.883Z] ========================\\n[2023-05-01T00:59:31.883Z] Growing server foodnstuff\\n[2023-05-01T00:59:31.883Z] Progress: 11155039.179267023/45000000\\n[2023-05-01T00:59:31.883Z] ========================\\n[2023-05-01T00:59:34.134Z] ========================\\n[2023-05-01T00:59:34.134Z] Weakening server foodnstuff\\n[2023-05-01T00:59:34.134Z] Progress: 15.02/6\\n[2023-05-01T00:59:34.134Z] ========================\\n[2023-05-01T00:59:37.825Z] =============== SUMMARY ===============\\n[2023-05-01T00:59:37.825Z] Initial ask price: 1792.743711761187\\n[2023-05-01T00:59:37.825Z] Final ask price: 1797.7615142279253\\n[2023-05-01T00:59:37.825Z] Initial bid price: 1771.3590949210932\\n[2023-05-01T00:59:37.825Z] Final bid price: 1776.317042885246\\n[2023-05-01T00:59:37.825Z] =======================================\\n[2023-05-01T00:59:38.827Z] ========================\\n[2023-05-01T00:59:38.827Z] Growing server foodnstuff\\n[2023-05-01T00:59:38.827Z] Progress: 0/45000000\\n[2023-05-01T00:59:38.827Z] ========================\\n[2023-05-01T00:59:41.080Z] ========================\\n[2023-05-01T00:59:41.080Z] Weakening server foodnstuff\\n[2023-05-01T00:59:41.080Z] Progress: 19.152/6\\n[2023-05-01T00:59:41.080Z] ========================\\n[2023-05-01T00:59:44.117Z] ========================\\n[2023-05-01T00:59:44.117Z] Growing server foodnstuff\\n[2023-05-01T00:59:44.117Z] Progress: 22273.035984953527/45000000\\n[2023-05-01T00:59:44.117Z] ========================\\n[2023-05-01T00:59:46.369Z] ========================\\n[2023-05-01T00:59:46.369Z] Weakening server foodnstuff\\n[2023-05-01T00:59:46.369Z] Progress: 19/6\\n[2023-05-01T00:59:46.369Z] ========================\\n[2023-05-01T00:59:49.404Z] ========================\\n[2023-05-01T00:59:49.404Z] Growing server foodnstuff\\n[2023-05-01T00:59:49.404Z] Progress: 191143.3069930865/45000000\\n[2023-05-01T00:59:49.404Z] ========================\\n[2023-05-01T00:59:51.655Z] ========================\\n[2023-05-01T00:59:51.655Z] Weakening server foodnstuff\\n[2023-05-01T00:59:51.655Z] Progress: 19/6\\n[2023-05-01T00:59:51.655Z] ========================\\n[2023-05-01T00:59:54.690Z] ========================\\n[2023-05-01T00:59:54.690Z] Growing server foodnstuff\\n[2023-05-01T00:59:54.690Z] Progress: 1472063.1980517146/45000000\\n[2023-05-01T00:59:54.690Z] ========================\\n[2023-05-01T00:59:56.978Z] ========================\\n[2023-05-01T00:59:56.978Z] Weakening server foodnstuff\\n[2023-05-01T00:59:56.978Z] Progress: 19/6\\n[2023-05-01T00:59:56.978Z] ========================\\n[2023-05-01T01:00:00.012Z] ========================\\n[2023-05-01T01:00:00.012Z] Growing server foodnstuff\\n[2023-05-01T01:00:00.012Z] Progress: 11188135.526914308/45000000\\n[2023-05-01T01:00:00.012Z] ========================\\n[2023-05-01T01:00:02.262Z] ========================\\n[2023-05-01T01:00:02.262Z] Weakening server foodnstuff\\n[2023-05-01T01:00:02.262Z] Progress: 14.5/6\\n[2023-05-01T01:00:02.262Z] ========================\\n[2023-05-01T01:00:05.937Z] =============== SUMMARY ===============\\n[2023-05-01T01:00:05.937Z] Initial ask price: 1797.7615142279253\\n[2023-05-01T01:00:05.937Z] Final ask price: 1795.155105425441\\n[2023-05-01T01:00:05.937Z] Initial bid price: 1776.317042885246\\n[2023-05-01T01:00:05.937Z] Final bid price: 1773.7417244462113\\n[2023-05-01T01:00:05.937Z] =======================================\\n[2023-05-01T01:00:06.938Z] ========================\\n[2023-05-01T01:00:06.938Z] Growing server foodnstuff\\n[2023-05-01T01:00:06.938Z] Progress: 0/45000000\\n[2023-05-01T01:00:06.938Z] ========================\\n[2023-05-01T01:00:09.188Z] ========================\\n[2023-05-01T01:00:09.188Z] Weakening server foodnstuff\\n[2023-05-01T01:00:09.188Z] Progress: 19.04/6\\n[2023-05-01T01:00:09.188Z] ========================\\n[2023-05-01T01:00:12.222Z] ========================\\n[2023-05-01T01:00:12.222Z] Growing server foodnstuff\\n[2023-05-01T01:00:12.222Z] Progress: 22279.723574894495/45000000\\n[2023-05-01T01:00:12.222Z] ========================\\n[2023-05-01T01:00:14.471Z] ========================\\n[2023-05-01T01:00:14.471Z] Weakening server foodnstuff\\n[2023-05-01T01:00:14.471Z] Progress: 18.5/6\\n[2023-05-01T01:00:14.471Z] ========================\\n[2023-05-01T01:00:17.498Z] ========================\\n[2023-05-01T01:00:17.498Z] Growing server foodnstuff\\n[2023-05-01T01:00:17.498Z] Progress: 191659.81519343142/45000000\\n[2023-05-01T01:00:17.498Z] ========================\\n[2023-05-01T01:00:19.747Z] ========================\\n[2023-05-01T01:00:19.747Z] Weakening server foodnstuff\\n[2023-05-01T01:00:19.747Z] Progress: 19.04/6\\n[2023-05-01T01:00:19.747Z] ========================\\n[2023-05-01T01:00:22.781Z] ========================\\n[2023-05-01T01:00:22.781Z] Growing server foodnstuff\\n[2023-05-01T01:00:22.781Z] Progress: 1482521.6028227464/45000000\\n[2023-05-01T01:00:22.781Z] ========================\\n[2023-05-01T01:00:25.030Z] ========================\\n[2023-05-01T01:00:25.031Z] Weakening server foodnstuff\\n[2023-05-01T01:00:25.031Z] Progress: 18.5/6\\n[2023-05-01T01:00:25.031Z] ========================\\n[2023-05-01T01:00:28.057Z] ========================\\n[2023-05-01T01:00:28.057Z] Growing server foodnstuff\\n[2023-05-01T01:00:28.057Z] Progress: 11268074.543500371/45000000\\n[2023-05-01T01:00:28.057Z] ========================\\n[2023-05-01T01:00:30.307Z] ========================\\n[2023-05-01T01:00:30.307Z] Weakening server foodnstuff\\n[2023-05-01T01:00:30.307Z] Progress: 14.443999999999999/6\\n[2023-05-01T01:00:30.307Z] ========================\\n[2023-05-01T01:00:33.982Z] =============== SUMMARY ===============\\n[2023-05-01T01:00:33.982Z] Initial ask price: 1795.155105425441\\n[2023-05-01T01:00:33.982Z] Final ask price: 1750.48412101918\\n[2023-05-01T01:00:33.982Z] Initial bid price: 1773.7417244462113\\n[2023-05-01T01:00:33.982Z] Final bid price: 1729.6035947247167\\n[2023-05-01T01:00:33.982Z] =======================================\\n[2023-05-01T01:00:34.983Z] ========================\\n[2023-05-01T01:00:34.983Z] Growing server foodnstuff\\n[2023-05-01T01:00:34.983Z] Progress: 0/45000000\\n[2023-05-01T01:00:34.983Z] ========================\\n[2023-05-01T01:00:37.234Z] ========================\\n[2023-05-01T01:00:37.234Z] Weakening server foodnstuff\\n[2023-05-01T01:00:37.234Z] Progress: 19.04/6\\n[2023-05-01T01:00:37.234Z] ========================\\n[2023-05-01T01:00:40.269Z] ========================\\n[2023-05-01T01:00:40.269Z] Growing server foodnstuff\\n[2023-05-01T01:00:40.269Z] Progress: 22334.09470901012/45000000\\n[2023-05-01T01:00:40.269Z] ========================\\n[2023-05-01T01:00:42.519Z] ========================\\n[2023-05-01T01:00:42.519Z] Weakening server foodnstuff\\n[2023-05-01T01:00:42.519Z] Progress: 19.04/6\\n[2023-05-01T01:00:42.519Z] ========================\\n[2023-05-01T01:00:45.554Z] ========================\\n[2023-05-01T01:00:45.554Z] Growing server foodnstuff\\n[2023-05-01T01:00:45.554Z] Progress: 192441.53029619285/45000000\\n[2023-05-01T01:00:45.554Z] ========================\\n[2023-05-01T01:00:47.803Z] ========================\\n[2023-05-01T01:00:47.803Z] Weakening server foodnstuff\\n[2023-05-01T01:00:47.803Z] Progress: 18.5/6\\n[2023-05-01T01:00:47.803Z] ========================\\n[2023-05-01T01:00:50.831Z] ========================\\n[2023-05-01T01:00:50.831Z] Growing server foodnstuff\\n[2023-05-01T01:00:50.831Z] Progress: 1481990.697142637/45000000\\n[2023-05-01T01:00:50.831Z] ========================\\n[2023-05-01T01:00:53.081Z] ========================\\n[2023-05-01T01:00:53.081Z] Weakening server foodnstuff\\n[2023-05-01T01:00:53.081Z] Progress: 18.5/6\\n[2023-05-01T01:00:53.081Z] ========================\\n[2023-05-01T01:00:56.108Z] ========================\\n[2023-05-01T01:00:56.108Z] Growing server foodnstuff\\n[2023-05-01T01:00:56.108Z] Progress: 11290877.550135737/45000000\\n[2023-05-01T01:00:56.108Z] ========================\\n[2023-05-01T01:00:58.359Z] ========================\\n[2023-05-01T01:00:58.359Z] Weakening server foodnstuff\\n[2023-05-01T01:00:58.359Z] Progress: 14.936/6\\n[2023-05-01T01:00:58.359Z] ========================\\n[2023-05-01T01:01:02.041Z] =============== SUMMARY ===============\\n[2023-05-01T01:01:02.041Z] Initial ask price: 1750.48412101918\\n[2023-05-01T01:01:02.041Z] Final ask price: 1770.215713687456\\n[2023-05-01T01:01:02.041Z] Initial bid price: 1729.6035947247167\\n[2023-05-01T01:01:02.041Z] Final bid price: 1749.0998204824366\\n[2023-05-01T01:01:02.041Z] =======================================\\n[2023-05-01T01:01:03.042Z] ========================\\n[2023-05-01T01:01:03.042Z] Growing server foodnstuff\\n[2023-05-01T01:01:03.042Z] Progress: 0/45000000\\n[2023-05-01T01:01:03.042Z] ========================\\n[2023-05-01T01:01:05.293Z] ========================\\n[2023-05-01T01:01:05.293Z] Weakening server foodnstuff\\n[2023-05-01T01:01:05.293Z] Progress: 19.04/6\\n[2023-05-01T01:01:05.293Z] ========================\\n[2023-05-01T01:01:08.327Z] ========================\\n[2023-05-01T01:01:08.327Z] Growing server foodnstuff\\n[2023-05-01T01:01:08.327Z] Progress: 22273.296180417794/45000000\\n[2023-05-01T01:01:08.327Z] ========================\\n[2023-05-01T01:01:10.577Z] ========================\\n[2023-05-01T01:01:10.577Z] Weakening server foodnstuff\\n[2023-05-01T01:01:10.577Z] Progress: 19/6\\n[2023-05-01T01:01:10.577Z] ========================\\n[2023-05-01T01:01:13.611Z] ========================\\n[2023-05-01T01:01:13.611Z] Growing server foodnstuff\\n[2023-05-01T01:01:13.611Z] Progress: 191145.28063559774/45000000\\n[2023-05-01T01:01:13.611Z] ========================\\n[2023-05-01T01:01:15.860Z] ========================\\n[2023-05-01T01:01:15.860Z] Weakening server foodnstuff\\n[2023-05-01T01:01:15.860Z] Progress: 19/6\\n[2023-05-01T01:01:15.860Z] ========================\\n[2023-05-01T01:01:18.895Z] ========================\\n[2023-05-01T01:01:18.895Z] Growing server foodnstuff\\n[2023-05-01T01:01:18.895Z] Progress: 1472078.1685846297/45000000\\n[2023-05-01T01:01:18.895Z] ========================\\n[2023-05-01T01:01:21.144Z] ========================\\n[2023-05-01T01:01:21.144Z] Weakening server foodnstuff\\n[2023-05-01T01:01:21.144Z] Progress: 19/6\\n[2023-05-01T01:01:21.144Z] ========================\\n[2023-05-01T01:01:24.175Z] ========================\\n[2023-05-01T01:01:24.175Z] Growing server foodnstuff\\n[2023-05-01T01:01:24.175Z] Progress: 11188249.081853706/45000000\\n[2023-05-01T01:01:24.175Z] ========================\\n[2023-05-01T01:01:26.423Z] ========================\\n[2023-05-01T01:01:26.423Z] Weakening server foodnstuff\\n[2023-05-01T01:01:26.423Z] Progress: 14.5/6\\n[2023-05-01T01:01:26.423Z] ========================\\n[2023-05-01T01:01:30.092Z] =============== SUMMARY ===============\\n[2023-05-01T01:01:30.092Z] Initial ask price: 1770.215713687456\\n[2023-05-01T01:01:30.093Z] Final ask price: 1750.9028035843908\\n[2023-05-01T01:01:30.093Z] Initial bid price: 1749.0998204824366\\n[2023-05-01T01:01:30.093Z] Final bid price: 1730.0172830644974\\n[2023-05-01T01:01:30.093Z] =======================================\\n[2023-05-01T01:01:31.093Z] ========================\\n[2023-05-01T01:01:31.093Z] Growing server foodnstuff\\n[2023-05-01T01:01:31.093Z] Progress: 0/45000000\\n[2023-05-01T01:01:31.093Z] ========================\\n[2023-05-01T01:01:33.341Z] ========================\\n[2023-05-01T01:01:33.341Z] Weakening server foodnstuff\\n[2023-05-01T01:01:33.341Z] Progress: 19.04/6\\n[2023-05-01T01:01:33.341Z] ========================\\n[2023-05-01T01:01:36.371Z] ========================\\n[2023-05-01T01:01:36.371Z] Growing server foodnstuff\\n[2023-05-01T01:01:36.371Z] Progress: 22279.723574894495/45000000\\n[2023-05-01T01:01:36.371Z] ========================\\n[2023-05-01T01:01:38.618Z] ========================\\n[2023-05-01T01:01:38.619Z] Weakening server foodnstuff\\n[2023-05-01T01:01:38.619Z] Progress: 18.5/6\\n[2023-05-01T01:01:38.619Z] ========================\\n[2023-05-01T01:01:41.642Z] ========================\\n[2023-05-01T01:01:41.642Z] Growing server foodnstuff\\n[2023-05-01T01:01:41.642Z] Progress: 191659.81519343142/45000000\\n[2023-05-01T01:01:41.642Z] ========================\\n[2023-05-01T01:01:43.889Z] ========================\\n[2023-05-01T01:01:43.889Z] Weakening server foodnstuff\\n[2023-05-01T01:01:43.889Z] Progress: 19.04/6\\n[2023-05-01T01:01:43.889Z] ========================\\n[2023-05-01T01:01:46.920Z] ========================\\n[2023-05-01T01:01:46.920Z] Growing server foodnstuff\\n[2023-05-01T01:01:46.920Z] Progress: 1482521.6028227464/45000000\\n[2023-05-01T01:01:46.920Z] ========================\\n[2023-05-01T01:01:49.167Z] ========================\\n[2023-05-01T01:01:49.167Z] Weakening server foodnstuff\\n[2023-05-01T01:01:49.167Z] Progress: 18.5/6\\n[2023-05-01T01:01:49.167Z] ========================\\n[2023-05-01T01:01:52.191Z] ========================\\n[2023-05-01T01:01:52.191Z] Growing server foodnstuff\\n[2023-05-01T01:01:52.191Z] Progress: 11268074.543500371/45000000\\n[2023-05-01T01:01:52.191Z] ========================\\n[2023-05-01T01:01:54.438Z] ========================\\n[2023-05-01T01:01:54.438Z] Weakening server foodnstuff\\n[2023-05-01T01:01:54.438Z] Progress: 14.443999999999999/6\\n[2023-05-01T01:01:54.438Z] ========================\\n[2023-05-01T01:01:58.108Z] =============== SUMMARY ===============\\n[2023-05-01T01:01:58.108Z] Initial ask price: 1757.7993743308682\\n[2023-05-01T01:01:58.108Z] Final ask price: 1770.906741306961\\n[2023-05-01T01:01:58.108Z] Initial bid price: 1736.8315885535615\\n[2023-05-01T01:01:58.108Z] Final bid price: 1749.7826052277528\\n[2023-05-01T01:01:58.108Z] =======================================\\n[2023-05-01T01:01:59.108Z] ========================\\n[2023-05-01T01:01:59.108Z] Growing server foodnstuff\\n[2023-05-01T01:01:59.108Z] Progress: 0/45000000\\n[2023-05-01T01:01:59.108Z] ========================\\n[2023-05-01T01:02:01.356Z] ========================\\n[2023-05-01T01:02:01.356Z] Weakening server foodnstuff\\n[2023-05-01T01:02:01.356Z] Progress: 19.04/6\\n[2023-05-01T01:02:01.356Z] ========================\\n[2023-05-01T01:02:04.386Z] ========================\\n[2023-05-01T01:02:04.386Z] Growing server foodnstuff\\n[2023-05-01T01:02:04.386Z] Progress: 22273.296180417794/45000000\\n[2023-05-01T01:02:04.386Z] ========================\\n[2023-05-01T01:02:06.633Z] ========================\\n[2023-05-01T01:02:06.633Z] Weakening server foodnstuff\\n[2023-05-01T01:02:06.633Z] Progress: 18.5/6\\n[2023-05-01T01:02:06.633Z] ========================\\n[2023-05-01T01:02:09.656Z] ========================\\n[2023-05-01T01:02:09.656Z] Growing server foodnstuff\\n[2023-05-01T01:02:09.656Z] Progress: 191155.62224512032/45000000\\n[2023-05-01T01:02:09.656Z] ========================\\n[2023-05-01T01:02:11.903Z] ========================\\n[2023-05-01T01:02:11.903Z] Weakening server foodnstuff\\n[2023-05-01T01:02:11.903Z] Progress: 18.5/6\\n[2023-05-01T01:02:11.903Z] ========================\\n[2023-05-01T01:02:14.926Z] ========================\\n[2023-05-01T01:02:14.926Z] Growing server foodnstuff\\n[2023-05-01T01:02:14.926Z] Progress: 1472236.2607518346/45000000\\n[2023-05-01T01:02:14.926Z] ========================\\n[2023-05-01T01:02:17.173Z] ========================\\n[2023-05-01T01:02:17.173Z] Weakening server foodnstuff\\n[2023-05-01T01:02:17.173Z] Progress: 18.5/6\\n[2023-05-01T01:02:17.173Z] ========================\\n[2023-05-01T01:02:20.196Z] ========================\\n[2023-05-01T01:02:20.196Z] Growing server foodnstuff\\n[2023-05-01T01:02:20.196Z] Progress: 11190053.63453672/45000000\\n[2023-05-01T01:02:20.196Z] ========================\\n[2023-05-01T01:02:22.444Z] ========================\\n[2023-05-01T01:02:22.444Z] Weakening server foodnstuff\\n[2023-05-01T01:02:22.444Z] Progress: 14.496/6\\n[2023-05-01T01:02:22.444Z] ========================\\n[2023-05-01T01:02:25.411Z] ========================\\n[2023-05-01T01:02:25.411Z] Growing server foodnstuff\\n[2023-05-01T01:02:25.411Z] Progress: 39018530/45000000\\n[2023-05-01T01:02:25.411Z] ========================\\n[2023-05-01T01:02:27.658Z] ========================\\n[2023-05-01T01:02:27.658Z] Weakening server foodnstuff\\n[2023-05-01T01:02:27.658Z] Progress: 7.42/6\\n[2023-05-01T01:02:27.658Z] ========================\\n[2023-05-01T01:02:30.528Z] ========================\\n[2023-05-01T01:02:30.528Z] Growing server foodnstuff\\n[2023-05-01T01:02:30.528Z] Progress: 31236690/45000000\\n[2023-05-01T01:02:30.528Z] ========================\\n[2023-05-01T01:02:32.774Z] ========================\\n[2023-05-01T01:02:32.774Z] Weakening server foodnstuff\\n[2023-05-01T01:02:32.774Z] Progress: 7.212/6\\n[2023-05-01T01:02:32.774Z] ========================\\n[2023-05-01T01:02:35.639Z] ========================\\n[2023-05-01T01:02:35.639Z] Growing server foodnstuff\\n[2023-05-01T01:02:35.639Z] Progress: 31199490/45000000\\n[2023-05-01T01:02:35.639Z] ========================\\n[2023-05-01T01:02:37.885Z] ========================\\n[2023-05-01T01:02:37.885Z] Weakening server foodnstuff\\n[2023-05-01T01:02:37.885Z] Progress: 7.22/6\\n[2023-05-01T01:02:37.885Z] ========================\\n[2023-05-01T01:02:40.752Z] ========================\\n[2023-05-01T01:02:40.752Z] Growing server foodnstuff\\n[2023-05-01T01:02:40.752Z] Progress: 31200910/45000000\\n[2023-05-01T01:02:40.752Z] ========================\\n[2023-05-01T01:02:42.998Z] ========================\\n[2023-05-01T01:02:42.998Z] Weakening server foodnstuff\\n[2023-05-01T01:02:42.998Z] Progress: 7.22/6\\n[2023-05-01T01:02:42.998Z] ========================\\n[2023-05-01T01:02:45.865Z] ========================\\n[2023-05-01T01:02:45.865Z] Growing server foodnstuff\\n[2023-05-01T01:02:45.865Z] Progress: 31200910/45000000\\n[2023-05-01T01:02:45.865Z] ========================\\n[2023-05-01T01:02:48.112Z] ========================\\n[2023-05-01T01:02:48.112Z] Weakening server foodnstuff\\n[2023-05-01T01:02:48.112Z] Progress: 7.22/6\\n[2023-05-01T01:02:48.112Z] ========================\\n[2023-05-01T01:02:50.977Z] ========================\\n[2023-05-01T01:02:50.977Z] Growing server foodnstuff\\n[2023-05-01T01:02:50.977Z] Progress: 39496280/45000000\\n[2023-05-01T01:02:50.977Z] ========================\\n[2023-05-01T01:02:53.224Z] ========================\\n[2023-05-01T01:02:53.224Z] Weakening server foodnstuff\\n[2023-05-01T01:02:53.224Z] Progress: 7.327999999999999/6\\n[2023-05-01T01:02:53.224Z] ========================\\n[2023-05-01T01:02:56.090Z] ========================\\n[2023-05-01T01:02:56.090Z] Growing server foodnstuff\\n[2023-05-01T01:02:56.090Z] Progress: 31220240/45000000\\n[2023-05-01T01:02:56.090Z] ========================\\n[2023-05-01T01:02:58.337Z] ========================\\n[2023-05-01T01:02:58.337Z] Weakening server foodnstuff\\n[2023-05-01T01:02:58.337Z] Progress: 7.216/6\\n[2023-05-01T01:02:58.337Z] ========================\\n[2023-05-01T01:03:01.203Z] ========================\\n[2023-05-01T01:03:01.203Z] Growing server foodnstuff\\n[2023-05-01T01:03:01.203Z] Progress: 31200200/45000000\\n[2023-05-01T01:03:01.203Z] ========================\\n[2023-05-01T01:03:03.449Z] ========================\\n[2023-05-01T01:03:03.449Z] Weakening server foodnstuff\\n[2023-05-01T01:03:03.449Z] Progress: 7.22/6\\n[2023-05-01T01:03:03.449Z] ========================\\n[2023-05-01T01:03:06.315Z] ========================\\n[2023-05-01T01:03:06.315Z] Growing server foodnstuff\\n[2023-05-01T01:03:06.315Z] Progress: 39496280/45000000\\n[2023-05-01T01:03:06.315Z] ========================\\n[2023-05-01T01:03:08.561Z] ========================\\n[2023-05-01T01:03:08.561Z] Weakening server foodnstuff\\n[2023-05-01T01:03:08.561Z] Progress: 7.327999999999999/6\\n[2023-05-01T01:03:08.561Z] ========================\\n[2023-05-01T01:03:11.429Z] ========================\\n[2023-05-01T01:03:11.429Z] Growing server foodnstuff\\n[2023-05-01T01:03:11.429Z] Progress: 31220240/45000000\\n[2023-05-01T01:03:11.429Z] ========================\\n[2023-05-01T01:03:13.675Z] ========================\\n[2023-05-01T01:03:13.675Z] Weakening server foodnstuff\\n[2023-05-01T01:03:13.675Z] Progress: 7.216/6\\n[2023-05-01T01:03:13.675Z] ========================\\n[2023-05-01T01:03:16.540Z] ========================\\n[2023-05-01T01:03:16.540Z] Growing server foodnstuff\\n[2023-05-01T01:03:16.540Z] Progress: 30821390/45000000\\n[2023-05-01T01:03:16.540Z] ========================\\n[2023-05-01T01:03:18.787Z] ========================\\n[2023-05-01T01:03:18.787Z] Weakening server foodnstuff\\n[2023-05-01T01:03:18.787Z] Progress: 7.312/6\\n[2023-05-01T01:03:18.787Z] ========================\\n[2023-05-01T01:03:21.653Z] ========================\\n[2023-05-01T01:03:21.654Z] Growing server foodnstuff\\n[2023-05-01T01:03:21.654Z] Progress: 31217370/45000000\\n[2023-05-01T01:03:21.654Z] ========================\\n[2023-05-01T01:03:23.901Z] ========================\\n[2023-05-01T01:03:23.901Z] Weakening server foodnstuff\\n[2023-05-01T01:03:23.901Z] Progress: 7.216/6\\n[2023-05-01T01:03:23.901Z] ========================\\n[2023-05-01T01:03:26.766Z] ========================\\n[2023-05-01T01:03:26.766Z] Growing server foodnstuff\\n[2023-05-01T01:03:26.766Z] Progress: 31200200/45000000\\n[2023-05-01T01:03:26.766Z] ========================\\n[2023-05-01T01:03:29.013Z] ========================\\n[2023-05-01T01:03:29.013Z] Weakening server foodnstuff\\n[2023-05-01T01:03:29.013Z] Progress: 7.22/6\\n[2023-05-01T01:03:29.013Z] ========================\\n[2023-05-01T01:03:31.879Z] ========================\\n[2023-05-01T01:03:31.879Z] Growing server foodnstuff\\n[2023-05-01T01:03:31.879Z] Progress: 39496280/45000000\\n[2023-05-01T01:03:31.879Z] ========================\\n[2023-05-01T01:03:34.125Z] ========================\\n[2023-05-01T01:03:34.125Z] Weakening server foodnstuff\\n[2023-05-01T01:03:34.125Z] Progress: 7.327999999999999/6\\n[2023-05-01T01:03:34.125Z] ========================\\n[2023-05-01T01:03:36.991Z] ========================\\n[2023-05-01T01:03:36.991Z] Growing server foodnstuff\\n[2023-05-01T01:03:36.991Z] Progress: 31220240/45000000\\n[2023-05-01T01:03:36.991Z] ========================\\n[2023-05-01T01:03:39.238Z] ========================\\n[2023-05-01T01:03:39.238Z] Weakening server foodnstuff\\n[2023-05-01T01:03:39.238Z] Progress: 7.216/6\\n[2023-05-01T01:03:39.238Z] ========================\\n[2023-05-01T01:03:42.103Z] ========================\\n[2023-05-01T01:03:42.103Z] Growing server foodnstuff\\n[2023-05-01T01:03:42.103Z] Progress: 31200200/45000000\\n[2023-05-01T01:03:42.103Z] ========================\\n[2023-05-01T01:03:44.350Z] ========================\\n[2023-05-01T01:03:44.350Z] Weakening server foodnstuff\\n[2023-05-01T01:03:44.350Z] Progress: 7.22/6\\n[2023-05-01T01:03:44.350Z] ========================\\n[2023-05-01T01:03:47.216Z] ========================\\n[2023-05-01T01:03:47.216Z] Growing server foodnstuff\\n[2023-05-01T01:03:47.216Z] Progress: 39496280/45000000\\n[2023-05-01T01:03:47.216Z] ========================\\n[2023-05-01T01:03:49.461Z] ========================\\n[2023-05-01T01:03:49.461Z] Weakening server foodnstuff\\n[2023-05-01T01:03:49.461Z] Progress: 7.327999999999999/6\\n[2023-05-01T01:03:49.461Z] ========================\\n[2023-05-01T01:03:52.328Z] ========================\\n[2023-05-01T01:03:52.328Z] Growing server foodnstuff\\n[2023-05-01T01:03:52.328Z] Progress: 31220240/45000000\\n[2023-05-01T01:03:52.328Z] ========================\\n[2023-05-01T01:03:54.574Z] ========================\\n[2023-05-01T01:03:54.574Z] Weakening server foodnstuff\\n[2023-05-01T01:03:54.574Z] Progress: 7.216/6\\n[2023-05-01T01:03:54.574Z] ========================\\n[2023-05-01T01:03:57.439Z] ========================\\n[2023-05-01T01:03:57.439Z] Growing server foodnstuff\\n[2023-05-01T01:03:57.439Z] Progress: 30821390/45000000\\n[2023-05-01T01:03:57.439Z] ========================\\n[2023-05-01T01:03:59.686Z] ========================\\n[2023-05-01T01:03:59.686Z] Weakening server foodnstuff\\n[2023-05-01T01:03:59.686Z] Progress: 7.312/6\\n[2023-05-01T01:03:59.686Z] ========================\\n[2023-05-01T01:04:02.552Z] ========================\\n[2023-05-01T01:04:02.552Z] Growing server foodnstuff\\n[2023-05-01T01:04:02.552Z] Progress: 31217370/45000000\\n[2023-05-01T01:04:02.552Z] ========================\\n[2023-05-01T01:04:04.798Z] ========================\\n[2023-05-01T01:04:04.798Z] Weakening server foodnstuff\\n[2023-05-01T01:04:04.798Z] Progress: 7.216/6\\n[2023-05-01T01:04:04.798Z] ========================\\n[2023-05-01T01:04:07.664Z] ========================\\n[2023-05-01T01:04:07.664Z] Growing server foodnstuff\\n[2023-05-01T01:04:07.664Z] Progress: 31200200/45000000\\n[2023-05-01T01:04:07.664Z] ========================\\n[2023-05-01T01:04:09.909Z] ========================\\n[2023-05-01T01:04:09.909Z] Weakening server foodnstuff\\n[2023-05-01T01:04:09.909Z] Progress: 7.22/6\\n[2023-05-01T01:04:09.909Z] ========================\\n[2023-05-01T01:04:12.776Z] ========================\\n[2023-05-01T01:04:12.776Z] Growing server foodnstuff\\n[2023-05-01T01:04:12.776Z] Progress: 39496280/45000000\\n[2023-05-01T01:04:12.776Z] ========================\\n[2023-05-01T01:04:15.022Z] ========================\\n[2023-05-01T01:04:15.022Z] Weakening server foodnstuff\\n[2023-05-01T01:04:15.022Z] Progress: 7.327999999999999/6\\n[2023-05-01T01:04:15.022Z] ========================\\n[2023-05-01T01:04:17.890Z] ========================\\n[2023-05-01T01:04:17.890Z] Growing server foodnstuff\\n[2023-05-01T01:04:17.890Z] Progress: 31220240/45000000\\n[2023-05-01T01:04:17.890Z] ========================\\n[2023-05-01T01:04:20.135Z] ========================\\n[2023-05-01T01:04:20.135Z] Weakening server foodnstuff\\n[2023-05-01T01:04:20.135Z] Progress: 7.216/6\\n[2023-05-01T01:04:20.135Z] ========================\\n[2023-05-01T01:04:23.000Z] ========================\\n[2023-05-01T01:04:23.000Z] Growing server foodnstuff\\n[2023-05-01T01:04:23.000Z] Progress: 31200200/45000000\\n[2023-05-01T01:04:23.000Z] ========================\\n[2023-05-01T01:04:25.246Z] ========================\\n[2023-05-01T01:04:25.246Z] Weakening server foodnstuff\\n[2023-05-01T01:04:25.246Z] Progress: 7.22/6\\n[2023-05-01T01:04:25.246Z] ========================\\n[2023-05-01T01:04:28.110Z] ========================\\n[2023-05-01T01:04:28.110Z] Growing server foodnstuff\\n[2023-05-01T01:04:28.110Z] Progress: 39496280/45000000\\n[2023-05-01T01:04:28.110Z] ========================\\n[2023-05-01T01:04:30.354Z] ========================\\n[2023-05-01T01:04:30.354Z] Weakening server foodnstuff\\n[2023-05-01T01:04:30.354Z] Progress: 7.327999999999999/6\\n[2023-05-01T01:04:30.354Z] ========================\\n[2023-05-01T01:04:33.219Z] ========================\\n[2023-05-01T01:04:33.220Z] Growing server foodnstuff\\n[2023-05-01T01:04:33.220Z] Progress: 31220240/45000000\\n[2023-05-01T01:04:33.220Z] ========================\\n[2023-05-01T01:04:35.464Z] ========================\\n[2023-05-01T01:04:35.464Z] Weakening server foodnstuff\\n[2023-05-01T01:04:35.464Z] Progress: 7.216/6\\n[2023-05-01T01:04:35.464Z] ========================\\n[2023-05-01T01:04:38.328Z] ========================\\n[2023-05-01T01:04:38.328Z] Growing server foodnstuff\\n[2023-05-01T01:04:38.328Z] Progress: 30821390/45000000\\n[2023-05-01T01:04:38.328Z] ========================\\n[2023-05-01T01:04:40.574Z] ========================\\n[2023-05-01T01:04:40.575Z] Weakening server foodnstuff\\n[2023-05-01T01:04:40.575Z] Progress: 7.312/6\\n[2023-05-01T01:04:40.575Z] ========================\\n[2023-05-01T01:04:43.440Z] ========================\\n[2023-05-01T01:04:43.440Z] Growing server foodnstuff\\n[2023-05-01T01:04:43.440Z] Progress: 31217370/45000000\\n[2023-05-01T01:04:43.440Z] ========================\\n[2023-05-01T01:04:45.685Z] ========================\\n[2023-05-01T01:04:45.685Z] Weakening server foodnstuff\\n[2023-05-01T01:04:45.685Z] Progress: 7.216/6\\n[2023-05-01T01:04:45.685Z] ========================\\n[2023-05-01T01:04:48.549Z] ========================\\n[2023-05-01T01:04:48.549Z] Growing server foodnstuff\\n[2023-05-01T01:04:48.549Z] Progress: 31200200/45000000\\n[2023-05-01T01:04:48.549Z] ========================\\n[2023-05-01T01:04:50.794Z] ========================\\n[2023-05-01T01:04:50.794Z] Weakening server foodnstuff\\n[2023-05-01T01:04:50.794Z] Progress: 7.22/6\\n[2023-05-01T01:04:50.794Z] ========================\\n[2023-05-01T01:04:53.658Z] ========================\\n[2023-05-01T01:04:53.658Z] Growing server foodnstuff\\n[2023-05-01T01:04:53.658Z] Progress: 39496280/45000000\\n[2023-05-01T01:04:53.658Z] ========================\\n[2023-05-01T01:04:55.902Z] ========================\\n[2023-05-01T01:04:55.903Z] Weakening server foodnstuff\\n[2023-05-01T01:04:55.903Z] Progress: 7.327999999999999/6\\n[2023-05-01T01:04:55.903Z] ========================\\n[2023-05-01T01:04:58.768Z] ========================\\n[2023-05-01T01:04:58.768Z] Growing server foodnstuff\\n[2023-05-01T01:04:58.768Z] Progress: 31220240/45000000\\n[2023-05-01T01:04:58.768Z] ========================\\n[2023-05-01T01:05:01.015Z] ========================\\n[2023-05-01T01:05:01.015Z] Weakening server foodnstuff\\n[2023-05-01T01:05:01.015Z] Progress: 7.216/6\\n[2023-05-01T01:05:01.015Z] ========================\\n[2023-05-01T01:05:03.879Z] ========================\\n[2023-05-01T01:05:03.879Z] Growing server foodnstuff\\n[2023-05-01T01:05:03.879Z] Progress: 31200200/45000000\\n[2023-05-01T01:05:03.879Z] ========================\\n[2023-05-01T01:05:06.125Z] ========================\\n[2023-05-01T01:05:06.125Z] Weakening server foodnstuff\\n[2023-05-01T01:05:06.125Z] Progress: 7.22/6\\n[2023-05-01T01:05:06.125Z] ========================\\n[2023-05-01T01:05:08.992Z] ========================\\n[2023-05-01T01:05:08.992Z] Growing server foodnstuff\\n[2023-05-01T01:05:08.992Z] Progress: 39018530/45000000\\n[2023-05-01T01:05:08.992Z] ========================\\n[2023-05-01T01:05:11.237Z] ========================\\n[2023-05-01T01:05:11.237Z] Weakening server foodnstuff\\n[2023-05-01T01:05:11.237Z] Progress: 6.788/6\\n[2023-05-01T01:05:11.237Z] ========================\\n[2023-05-01T01:05:14.095Z] ========================\\n[2023-05-01T01:05:14.095Z] Growing server foodnstuff\\n[2023-05-01T01:05:14.095Z] Progress: 31123690/45000000\\n[2023-05-01T01:05:14.095Z] ========================\\n[2023-05-01T01:05:16.341Z] ========================\\n[2023-05-01T01:05:16.341Z] Weakening server foodnstuff\\n[2023-05-01T01:05:16.341Z] Progress: 6.6080000000000005/6\\n[2023-05-01T01:05:16.341Z] ========================\\n[2023-05-01T01:05:19.197Z] ========================\\n[2023-05-01T01:05:19.197Z] Growing server foodnstuff\\n[2023-05-01T01:05:19.197Z] Progress: 31091550/45000000\\n[2023-05-01T01:05:19.197Z] ========================\\n[2023-05-01T01:05:21.442Z] ========================\\n[2023-05-01T01:05:21.442Z] Weakening server foodnstuff\\n[2023-05-01T01:05:21.442Z] Progress: 6.6080000000000005/6\\n[2023-05-01T01:05:21.442Z] ========================\\n[2023-05-01T01:05:24.298Z] ========================\\n[2023-05-01T01:05:24.298Z] Growing server foodnstuff\\n[2023-05-01T01:05:24.298Z] Progress: 39671980/45000000\\n[2023-05-01T01:05:24.298Z] ========================\\n[2023-05-01T01:05:26.544Z] ========================\\n[2023-05-01T01:05:26.544Z] Weakening server foodnstuff\\n[2023-05-01T01:05:26.544Z] Progress: 6.66/6\\n[2023-05-01T01:05:26.544Z] ========================\\n[2023-05-01T01:05:30.102Z] =============== SUMMARY ===============\\n[2023-05-01T01:05:30.102Z] Initial ask price: 1770.906741306961\\n[2023-05-01T01:05:30.102Z] Final ask price: 1777.313321089731\\n[2023-05-01T01:05:30.102Z] Initial bid price: 1749.7826052277528\\n[2023-05-01T01:05:30.102Z] Final bid price: 1756.112764575738\\n[2023-05-01T01:05:30.102Z] =======================================\\n[2023-05-01T01:05:31.104Z] ========================\\n[2023-05-01T01:05:31.104Z] Growing server foodnstuff\\n[2023-05-01T01:05:31.104Z] Progress: 0/45000000\\n[2023-05-01T01:05:31.104Z] ========================\\n[2023-05-01T01:05:33.349Z] ========================\\n[2023-05-01T01:05:33.349Z] Weakening server foodnstuff\\n[2023-05-01T01:05:33.349Z] Progress: 19.04/6\\n[2023-05-01T01:05:33.349Z] ========================\\n[2023-05-01T01:05:36.377Z] ========================\\n[2023-05-01T01:05:36.377Z] Growing server foodnstuff\\n[2023-05-01T01:05:36.377Z] Progress: 22273.296180417794/45000000\\n[2023-05-01T01:05:36.377Z] ========================\\n[2023-05-01T01:05:38.622Z] ========================\\n[2023-05-01T01:05:38.622Z] Weakening server foodnstuff\\n[2023-05-01T01:05:38.622Z] Progress: 18.5/6\\n[2023-05-01T01:05:38.622Z] ========================\\n[2023-05-01T01:05:41.641Z] ========================\\n[2023-05-01T01:05:41.641Z] Growing server foodnstuff\\n[2023-05-01T01:05:41.641Z] Progress: 191155.62224512032/45000000\\n[2023-05-01T01:05:41.641Z] ========================\\n[2023-05-01T01:05:43.886Z] ========================\\n[2023-05-01T01:05:43.886Z] Weakening server foodnstuff\\n[2023-05-01T01:05:43.886Z] Progress: 18.5/6\\n[2023-05-01T01:05:43.886Z] ========================\\n[2023-05-01T01:05:46.905Z] ========================\\n[2023-05-01T01:05:46.905Z] Growing server foodnstuff\\n[2023-05-01T01:05:46.905Z] Progress: 1472236.2607518346/45000000\\n[2023-05-01T01:05:46.905Z] ========================\\n[2023-05-01T01:05:49.151Z] ========================\\n[2023-05-01T01:05:49.151Z] Weakening server foodnstuff\\n[2023-05-01T01:05:49.151Z] Progress: 18.5/6\\n[2023-05-01T01:05:49.151Z] ========================\\n[2023-05-01T01:05:52.171Z] ========================\\n[2023-05-01T01:05:52.171Z] Growing server foodnstuff\\n[2023-05-01T01:05:52.171Z] Progress: 11190053.63453672/45000000\\n[2023-05-01T01:05:52.171Z] ========================\\n[2023-05-01T01:05:54.417Z] ========================\\n[2023-05-01T01:05:54.417Z] Weakening server foodnstuff\\n[2023-05-01T01:05:54.417Z] Progress: 14.496/6\\n[2023-05-01T01:05:54.417Z] ========================\\n[2023-05-01T01:05:57.381Z] ========================\\n[2023-05-01T01:05:57.381Z] Growing server foodnstuff\\n[2023-05-01T01:05:57.381Z] Progress: 30450680/45000000\\n[2023-05-01T01:05:57.381Z] ========================\\n[2023-05-01T01:05:59.627Z] ========================\\n[2023-05-01T01:05:59.627Z] Weakening server foodnstuff\\n[2023-05-01T01:05:59.627Z] Progress: 7.404/6\\n[2023-05-01T01:05:59.627Z] ========================\\n[2023-05-01T01:06:02.494Z] ========================\\n[2023-05-01T01:06:02.494Z] Growing server foodnstuff\\n[2023-05-01T01:06:02.494Z] Progress: 31233830/45000000\\n[2023-05-01T01:06:02.494Z] ========================\\n[2023-05-01T01:06:04.738Z] ========================\\n[2023-05-01T01:06:04.738Z] Weakening server foodnstuff\\n[2023-05-01T01:06:04.738Z] Progress: 7.212/6\\n[2023-05-01T01:06:04.738Z] ========================\\n[2023-05-01T01:06:07.602Z] ========================\\n[2023-05-01T01:06:07.602Z] Growing server foodnstuff\\n[2023-05-01T01:06:07.602Z] Progress: 31199490/45000000\\n[2023-05-01T01:06:07.602Z] ========================\\n[2023-05-01T01:06:09.849Z] ========================\\n[2023-05-01T01:06:09.849Z] Weakening server foodnstuff\\n[2023-05-01T01:06:09.849Z] Progress: 7.22/6\\n[2023-05-01T01:06:09.849Z] ========================\\n[2023-05-01T01:06:12.713Z] ========================\\n[2023-05-01T01:06:12.713Z] Growing server foodnstuff\\n[2023-05-01T01:06:12.713Z] Progress: 39018530/45000000\\n[2023-05-01T01:06:12.714Z] ========================\\n[2023-05-01T01:06:14.959Z] ========================\\n[2023-05-01T01:06:14.959Z] Weakening server foodnstuff\\n[2023-05-01T01:06:14.959Z] Progress: 6.788/6\\n[2023-05-01T01:06:14.959Z] ========================\\n[2023-05-01T01:06:17.818Z] ========================\\n[2023-05-01T01:06:17.818Z] Growing server foodnstuff\\n[2023-05-01T01:06:17.818Z] Progress: 31123690/45000000\\n[2023-05-01T01:06:17.818Z] ========================\\n[2023-05-01T01:06:20.064Z] ========================\\n[2023-05-01T01:06:20.064Z] Weakening server foodnstuff\\n[2023-05-01T01:06:20.064Z] Progress: 6.6080000000000005/6\\n[2023-05-01T01:06:20.064Z] ========================\\n[2023-05-01T01:06:22.920Z] ========================\\n[2023-05-01T01:06:22.920Z] Growing server foodnstuff\\n[2023-05-01T01:06:22.920Z] Progress: 31091550/45000000\\n[2023-05-01T01:06:22.920Z] ========================\\n[2023-05-01T01:06:25.164Z] ========================\\n[2023-05-01T01:06:25.164Z] Weakening server foodnstuff\\n[2023-05-01T01:06:25.164Z] Progress: 6.616/6\\n[2023-05-01T01:06:25.164Z] ========================\\n[2023-05-01T01:06:28.022Z] ========================\\n[2023-05-01T01:06:28.022Z] Growing server foodnstuff\\n[2023-05-01T01:06:28.022Z] Progress: 39427900/45000000\\n[2023-05-01T01:06:28.022Z] ========================\\n[2023-05-01T01:06:30.267Z] ========================\\n[2023-05-01T01:06:30.267Z] Weakening server foodnstuff\\n[2023-05-01T01:06:30.267Z] Progress: 6.708/6\\n[2023-05-01T01:06:30.267Z] ========================\\n[2023-05-01T01:06:33.124Z] ========================\\n[2023-05-01T01:06:33.124Z] Growing server foodnstuff\\n[2023-05-01T01:06:33.124Z] Progress: 31109410/45000000\\n[2023-05-01T01:06:33.124Z] ========================\\n[2023-05-01T01:06:35.369Z] ========================\\n[2023-05-01T01:06:35.369Z] Weakening server foodnstuff\\n[2023-05-01T01:06:35.369Z] Progress: 6.612/6\\n[2023-05-01T01:06:35.369Z] ========================\\n[2023-05-01T01:06:38.226Z] ========================\\n[2023-05-01T01:06:38.226Z] Growing server foodnstuff\\n[2023-05-01T01:06:38.226Z] Progress: 31092260/45000000\\n[2023-05-01T01:06:38.226Z] ========================\\n[2023-05-01T01:06:40.471Z] ========================\\n[2023-05-01T01:06:40.471Z] Weakening server foodnstuff\\n[2023-05-01T01:06:40.471Z] Progress: 6.616/6\\n[2023-05-01T01:06:40.471Z] ========================\\n[2023-05-01T01:06:44.029Z] =============== SUMMARY ===============\\n[2023-05-01T01:06:44.029Z] Initial ask price: 1773.5535460268113\\n[2023-05-01T01:06:44.029Z] Final ask price: 1758.2018408491745\\n[2023-05-01T01:06:44.029Z] Initial bid price: 1752.3978377243045\\n[2023-05-01T01:06:44.029Z] Final bid price: 1737.229254278409\\n[2023-05-01T01:06:44.029Z] =======================================\\n[2023-05-01T01:06:45.031Z] ========================\\n[2023-05-01T01:06:45.032Z] Growing server foodnstuff\\n[2023-05-01T01:06:45.032Z] Progress: 0/45000000\\n[2023-05-01T01:06:45.032Z] ========================\\n[2023-05-01T01:06:47.277Z] ========================\\n[2023-05-01T01:06:47.277Z] Weakening server foodnstuff\\n[2023-05-01T01:06:47.277Z] Progress: 19.152/6\\n[2023-05-01T01:06:47.277Z] ========================\\n[2023-05-01T01:06:50.305Z] ========================\\n[2023-05-01T01:06:50.305Z] Growing server foodnstuff\\n[2023-05-01T01:06:50.305Z] Progress: 22279.463304345747/45000000\\n[2023-05-01T01:06:50.305Z] ========================\\n[2023-05-01T01:06:52.551Z] ========================\\n[2023-05-01T01:06:52.551Z] Weakening server foodnstuff\\n[2023-05-01T01:06:52.551Z] Progress: 19/6\\n[2023-05-01T01:06:52.551Z] ========================\\n[2023-05-01T01:06:55.578Z] ========================\\n[2023-05-01T01:06:55.578Z] Growing server foodnstuff\\n[2023-05-01T01:06:55.578Z] Progress: 191192.05969068408/45000000\\n[2023-05-01T01:06:55.578Z] ========================\\n[2023-05-01T01:06:57.823Z] ========================\\n[2023-05-01T01:06:57.823Z] Weakening server foodnstuff\\n[2023-05-01T01:06:57.823Z] Progress: 19/6\\n[2023-05-01T01:06:57.823Z] ========================\\n[2023-05-01T01:07:00.850Z] ========================\\n[2023-05-01T01:07:00.850Z] Growing server foodnstuff\\n[2023-05-01T01:07:00.850Z] Progress: 1472432.9984891906/45000000\\n[2023-05-01T01:07:00.850Z] ========================\\n[2023-05-01T01:07:03.095Z] ========================\\n[2023-05-01T01:07:03.095Z] Weakening server foodnstuff\\n[2023-05-01T01:07:03.095Z] Progress: 19/6\\n[2023-05-01T01:07:03.095Z] ========================\\n[2023-05-01T01:07:06.122Z] ========================\\n[2023-05-01T01:07:06.122Z] Growing server foodnstuff\\n[2023-05-01T01:07:06.122Z] Progress: 11190940.548385862/45000000\\n[2023-05-01T01:07:06.122Z] ========================\\n[2023-05-01T01:07:08.366Z] ========================\\n[2023-05-01T01:07:08.366Z] Weakening server foodnstuff\\n[2023-05-01T01:07:08.366Z] Progress: 14.496/6\\n[2023-05-01T01:07:08.366Z] ========================\\n[2023-05-01T01:07:12.031Z] =============== SUMMARY ===============\\n[2023-05-01T01:07:12.031Z] Initial ask price: 1758.2018408491745\\n[2023-05-01T01:07:12.031Z] Final ask price: 1737.7943165846216\\n[2023-05-01T01:07:12.031Z] Initial bid price: 1737.229254278409\\n[2023-05-01T01:07:12.031Z] Final bid price: 1717.065159726753\\n[2023-05-01T01:07:12.031Z] =======================================\\n[2023-05-01T01:07:13.032Z] ========================\\n[2023-05-01T01:07:13.032Z] Growing server foodnstuff\\n[2023-05-01T01:07:13.032Z] Progress: 0/45000000\\n[2023-05-01T01:07:13.032Z] ========================\\n[2023-05-01T01:07:15.276Z] ========================\\n[2023-05-01T01:07:15.276Z] Weakening server foodnstuff\\n[2023-05-01T01:07:15.276Z] Progress: 19.04/6\\n[2023-05-01T01:07:15.276Z] ========================\\n[2023-05-01T01:07:18.303Z] ========================\\n[2023-05-01T01:07:18.303Z] Growing server foodnstuff\\n[2023-05-01T01:07:18.303Z] Progress: 22279.723574894495/45000000\\n[2023-05-01T01:07:18.303Z] ========================\\n[2023-05-01T01:07:20.547Z] ========================\\n[2023-05-01T01:07:20.547Z] Weakening server foodnstuff\\n[2023-05-01T01:07:20.547Z] Progress: 18.5/6\\n[2023-05-01T01:07:20.547Z] ========================\\n[2023-05-01T01:07:23.565Z] ========================\\n[2023-05-01T01:07:23.565Z] Growing server foodnstuff\\n[2023-05-01T01:07:23.565Z] Progress: 191659.81519343142/45000000\\n[2023-05-01T01:07:23.565Z] ========================\\n[2023-05-01T01:07:25.809Z] ========================\\n[2023-05-01T01:07:25.809Z] Weakening server foodnstuff\\n[2023-05-01T01:07:25.809Z] Progress: 19.04/6\\n[2023-05-01T01:07:25.809Z] ========================\\n[2023-05-01T01:07:28.835Z] ========================\\n[2023-05-01T01:07:28.835Z] Growing server foodnstuff\\n[2023-05-01T01:07:28.835Z] Progress: 1482521.6028227464/45000000\\n[2023-05-01T01:07:28.835Z] ========================\\n[2023-05-01T01:07:31.080Z] ========================\\n[2023-05-01T01:07:31.080Z] Weakening server foodnstuff\\n[2023-05-01T01:07:31.080Z] Progress: 18.5/6\\n[2023-05-01T01:07:31.080Z] ========================\\n[2023-05-01T01:07:34.100Z] ========================\\n[2023-05-01T01:07:34.100Z] Growing server foodnstuff\\n[2023-05-01T01:07:34.100Z] Progress: 11268074.543500371/45000000\\n[2023-05-01T01:07:34.100Z] ========================\\n[2023-05-01T01:07:36.343Z] ========================\\n[2023-05-01T01:07:36.343Z] Weakening server foodnstuff\\n[2023-05-01T01:07:36.343Z] Progress: 14.443999999999999/6\\n[2023-05-01T01:07:36.343Z] ========================\\n[2023-05-01T01:07:40.009Z] =============== SUMMARY ===============\\n[2023-05-01T01:07:40.009Z] Initial ask price: 1737.7943165846216\\n[2023-05-01T01:07:40.009Z] Final ask price: 1713.3983243412479\\n[2023-05-01T01:07:40.009Z] Initial bid price: 1717.065159726753\\n[2023-05-01T01:07:40.009Z] Final bid price: 1692.96017335507\\n[2023-05-01T01:07:40.009Z] =======================================\\n[2023-05-01T01:07:41.011Z] ========================\\n[2023-05-01T01:07:41.011Z] Growing server foodnstuff\\n[2023-05-01T01:07:41.011Z] Progress: 0/45000000\\n[2023-05-01T01:07:41.011Z] ========================\\n[2023-05-01T01:07:43.255Z] ========================\\n[2023-05-01T01:07:43.255Z] Weakening server foodnstuff\\n[2023-05-01T01:07:43.255Z] Progress: 19.04/6\\n[2023-05-01T01:07:43.255Z] ========================\\n[2023-05-01T01:07:46.280Z] ========================\\n[2023-05-01T01:07:46.280Z] Growing server foodnstuff\\n[2023-05-01T01:07:46.280Z] Progress: 22273.296180417794/45000000\\n[2023-05-01T01:07:46.280Z] ========================\\n[2023-05-01T01:07:48.524Z] ========================\\n[2023-05-01T01:07:48.524Z] Weakening server foodnstuff\\n[2023-05-01T01:07:48.524Z] Progress: 18.5/6\\n[2023-05-01T01:07:48.524Z] ========================\\n[2023-05-01T01:07:51.543Z] ========================\\n[2023-05-01T01:07:51.543Z] Growing server foodnstuff\\n[2023-05-01T01:07:51.543Z] Progress: 191155.62224512032/45000000\\n[2023-05-01T01:07:51.543Z] ========================\\n[2023-05-01T01:07:53.788Z] ========================\\n[2023-05-01T01:07:53.788Z] Weakening server foodnstuff\\n[2023-05-01T01:07:53.788Z] Progress: 18.5/6\\n[2023-05-01T01:07:53.788Z] ========================\\n[2023-05-01T01:07:56.807Z] ========================\\n[2023-05-01T01:07:56.807Z] Growing server foodnstuff\\n[2023-05-01T01:07:56.807Z] Progress: 1472236.2607518346/45000000\\n[2023-05-01T01:07:56.808Z] ========================\\n[2023-05-01T01:07:59.051Z] ========================\\n[2023-05-01T01:07:59.051Z] Weakening server foodnstuff\\n[2023-05-01T01:07:59.051Z] Progress: 18.5/6\\n[2023-05-01T01:07:59.051Z] ========================\\n[2023-05-01T01:08:02.071Z] ========================\\n[2023-05-01T01:08:02.071Z] Growing server foodnstuff\\n[2023-05-01T01:08:02.071Z] Progress: 11190053.63453672/45000000\\n[2023-05-01T01:08:02.071Z] ========================\\n[2023-05-01T01:08:04.315Z] ========================\\n[2023-05-01T01:08:04.315Z] Weakening server foodnstuff\\n[2023-05-01T01:08:04.315Z] Progress: 14.496/6\\n[2023-05-01T01:08:04.315Z] ========================\\n[2023-05-01T01:08:07.280Z] ========================\\n[2023-05-01T01:08:07.280Z] Growing server foodnstuff\\n[2023-05-01T01:08:07.280Z] Progress: 39018530/45000000\\n[2023-05-01T01:08:07.280Z] ========================\\n[2023-05-01T01:08:09.524Z] ========================\\n[2023-05-01T01:08:09.524Z] Weakening server foodnstuff\\n[2023-05-01T01:08:09.524Z] Progress: 7.42/6\\n[2023-05-01T01:08:09.524Z] ========================\\n[2023-05-01T01:08:12.389Z] ========================\\n[2023-05-01T01:08:12.389Z] Growing server foodnstuff\\n[2023-05-01T01:08:12.389Z] Progress: 31236690/45000000\\n[2023-05-01T01:08:12.389Z] ========================\\n[2023-05-01T01:08:14.640Z] ========================\\n[2023-05-01T01:08:14.640Z] Weakening server foodnstuff\\n[2023-05-01T01:08:14.640Z] Progress: 7.212/6\\n[2023-05-01T01:08:14.640Z] ========================\\n[2023-05-01T01:08:17.503Z] ========================\\n[2023-05-01T01:08:17.503Z] Growing server foodnstuff\\n[2023-05-01T01:08:17.503Z] Progress: 31199490/45000000\\n[2023-05-01T01:08:17.503Z] ========================\\n[2023-05-01T01:08:19.753Z] ========================\\n[2023-05-01T01:08:19.753Z] Weakening server foodnstuff\\n[2023-05-01T01:08:19.753Z] Progress: 7.22/6\\n[2023-05-01T01:08:19.753Z] ========================\\n[2023-05-01T01:08:23.319Z] =============== SUMMARY ===============\\n[2023-05-01T01:08:23.319Z] Initial ask price: 1713.3983243412479\\n[2023-05-01T01:08:23.319Z] Final ask price: 1695.92884099237\\n[2023-05-01T01:08:23.319Z] Initial bid price: 1692.96017335507\\n[2023-05-01T01:08:23.319Z] Final bid price: 1675.6990735053835\\n[2023-05-01T01:08:23.319Z] =======================================\\n[2023-05-01T01:08:24.321Z] ========================\\n[2023-05-01T01:08:24.321Z] Growing server foodnstuff\\n[2023-05-01T01:08:24.321Z] Progress: 0/45000000\\n[2023-05-01T01:08:24.321Z] ========================\\n[2023-05-01T01:08:26.566Z] ========================\\n[2023-05-01T01:08:26.566Z] Weakening server foodnstuff\\n[2023-05-01T01:08:26.566Z] Progress: 19.172/6\\n[2023-05-01T01:08:26.566Z] ========================\\n[2023-05-01T01:08:29.594Z] ========================\\n[2023-05-01T01:08:29.594Z] Growing server foodnstuff\\n[2023-05-01T01:08:29.594Z] Progress: 22272.989841448114/45000000\\n[2023-05-01T01:08:29.594Z] ========================\\n[2023-05-01T01:08:31.838Z] ========================\\n[2023-05-01T01:08:31.838Z] Weakening server foodnstuff\\n[2023-05-01T01:08:31.838Z] Progress: 19/6\\n[2023-05-01T01:08:31.838Z] ========================\\n[2023-05-01T01:08:34.864Z] ========================\\n[2023-05-01T01:08:34.864Z] Growing server foodnstuff\\n[2023-05-01T01:08:34.864Z] Progress: 191142.95698397257/45000000\\n[2023-05-01T01:08:34.864Z] ========================\\n[2023-05-01T01:08:37.107Z] ========================\\n[2023-05-01T01:08:37.107Z] Weakening server foodnstuff\\n[2023-05-01T01:08:37.107Z] Progress: 18.5/6\\n[2023-05-01T01:08:37.107Z] ========================\\n[2023-05-01T01:08:40.126Z] ========================\\n[2023-05-01T01:08:40.127Z] Growing server foodnstuff\\n[2023-05-01T01:08:40.127Z] Progress: 1472140.1866319657/45000000\\n[2023-05-01T01:08:40.127Z] ========================\\n[2023-05-01T01:08:42.370Z] ========================\\n[2023-05-01T01:08:42.370Z] Weakening server foodnstuff\\n[2023-05-01T01:08:42.370Z] Progress: 18.5/6\\n[2023-05-01T01:08:42.370Z] ========================\\n[2023-05-01T01:08:45.389Z] ========================\\n[2023-05-01T01:08:45.389Z] Growing server foodnstuff\\n[2023-05-01T01:08:45.389Z] Progress: 11189324.85078715/45000000\\n[2023-05-01T01:08:45.389Z] ========================\\n[2023-05-01T01:08:47.633Z] ========================\\n[2023-05-01T01:08:47.633Z] Weakening server foodnstuff\\n[2023-05-01T01:08:47.633Z] Progress: 14.5/6\\n[2023-05-01T01:08:47.633Z] ========================\\n[2023-05-01T01:08:50.596Z] ========================\\n[2023-05-01T01:08:50.596Z] Growing server foodnstuff\\n[2023-05-01T01:08:50.596Z] Progress: 39018530/45000000\\n[2023-05-01T01:08:50.596Z] ========================\\n[2023-05-01T01:08:52.839Z] ========================\\n[2023-05-01T01:08:52.839Z] Weakening server foodnstuff\\n[2023-05-01T01:08:52.839Z] Progress: 6.788/6\\n[2023-05-01T01:08:52.839Z] ========================\\n[2023-05-01T01:08:55.696Z] ========================\\n[2023-05-01T01:08:55.696Z] Growing server foodnstuff\\n[2023-05-01T01:08:55.696Z] Progress: 31123690/45000000\\n[2023-05-01T01:08:55.696Z] ========================\\n[2023-05-01T01:08:57.940Z] ========================\\n[2023-05-01T01:08:57.940Z] Weakening server foodnstuff\\n[2023-05-01T01:08:57.940Z] Progress: 6.6080000000000005/6\\n[2023-05-01T01:08:57.940Z] ========================\\n[2023-05-01T01:09:00.793Z] ========================\\n[2023-05-01T01:09:00.793Z] Growing server foodnstuff\\n[2023-05-01T01:09:00.793Z] Progress: 39427000/45000000\\n[2023-05-01T01:09:00.793Z] ========================\\n[2023-05-01T01:09:03.041Z] ========================\\n[2023-05-01T01:09:03.041Z] Weakening server foodnstuff\\n[2023-05-01T01:09:03.041Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:09:03.041Z] ========================\\n[2023-05-01T01:09:05.898Z] ========================\\n[2023-05-01T01:09:05.898Z] Growing server foodnstuff\\n[2023-05-01T01:09:05.898Z] Progress: 31105830/45000000\\n[2023-05-01T01:09:05.898Z] ========================\\n[2023-05-01T01:09:08.142Z] ========================\\n[2023-05-01T01:09:08.142Z] Weakening server foodnstuff\\n[2023-05-01T01:09:08.142Z] Progress: 6.612/6\\n[2023-05-01T01:09:08.142Z] ========================\\n[2023-05-01T01:09:10.997Z] ========================\\n[2023-05-01T01:09:10.998Z] Growing server foodnstuff\\n[2023-05-01T01:09:10.998Z] Progress: 31092260/45000000\\n[2023-05-01T01:09:10.998Z] ========================\\n[2023-05-01T01:09:13.241Z] ========================\\n[2023-05-01T01:09:13.241Z] Weakening server foodnstuff\\n[2023-05-01T01:09:13.241Z] Progress: 6.616/6\\n[2023-05-01T01:09:13.241Z] ========================\\n[2023-05-01T01:09:16.097Z] ========================\\n[2023-05-01T01:09:16.097Z] Growing server foodnstuff\\n[2023-05-01T01:09:16.097Z] Progress: 39427900/45000000\\n[2023-05-01T01:09:16.097Z] ========================\\n[2023-05-01T01:09:18.340Z] ========================\\n[2023-05-01T01:09:18.340Z] Weakening server foodnstuff\\n[2023-05-01T01:09:18.340Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:09:18.340Z] ========================\\n[2023-05-01T01:09:21.195Z] ========================\\n[2023-05-01T01:09:21.196Z] Growing server foodnstuff\\n[2023-05-01T01:09:21.196Z] Progress: 31105830/45000000\\n[2023-05-01T01:09:21.196Z] ========================\\n[2023-05-01T01:09:23.448Z] ========================\\n[2023-05-01T01:09:23.448Z] Weakening server foodnstuff\\n[2023-05-01T01:09:23.448Z] Progress: 6.612/6\\n[2023-05-01T01:09:23.448Z] ========================\\n[2023-05-01T01:09:26.303Z] ========================\\n[2023-05-01T01:09:26.303Z] Growing server foodnstuff\\n[2023-05-01T01:09:26.303Z] Progress: 31092260/45000000\\n[2023-05-01T01:09:26.303Z] ========================\\n[2023-05-01T01:09:28.548Z] ========================\\n[2023-05-01T01:09:28.548Z] Weakening server foodnstuff\\n[2023-05-01T01:09:28.548Z] Progress: 6.616/6\\n[2023-05-01T01:09:28.548Z] ========================\\n[2023-05-01T01:09:31.404Z] ========================\\n[2023-05-01T01:09:31.404Z] Growing server foodnstuff\\n[2023-05-01T01:09:31.404Z] Progress: 39427900/45000000\\n[2023-05-01T01:09:31.404Z] ========================\\n[2023-05-01T01:09:33.648Z] ========================\\n[2023-05-01T01:09:33.648Z] Weakening server foodnstuff\\n[2023-05-01T01:09:33.648Z] Progress: 6.708/6\\n[2023-05-01T01:09:33.648Z] ========================\\n[2023-05-01T01:09:36.505Z] ========================\\n[2023-05-01T01:09:36.505Z] Growing server foodnstuff\\n[2023-05-01T01:09:36.505Z] Progress: 31109410/45000000\\n[2023-05-01T01:09:36.505Z] ========================\\n[2023-05-01T01:09:38.749Z] ========================\\n[2023-05-01T01:09:38.749Z] Weakening server foodnstuff\\n[2023-05-01T01:09:38.749Z] Progress: 6.612/6\\n[2023-05-01T01:09:38.749Z] ========================\\n[2023-05-01T01:09:41.604Z] ========================\\n[2023-05-01T01:09:41.605Z] Growing server foodnstuff\\n[2023-05-01T01:09:41.605Z] Progress: 39427450/45000000\\n[2023-05-01T01:09:41.605Z] ========================\\n[2023-05-01T01:09:43.848Z] ========================\\n[2023-05-01T01:09:43.848Z] Weakening server foodnstuff\\n[2023-05-01T01:09:43.848Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:09:43.848Z] ========================\\n[2023-05-01T01:09:46.702Z] ========================\\n[2023-05-01T01:09:46.702Z] Growing server foodnstuff\\n[2023-05-01T01:09:46.702Z] Progress: 31105830/45000000\\n[2023-05-01T01:09:46.702Z] ========================\\n[2023-05-01T01:09:48.945Z] ========================\\n[2023-05-01T01:09:48.945Z] Weakening server foodnstuff\\n[2023-05-01T01:09:48.945Z] Progress: 6.612/6\\n[2023-05-01T01:09:48.945Z] ========================\\n[2023-05-01T01:09:51.798Z] ========================\\n[2023-05-01T01:09:51.798Z] Growing server foodnstuff\\n[2023-05-01T01:09:51.798Z] Progress: 31092260/45000000\\n[2023-05-01T01:09:51.798Z] ========================\\n[2023-05-01T01:09:54.042Z] ========================\\n[2023-05-01T01:09:54.042Z] Weakening server foodnstuff\\n[2023-05-01T01:09:54.042Z] Progress: 6.616/6\\n[2023-05-01T01:09:54.042Z] ========================\\n[2023-05-01T01:09:56.894Z] ========================\\n[2023-05-01T01:09:56.894Z] Growing server foodnstuff\\n[2023-05-01T01:09:56.894Z] Progress: 39427900/45000000\\n[2023-05-01T01:09:56.894Z] ========================\\n[2023-05-01T01:09:59.136Z] ========================\\n[2023-05-01T01:09:59.136Z] Weakening server foodnstuff\\n[2023-05-01T01:09:59.136Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:09:59.136Z] ========================\\n[2023-05-01T01:10:01.990Z] ========================\\n[2023-05-01T01:10:01.990Z] Growing server foodnstuff\\n[2023-05-01T01:10:01.990Z] Progress: 31105830/45000000\\n[2023-05-01T01:10:01.990Z] ========================\\n[2023-05-01T01:10:04.234Z] ========================\\n[2023-05-01T01:10:04.234Z] Weakening server foodnstuff\\n[2023-05-01T01:10:04.234Z] Progress: 6.612/6\\n[2023-05-01T01:10:04.234Z] ========================\\n[2023-05-01T01:10:07.086Z] ========================\\n[2023-05-01T01:10:07.086Z] Growing server foodnstuff\\n[2023-05-01T01:10:07.086Z] Progress: 31092260/45000000\\n[2023-05-01T01:10:07.086Z] ========================\\n[2023-05-01T01:10:09.331Z] ========================\\n[2023-05-01T01:10:09.331Z] Weakening server foodnstuff\\n[2023-05-01T01:10:09.331Z] Progress: 6.616/6\\n[2023-05-01T01:10:09.331Z] ========================\\n[2023-05-01T01:10:12.184Z] ========================\\n[2023-05-01T01:10:12.184Z] Growing server foodnstuff\\n[2023-05-01T01:10:12.184Z] Progress: 39427900/45000000\\n[2023-05-01T01:10:12.184Z] ========================\\n[2023-05-01T01:10:14.428Z] ========================\\n[2023-05-01T01:10:14.428Z] Weakening server foodnstuff\\n[2023-05-01T01:10:14.428Z] Progress: 6.708/6\\n[2023-05-01T01:10:14.428Z] ========================\\n[2023-05-01T01:10:17.283Z] ========================\\n[2023-05-01T01:10:17.283Z] Growing server foodnstuff\\n[2023-05-01T01:10:17.283Z] Progress: 31109410/45000000\\n[2023-05-01T01:10:17.283Z] ========================\\n[2023-05-01T01:10:19.530Z] ========================\\n[2023-05-01T01:10:19.530Z] Weakening server foodnstuff\\n[2023-05-01T01:10:19.530Z] Progress: 6.612/6\\n[2023-05-01T01:10:19.530Z] ========================\\n[2023-05-01T01:10:22.383Z] ========================\\n[2023-05-01T01:10:22.383Z] Growing server foodnstuff\\n[2023-05-01T01:10:22.383Z] Progress: 39427450/45000000\\n[2023-05-01T01:10:22.383Z] ========================\\n[2023-05-01T01:10:24.626Z] ========================\\n[2023-05-01T01:10:24.626Z] Weakening server foodnstuff\\n[2023-05-01T01:10:24.626Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:10:24.626Z] ========================\\n[2023-05-01T01:10:27.481Z] ========================\\n[2023-05-01T01:10:27.481Z] Growing server foodnstuff\\n[2023-05-01T01:10:27.481Z] Progress: 31105830/45000000\\n[2023-05-01T01:10:27.481Z] ========================\\n[2023-05-01T01:10:29.723Z] ========================\\n[2023-05-01T01:10:29.723Z] Weakening server foodnstuff\\n[2023-05-01T01:10:29.723Z] Progress: 6.612/6\\n[2023-05-01T01:10:29.723Z] ========================\\n[2023-05-01T01:10:32.576Z] ========================\\n[2023-05-01T01:10:32.576Z] Growing server foodnstuff\\n[2023-05-01T01:10:32.576Z] Progress: 31092260/45000000\\n[2023-05-01T01:10:32.576Z] ========================\\n[2023-05-01T01:10:34.819Z] ========================\\n[2023-05-01T01:10:34.819Z] Weakening server foodnstuff\\n[2023-05-01T01:10:34.819Z] Progress: 6.616/6\\n[2023-05-01T01:10:34.819Z] ========================\\n[2023-05-01T01:10:37.671Z] ========================\\n[2023-05-01T01:10:37.671Z] Growing server foodnstuff\\n[2023-05-01T01:10:37.671Z] Progress: 39427900/45000000\\n[2023-05-01T01:10:37.671Z] ========================\\n[2023-05-01T01:10:39.912Z] ========================\\n[2023-05-01T01:10:39.912Z] Weakening server foodnstuff\\n[2023-05-01T01:10:39.912Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:10:39.912Z] ========================\\n[2023-05-01T01:10:42.764Z] ========================\\n[2023-05-01T01:10:42.764Z] Growing server foodnstuff\\n[2023-05-01T01:10:42.764Z] Progress: 31105830/45000000\\n[2023-05-01T01:10:42.764Z] ========================\\n[2023-05-01T01:10:45.005Z] ========================\\n[2023-05-01T01:10:45.005Z] Weakening server foodnstuff\\n[2023-05-01T01:10:45.005Z] Progress: 6.612/6\\n[2023-05-01T01:10:45.005Z] ========================\\n[2023-05-01T01:10:47.856Z] ========================\\n[2023-05-01T01:10:47.856Z] Growing server foodnstuff\\n[2023-05-01T01:10:47.856Z] Progress: 31092260/45000000\\n[2023-05-01T01:10:47.856Z] ========================\\n[2023-05-01T01:10:50.097Z] ========================\\n[2023-05-01T01:10:50.097Z] Weakening server foodnstuff\\n[2023-05-01T01:10:50.097Z] Progress: 6.616/6\\n[2023-05-01T01:10:50.097Z] ========================\\n[2023-05-01T01:10:52.948Z] ========================\\n[2023-05-01T01:10:52.948Z] Growing server foodnstuff\\n[2023-05-01T01:10:52.948Z] Progress: 39427900/45000000\\n[2023-05-01T01:10:52.948Z] ========================\\n[2023-05-01T01:10:55.190Z] ========================\\n[2023-05-01T01:10:55.190Z] Weakening server foodnstuff\\n[2023-05-01T01:10:55.190Z] Progress: 6.708/6\\n[2023-05-01T01:10:55.190Z] ========================\\n[2023-05-01T01:10:58.041Z] ========================\\n[2023-05-01T01:10:58.041Z] Growing server foodnstuff\\n[2023-05-01T01:10:58.041Z] Progress: 31109410/45000000\\n[2023-05-01T01:10:58.041Z] ========================\\n[2023-05-01T01:11:00.283Z] ========================\\n[2023-05-01T01:11:00.283Z] Weakening server foodnstuff\\n[2023-05-01T01:11:00.283Z] Progress: 6.612/6\\n[2023-05-01T01:11:00.283Z] ========================\\n[2023-05-01T01:11:03.134Z] ========================\\n[2023-05-01T01:11:03.134Z] Growing server foodnstuff\\n[2023-05-01T01:11:03.134Z] Progress: 39427450/45000000\\n[2023-05-01T01:11:03.134Z] ========================\\n[2023-05-01T01:11:05.374Z] ========================\\n[2023-05-01T01:11:05.374Z] Weakening server foodnstuff\\n[2023-05-01T01:11:05.374Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:11:05.374Z] ========================\\n[2023-05-01T01:11:08.223Z] ========================\\n[2023-05-01T01:11:08.223Z] Growing server foodnstuff\\n[2023-05-01T01:11:08.223Z] Progress: 31105830/45000000\\n[2023-05-01T01:11:08.223Z] ========================\\n[2023-05-01T01:11:10.464Z] ========================\\n[2023-05-01T01:11:10.464Z] Weakening server foodnstuff\\n[2023-05-01T01:11:10.464Z] Progress: 6.612/6\\n[2023-05-01T01:11:10.464Z] ========================\\n[2023-05-01T01:11:13.313Z] ========================\\n[2023-05-01T01:11:13.313Z] Growing server foodnstuff\\n[2023-05-01T01:11:13.313Z] Progress: 31092260/45000000\\n[2023-05-01T01:11:13.313Z] ========================\\n[2023-05-01T01:11:15.554Z] ========================\\n[2023-05-01T01:11:15.554Z] Weakening server foodnstuff\\n[2023-05-01T01:11:15.554Z] Progress: 6.616/6\\n[2023-05-01T01:11:15.554Z] ========================\\n[2023-05-01T01:11:18.403Z] ========================\\n[2023-05-01T01:11:18.403Z] Growing server foodnstuff\\n[2023-05-01T01:11:18.403Z] Progress: 39427900/45000000\\n[2023-05-01T01:11:18.403Z] ========================\\n[2023-05-01T01:11:20.643Z] ========================\\n[2023-05-01T01:11:20.643Z] Weakening server foodnstuff\\n[2023-05-01T01:11:20.643Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:11:20.643Z] ========================\\n[2023-05-01T01:11:23.493Z] ========================\\n[2023-05-01T01:11:23.493Z] Growing server foodnstuff\\n[2023-05-01T01:11:23.493Z] Progress: 31105830/45000000\\n[2023-05-01T01:11:23.493Z] ========================\\n[2023-05-01T01:11:25.733Z] ========================\\n[2023-05-01T01:11:25.733Z] Weakening server foodnstuff\\n[2023-05-01T01:11:25.733Z] Progress: 6.612/6\\n[2023-05-01T01:11:25.733Z] ========================\\n[2023-05-01T01:11:28.582Z] ========================\\n[2023-05-01T01:11:28.582Z] Growing server foodnstuff\\n[2023-05-01T01:11:28.582Z] Progress: 31092260/45000000\\n[2023-05-01T01:11:28.582Z] ========================\\n[2023-05-01T01:11:30.822Z] ========================\\n[2023-05-01T01:11:30.822Z] Weakening server foodnstuff\\n[2023-05-01T01:11:30.822Z] Progress: 6.616/6\\n[2023-05-01T01:11:30.822Z] ========================\\n[2023-05-01T01:11:33.671Z] ========================\\n[2023-05-01T01:11:33.671Z] Growing server foodnstuff\\n[2023-05-01T01:11:33.671Z] Progress: 39427900/45000000\\n[2023-05-01T01:11:33.671Z] ========================\\n[2023-05-01T01:11:35.915Z] ========================\\n[2023-05-01T01:11:35.915Z] Weakening server foodnstuff\\n[2023-05-01T01:11:35.915Z] Progress: 6.708/6\\n[2023-05-01T01:11:35.915Z] ========================\\n[2023-05-01T01:11:38.766Z] ========================\\n[2023-05-01T01:11:38.766Z] Growing server foodnstuff\\n[2023-05-01T01:11:38.766Z] Progress: 31109410/45000000\\n[2023-05-01T01:11:38.766Z] ========================\\n[2023-05-01T01:11:41.006Z] ========================\\n[2023-05-01T01:11:41.006Z] Weakening server foodnstuff\\n[2023-05-01T01:11:41.006Z] Progress: 6.612/6\\n[2023-05-01T01:11:41.006Z] ========================\\n[2023-05-01T01:11:43.854Z] ========================\\n[2023-05-01T01:11:43.854Z] Growing server foodnstuff\\n[2023-05-01T01:11:43.854Z] Progress: 39427450/45000000\\n[2023-05-01T01:11:43.854Z] ========================\\n[2023-05-01T01:11:46.094Z] ========================\\n[2023-05-01T01:11:46.094Z] Weakening server foodnstuff\\n[2023-05-01T01:11:46.094Z] Progress: 6.688000000000001/6\\n[2023-05-01T01:11:46.094Z] ========================\\n[2023-05-01T01:11:48.945Z] ========================\\n[2023-05-01T01:11:48.945Z] Growing server foodnstuff\\n[2023-05-01T01:11:48.945Z] Progress: 31105830/45000000\\n[2023-05-01T01:11:48.945Z] ========================\\n[2023-05-01T01:11:51.185Z] ========================\\n[2023-05-01T01:11:51.185Z] Weakening server foodnstuff\\n[2023-05-01T01:11:51.185Z] Progress: 6.612/6\\n[2023-05-01T01:11:51.185Z] ========================\\n[2023-05-01T01:11:54.034Z] ========================\\n[2023-05-01T01:11:54.034Z] Growing server foodnstuff\\n[2023-05-01T01:11:54.034Z] Progress: 31092260/45000000\\n[2023-05-01T01:11:54.034Z] ========================\\n[2023-05-01T01:11:56.275Z] ========================\\n[2023-05-01T01:11:56.275Z] Weakening server foodnstuff\\n[2023-05-01T01:11:56.275Z] Progress: 6.616/6\\n[2023-05-01T01:11:56.275Z] ========================\\n[2023-05-01T01:11:59.124Z] ========================\\n[2023-05-01T01:11:59.124Z] Growing server foodnstuff\\n[2023-05-01T01:11:59.124Z] Progress: 39427900/45000000\\n[2023-05-01T01:11:59.124Z] ========================\\n\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-434642.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[75,[1,6,7,8,9,11,13,14,16]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"44.0.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"ecorp\",\"moduleSequenceNumber\":12265,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"ecorp\",\"moduleSequenceNumber\":12494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"ecorp\",\"moduleSequenceNumber\":12870,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":34109710772,\"moneyMax\":852742769300,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1389,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"78.6.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"megacorp\",\"moduleSequenceNumber\":12261,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"megacorp\",\"moduleSequenceNumber\":12490,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"megacorp\",\"moduleSequenceNumber\":12866,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":58740169301,\"moneyMax\":1468504232525,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1219,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"66.7.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"b-and-a\",\"moduleSequenceNumber\":12257,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"b-and-a\",\"moduleSequenceNumber\":12486,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"b-and-a\",\"moduleSequenceNumber\":12862,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"omnitek\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":17345453635,\"moneyMax\":433636340875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":954,\"serverGrowth\":60}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"65.4.8.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"blade\",\"moduleSequenceNumber\":12283,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"blade\",\"moduleSequenceNumber\":12512,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"blade\",\"moduleSequenceNumber\":12888,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":34426655666,\"moneyMax\":860666391650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1152,\"serverGrowth\":84}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"19.6.1.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"nwo\",\"moduleSequenceNumber\":12295,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"nwo\",\"moduleSequenceNumber\":12524,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"nwo\",\"moduleSequenceNumber\":12900,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":34606332155,\"moneyMax\":865158303875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1017,\"serverGrowth\":65}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"28.2.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"clarkinc\",\"moduleSequenceNumber\":12253,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"clarkinc\",\"moduleSequenceNumber\":12482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"clarkinc\",\"moduleSequenceNumber\":12858,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"4sigma\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":16045703884,\"moneyMax\":401142597100,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1159,\"serverGrowth\":67}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"6.8.9.9\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omnitek\",\"moduleSequenceNumber\":12249,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"omnitek\",\"moduleSequenceNumber\":12478,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"omnitek\",\"moduleSequenceNumber\":12854,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"stormtech\",\"b-and-a\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":13471749263,\"moneyMax\":336793731575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":979,\"serverGrowth\":98}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"48.1.0.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"4sigma\",\"moduleSequenceNumber\":12251,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"4sigma\",\"moduleSequenceNumber\":12480,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"4sigma\",\"moduleSequenceNumber\":12856,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"stormtech\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":19376423266,\"moneyMax\":484410581650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1174,\"serverGrowth\":85}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"74.7.1.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":12281,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":12510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":12886,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":25760171936,\"moneyMax\":644004298400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1123,\"serverGrowth\":91}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"19.8.7.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":12277,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":12506,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":12882,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"titan-labs\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":97,\"minDifficulty\":32,\"moneyAvailable\":1553765024,\"moneyMax\":38844125600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1233,\"serverGrowth\":83}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"76.2.9.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":12255,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":12484,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":12860,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1507,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"3.5.7.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"stormtech\",\"moduleSequenceNumber\":12247,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"stormtech\",\"moduleSequenceNumber\":12476,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"stormtech\",\"moduleSequenceNumber\":12852,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1161680915,\"moneyMax\":29042022875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":897,\"serverGrowth\":81}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"59.3.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"defcomm\",\"moduleSequenceNumber\":12285,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"defcomm\",\"moduleSequenceNumber\":12514,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"defcomm\",\"moduleSequenceNumber\":12890,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":909293970,\"moneyMax\":22732349250,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":947,\"serverGrowth\":55}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"96.4.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"infocomm\",\"moduleSequenceNumber\":12241,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"infocomm\",\"moduleSequenceNumber\":12470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"infocomm\",\"moduleSequenceNumber\":12846,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zeus-med\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":717640104,\"moneyMax\":17941002600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":946,\"serverGrowth\":37}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"33.8.4.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"helios\",\"moduleSequenceNumber\":12291,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"helios\",\"moduleSequenceNumber\":12520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"helios\",\"moduleSequenceNumber\":12896,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"microdyne\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":613408832,\"moneyMax\":15335220800,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":848,\"serverGrowth\":77}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"14.8.8.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"vitalife\",\"moduleSequenceNumber\":12279,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"vitalife\",\"moduleSequenceNumber\":12508,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"vitalife\",\"moduleSequenceNumber\":12884,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":796503902,\"moneyMax\":19912597550,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":796,\"serverGrowth\":70}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"64.3.9.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"icarus\",\"moduleSequenceNumber\":12269,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"icarus\",\"moduleSequenceNumber\":12498,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"icarus\",\"moduleSequenceNumber\":12874,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"deltaone\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":998337256,\"moneyMax\":24958431400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":890,\"serverGrowth\":88}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"61.7.2.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"univ-energy\",\"moduleSequenceNumber\":12271,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"univ-energy\",\"moduleSequenceNumber\":12500,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"univ-energy\",\"moduleSequenceNumber\":12876,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1140801511,\"moneyMax\":28520037775,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":841,\"serverGrowth\":85}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"73.8.8.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"titan-labs\",\"moduleSequenceNumber\":12275,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"titan-labs\",\"moduleSequenceNumber\":12504,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"titan-labs\",\"moduleSequenceNumber\":12880,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":896684806,\"moneyMax\":22417120150,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":844,\"serverGrowth\":60}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"17.6.9.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"microdyne\",\"moduleSequenceNumber\":12289,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"microdyne\",\"moduleSequenceNumber\":12518,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"microdyne\",\"moduleSequenceNumber\":12894,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":625053028,\"moneyMax\":15626325700,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":814,\"serverGrowth\":85}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"48.1.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":12287,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":12516,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":12892,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"defcomm\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":821130259,\"moneyMax\":20528256475,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":866,\"serverGrowth\":74}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"69.2.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":12301,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":12532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":12908,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":777051942,\"moneyMax\":19426298550,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":858,\"serverGrowth\":80}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"51.3.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"aerocorp\",\"moduleSequenceNumber\":12229,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"aerocorp\",\"moduleSequenceNumber\":12458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"aerocorp\",\"moduleSequenceNumber\":12834,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"aevum-police\",\"omnia\",\"deltaone\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1061469948,\"moneyMax\":26536748700,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":859,\"serverGrowth\":60}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"15.2.8.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[826823850,12,18,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2086.867401992744,\"onlineMoneyMade\":826823850,\"onlineRunningTime\":191.20999999999768,\"pid\":1218,\"ramUsage\":2.4,\"server\":\"omnia\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4e6a31e5-6215-4d4f-9708-831c401202f2\",\"moduleSequenceNumber\":21674}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[1265177809,21,7,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2220.4269157202793,\"onlineMoneyMade\":1265177809,\"onlineRunningTime\":191.20999999999768,\"pid\":1219,\"ramUsage\":2.4,\"server\":\"omnia\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4e6a31e5-6215-4d4f-9708-831c401202f2\",\"moduleSequenceNumber\":21674}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4e6a31e5-6215-4d4f-9708-831c401202f2\",\"moduleSequenceNumber\":21674}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omnia\",\"moduleSequenceNumber\":21674,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"omnia\",\"moduleSequenceNumber\":12460,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"omnia\",\"moduleSequenceNumber\":12836,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"aerocorp\",\"defcomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":984830381,\"moneyMax\":24620759525,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":899,\"serverGrowth\":69}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"93.1.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zb-def\",\"moduleSequenceNumber\":12273,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"zb-def\",\"moduleSequenceNumber\":12502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"zb-def\",\"moduleSequenceNumber\":12878,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"icarus\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":18,\"minDifficulty\":18,\"moneyAvailable\":25799187375,\"moneyMax\":25799187375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":807,\"serverGrowth\":65}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"54.1.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":12243,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":12472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":12848,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":812003797,\"moneyMax\":20300094925,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":829,\"serverGrowth\":70}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"84.4.5.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":62.39999999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[1096922505,14,7,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1723.752474046006,\"onlineMoneyMade\":1096922505,\"onlineRunningTime\":191.20999999999768,\"pid\":1222,\"ramUsage\":2.4,\"server\":\"solaris\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c46dc884-7119-479a-bd5c-1163cb2712bf\",\"moduleSequenceNumber\":30946}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[4531526470,20,10,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2462.503534351437,\"onlineMoneyMade\":4531526470,\"onlineRunningTime\":191.20999999999768,\"pid\":1223,\"ramUsage\":2.4,\"server\":\"solaris\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c46dc884-7119-479a-bd5c-1163cb2712bf\",\"moduleSequenceNumber\":30946}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[2141438904,18,9,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2366.507633859771,\"onlineMoneyMade\":2141438904,\"onlineRunningTime\":191.20999999999768,\"pid\":1224,\"ramUsage\":2.4,\"server\":\"solaris\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c46dc884-7119-479a-bd5c-1163cb2712bf\",\"moduleSequenceNumber\":30946}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c46dc884-7119-479a-bd5c-1163cb2712bf\",\"moduleSequenceNumber\":30946}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"solaris\",\"moduleSequenceNumber\":30946,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"solaris\",\"moduleSequenceNumber\":12466,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"solaris\",\"moduleSequenceNumber\":12842,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"unitalife\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":791232975,\"moneyMax\":19780824375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":813,\"serverGrowth\":74}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"77.4.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"deltaone\",\"moduleSequenceNumber\":12233,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"deltaone\",\"moduleSequenceNumber\":12462,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"deltaone\",\"moduleSequenceNumber\":12838,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1605625314,\"moneyMax\":40140632850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":843,\"serverGrowth\":70}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"74.6.2.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"global-pharm\",\"moduleSequenceNumber\":12303,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"global-pharm\",\"moduleSequenceNumber\":12534,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"global-pharm\",\"moduleSequenceNumber\":12910,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1563076367,\"moneyMax\":39076909175,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":802,\"serverGrowth\":80}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"29.0.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"nova-med\",\"moduleSequenceNumber\":12267,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"nova-med\",\"moduleSequenceNumber\":12496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"nova-med\",\"moduleSequenceNumber\":12872,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":21,\"minDifficulty\":21,\"moneyAvailable\":28295695025,\"moneyMax\":28295695025,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":795,\"serverGrowth\":79}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-321785.cct\",\"type\":\"Array Jumping Game\",\"data\":[10,2,0,9,8,0,0,0,10,6,2,0],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"96.7.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zeus-med\",\"moduleSequenceNumber\":12239,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"zeus-med\",\"moduleSequenceNumber\":12468,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"zeus-med\",\"moduleSequenceNumber\":12844,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"unitalife\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":1384544850,\"moneyMax\":34613621250,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":840,\"serverGrowth\":80}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"24.0.3.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":14.399999999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[348211083,6,3,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":713.7086514815184,\"onlineMoneyMade\":348211083,\"onlineRunningTime\":191.20999999999768,\"pid\":1220,\"ramUsage\":2.4,\"server\":\"unitalife\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///9110aadb-8eec-4cab-884b-a38f8d0d692f\",\"moduleSequenceNumber\":30945}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[687225768,9,0,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":738.7510603054311,\"onlineMoneyMade\":687225768,\"onlineRunningTime\":191.20999999999768,\"pid\":1221,\"ramUsage\":2.4,\"server\":\"unitalife\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///9110aadb-8eec-4cab-884b-a38f8d0d692f\",\"moduleSequenceNumber\":30945}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///9110aadb-8eec-4cab-884b-a38f8d0d692f\",\"moduleSequenceNumber\":30945}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"unitalife\",\"moduleSequenceNumber\":30945,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"unitalife\",\"moduleSequenceNumber\":12464,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"unitalife\",\"moduleSequenceNumber\":12840,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"aerocorp\",\"solaris\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":1025556639,\"moneyMax\":25638915975,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":795,\"serverGrowth\":77}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"57.2.0.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":12297,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":12526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":12902,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zb-institute\",\"galactic-cyber\",\"global-pharm\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":748264803,\"moneyMax\":18706620075,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":724,\"serverGrowth\":61}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"51.7.3.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rho-construction\",\"moduleSequenceNumber\":12176,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"rho-construction\",\"moduleSequenceNumber\":12528,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"rho-construction\",\"moduleSequenceNumber\":12904,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":16.04,\"minDifficulty\":16,\"moneyAvailable\":13221335821.999039,\"moneyMax\":17478984825,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":513,\"serverGrowth\":44}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"9.6.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":12299,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":12530,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":12906,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":22,\"minDifficulty\":22,\"moneyAvailable\":637394768,\"moneyMax\":15934869200,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":594,\"serverGrowth\":51}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"0.7.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":14.399999999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[186612684,8,4,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":801.3570823652137,\"onlineMoneyMade\":186612684,\"onlineRunningTime\":191.20999999999768,\"pid\":1216,\"ramUsage\":2.4,\"server\":\"aevum-police\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///791cfea3-bf27-430b-8645-5afba94b591e\",\"moduleSequenceNumber\":21673}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[817062500,12,8,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1391.2449346618291,\"onlineMoneyMade\":817062500,\"onlineRunningTime\":191.20999999999768,\"pid\":1217,\"ramUsage\":2.4,\"server\":\"aevum-police\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///791cfea3-bf27-430b-8645-5afba94b591e\",\"moduleSequenceNumber\":21673}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///791cfea3-bf27-430b-8645-5afba94b591e\",\"moduleSequenceNumber\":21673}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"aevum-police\",\"moduleSequenceNumber\":21673,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"aevum-police\",\"moduleSequenceNumber\":12456,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"aevum-police\",\"moduleSequenceNumber\":12832,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":216558490,\"moneyMax\":5413962250,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":433,\"serverGrowth\":50}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"47.3.6.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":12202,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":12564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":12940,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":47,\"hackDifficulty\":19.029999999999994,\"minDifficulty\":16,\"moneyAvailable\":3069998708,\"moneyMax\":4683387600,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":405,\"serverGrowth\":37}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"81.3.8.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[63784388,72,53,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3478.112336654577,\"onlineMoneyMade\":63784388,\"onlineRunningTime\":191.20999999999768,\"pid\":1202,\"ramUsage\":2.4,\"server\":\"zb-institute\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///8b10f22f-c949-4886-923e-c9e18f5a2a6a\",\"moduleSequenceNumber\":21672}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[741147950,400,230,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":21912.107720923796,\"onlineMoneyMade\":741147950,\"onlineRunningTime\":191.20999999999768,\"pid\":1203,\"ramUsage\":2.4,\"server\":\"zb-institute\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///8b10f22f-c949-4886-923e-c9e18f5a2a6a\",\"moduleSequenceNumber\":21672}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[133728496,46,22,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3311.1629444951536,\"onlineMoneyMade\":133728496,\"onlineRunningTime\":191.20999999999768,\"pid\":1204,\"ramUsage\":2.4,\"server\":\"zb-institute\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///8b10f22f-c949-4886-923e-c9e18f5a2a6a\",\"moduleSequenceNumber\":21672}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///8b10f22f-c949-4886-923e-c9e18f5a2a6a\",\"moduleSequenceNumber\":21672}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zb-institute\",\"moduleSequenceNumber\":21672,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"zb-institute\",\"moduleSequenceNumber\":12452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"zb-institute\",\"moduleSequenceNumber\":12828,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\",\"rho-construction\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":891066726,\"moneyMax\":22276668150,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":729,\"serverGrowth\":82}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"92.9.4.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"summit-uni\",\"moduleSequenceNumber\":12204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"summit-uni\",\"moduleSequenceNumber\":12566,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"summit-uni\",\"moduleSequenceNumber\":12942,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":19.08,\"minDifficulty\":18,\"moneyAvailable\":6390885002,\"moneyMax\":8738786175,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":432,\"serverGrowth\":40}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"71.6.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"syscore\",\"moduleSequenceNumber\":12307,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"syscore\",\"moduleSequenceNumber\":12540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"syscore\",\"moduleSequenceNumber\":12916,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":22,\"minDifficulty\":22,\"moneyAvailable\":10271670225,\"moneyMax\":10271670225,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":564,\"serverGrowth\":67}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"39.7.3.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"catalyst\",\"moduleSequenceNumber\":12200,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"catalyst\",\"moduleSequenceNumber\":12562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"catalyst\",\"moduleSequenceNumber\":12938,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":460995708,\"moneyMax\":11524892700,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":445,\"serverGrowth\":32}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"20.2.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":31.199999999999996,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[788087532,32,12,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2693.450193505301,\"onlineMoneyMade\":788087532,\"onlineRunningTime\":191.20999999999768,\"pid\":1200,\"ramUsage\":2.4,\"server\":\"the-hub\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///77aaae9a-d20b-41f4-91b4-3ea4461f27c7\",\"moduleSequenceNumber\":12222}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[710146755,648,477,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31303.01102989108,\"onlineMoneyMade\":710146755,\"onlineRunningTime\":191.20999999999768,\"pid\":1201,\"ramUsage\":2.4,\"server\":\"the-hub\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///77aaae9a-d20b-41f4-91b4-3ea4461f27c7\",\"moduleSequenceNumber\":12222}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///77aaae9a-d20b-41f4-91b4-3ea4461f27c7\",\"moduleSequenceNumber\":12222}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"the-hub\",\"moduleSequenceNumber\":12222,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"the-hub\",\"moduleSequenceNumber\":12450,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"the-hub\",\"moduleSequenceNumber\":12826,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"omega-net\",\"zb-institute\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":14.011999999999997,\"minDifficulty\":13,\"moneyAvailable\":4804665925,\"moneyMax\":4804665925,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":320,\"serverGrowth\":55}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"82.7.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"computek\",\"moduleSequenceNumber\":12192,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"computek\",\"moduleSequenceNumber\":12554,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"computek\",\"moduleSequenceNumber\":12930,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":21,\"minDifficulty\":21,\"moneyAvailable\":5697186300,\"moneyMax\":5697186300,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":371,\"serverGrowth\":50}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"83.3.3.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"netlink\",\"moduleSequenceNumber\":12178,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"netlink\",\"moduleSequenceNumber\":12538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"netlink\",\"moduleSequenceNumber\":12914,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"phantasy\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":379,\"serverGrowth\":55}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"56.6.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":12194,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":12556,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":12932,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\",\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":38,\"hackDifficulty\":15.775999999999993,\"minDifficulty\":13,\"moneyAvailable\":1238360916,\"moneyMax\":1760935350,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":284,\"serverGrowth\":63}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"46.3.7.3\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":12216,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":12578,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"n00dles\",\"moduleSequenceNumber\":12954,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":2.4640000000000013,\"minDifficulty\":1,\"moneyAvailable\":1062220,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"95.2.6.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":12218,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":12602,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":13006,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":30768380,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"11.5.8.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":12180,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":12542,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":12918,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":36297002,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"4.9.7.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":12184,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":12546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"joesguns\",\"moduleSequenceNumber\":12922,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":7.203999999999999,\"minDifficulty\":5,\"moneyAvailable\":39075010,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"38.1.1.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":12210,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":12572,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"zer0\",\"moduleSequenceNumber\":12948,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"harakiri-sushi\",\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":9.039999999999997,\"minDifficulty\":8,\"moneyAvailable\":122220336,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-290360-NewTokyo.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"0001000011111111\",\"reward\":{\"name\":\"New Tokyo\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"62.4.2.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":12182,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":12544,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"nectar-net\",\"moduleSequenceNumber\":12920,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7.851999999999999,\"minDifficulty\":7,\"moneyAvailable\":43246670,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"97.7.2.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":12212,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":12574,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"neo-net\",\"moduleSequenceNumber\":12950,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8.807999999999998,\"minDifficulty\":8,\"moneyAvailable\":99769300,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"37.3.9.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"silver-helix\",\"moduleSequenceNumber\":12190,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"silver-helix\",\"moduleSequenceNumber\":12552,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"silver-helix\",\"moduleSequenceNumber\":12928,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"max-hardware\",\"computek\",\"johnson-ortho\",\"crush-fitness\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":751700030,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"57.0.4.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":12186,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":12548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":12924,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":7.139999999999999,\"minDifficulty\":5,\"moneyAvailable\":75000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"3.8.1.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":12208,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":12570,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":12946,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":63400380,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"91.6.7.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[723451780,760,600,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":37841.86222280176,\"onlineMoneyMade\":723451780,\"onlineRunningTime\":191.20999999999768,\"pid\":1196,\"ramUsage\":2.4,\"server\":\"phantasy\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///40d161ac-a2eb-4ad5-9050-77b995dbc743\",\"moduleSequenceNumber\":12220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[548718138,57,27,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3505.93723534781,\"onlineMoneyMade\":548718138,\"onlineRunningTime\":191.20999999999768,\"pid\":1197,\"ramUsage\":2.4,\"server\":\"phantasy\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///40d161ac-a2eb-4ad5-9050-77b995dbc743\",\"moduleSequenceNumber\":12220}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///40d161ac-a2eb-4ad5-9050-77b995dbc743\",\"moduleSequenceNumber\":12220}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"phantasy\",\"moduleSequenceNumber\":12220,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"phantasy\",\"moduleSequenceNumber\":12446,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"phantasy\",\"moduleSequenceNumber\":12822,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"CSEC\",\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":8.120000000000001,\"minDifficulty\":7,\"moneyAvailable\":600000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-463043-NewTokyo.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":85513233773,\"reward\":{\"name\":\"New Tokyo\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"12.3.3.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":12188,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":12550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"max-hardware\",\"moduleSequenceNumber\":12926,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.447999999999998,\"minDifficulty\":5,\"moneyAvailable\":158343740,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"58.5.5.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[1163693580,112,70,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7596.197343253588,\"onlineMoneyMade\":1163693580,\"onlineRunningTime\":191.20999999999768,\"pid\":1198,\"ramUsage\":2.4,\"server\":\"omega-net\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///1d153b66-f850-4770-985e-4453892d3f91\",\"moduleSequenceNumber\":12221}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1323504120,48,18,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4040.175290257951,\"onlineMoneyMade\":1323504120,\"onlineRunningTime\":191.20999999999768,\"pid\":1199,\"ramUsage\":2.4,\"server\":\"omega-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///1d153b66-f850-4770-985e-4453892d3f91\",\"moduleSequenceNumber\":12221}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///1d153b66-f850-4770-985e-4453892d3f91\",\"moduleSequenceNumber\":12221}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"omega-net\",\"moduleSequenceNumber\":12221,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"omega-net\",\"moduleSequenceNumber\":12448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"omega-net\",\"moduleSequenceNumber\":12824,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"CSEC\",\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":34,\"hackDifficulty\":13.703999999999997,\"minDifficulty\":11,\"moneyAvailable\":1172575300,\"moneyMax\":1694967000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":220,\"serverGrowth\":37}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"52.1.7.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":12196,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":12558,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":12934,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":38,\"hackDifficulty\":13,\"minDifficulty\":13,\"moneyAvailable\":804928155,\"moneyMax\":1168460925,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":229,\"serverGrowth\":28}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"97.4.2.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":12214,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":12576,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"iron-gym\",\"moduleSequenceNumber\":12952,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":13.807999999999996,\"minDifficulty\":10,\"moneyAvailable\":406865670,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"21.2.4.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":12206,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":12568,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":12944,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":16.028,\"minDifficulty\":16,\"moneyAvailable\":4506187079.184396,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":491,\"serverGrowth\":27}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"33.1.0.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":12259,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":12488,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":12864,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":22500000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":970,\"serverGrowth\":52}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-83835.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"kO3Xr8O3Xr8OnxuUA3OnYR0uUA3OUA3pJ3OJZ44Zt4424424424403Ef24403Effxy33EffxyKz33EJ33EJE\",\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"54.2.0.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":12305,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":12536,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":12912,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":22.56,\"minDifficulty\":19,\"moneyAvailable\":11250000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":678,\"serverGrowth\":50}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-121454.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[13,19],[13,23],[1,9],[16,21],[22,31],[21,31],[22,31],[15,22],[19,26]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"38.5.9.5\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":26.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[206462269,2,1,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":262.94529265108565,\"onlineMoneyMade\":206462269,\"onlineRunningTime\":191.20999999999768,\"pid\":1225,\"ramUsage\":2.4,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///e7baa9b1-c8ed-4496-b4e2-1d1444bb4b75\",\"moduleSequenceNumber\":40217}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,0,10,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":932.1341062234253,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.20999999999768,\"pid\":1226,\"ramUsage\":2.4,\"server\":\"run4theh111z\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///e7baa9b1-c8ed-4496-b4e2-1d1444bb4b75\",\"moduleSequenceNumber\":40217}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///e7baa9b1-c8ed-4496-b4e2-1d1444bb4b75\",\"moduleSequenceNumber\":40217}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":40217,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":12474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":12850,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"infocomm\",\"stormtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":540,\"serverGrowth\":1}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"0.2.6.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":254.39999999999998,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[529462240,160,96,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12465.55461456999,\"onlineMoneyMade\":529462240,\"onlineRunningTime\":191.20999999999768,\"pid\":1205,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":8,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[36138380,1050,520,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":24026.800021609735,\"onlineMoneyMade\":36138380,\"onlineRunningTime\":191.20999999999768,\"pid\":1206,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[629689580,500,300,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":33389.87843188393,\"onlineMoneyMade\":629689580,\"onlineRunningTime\":191.20999999999768,\"pid\":1207,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[760124880,650,440,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":37911.42446953482,\"onlineMoneyMade\":760124880,\"onlineRunningTime\":191.20999999999768,\"pid\":1208,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[613791970,440,290,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":25390.220057578354,\"onlineMoneyMade\":613791970,\"onlineRunningTime\":191.20999999999768,\"pid\":1209,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1185406360,260,150,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14260.260580283757,\"onlineMoneyMade\":1185406360,\"onlineRunningTime\":191.20999999999768,\"pid\":1210,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[1893920300,100,50,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8347.469607970976,\"onlineMoneyMade\":1893920300,\"onlineRunningTime\":191.20999999999768,\"pid\":1211,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[606281770,270,160,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20938.23626666053,\"onlineMoneyMade\":606281770,\"onlineRunningTime\":191.20999999999768,\"pid\":1212,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[1120947300,130,80,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11686.45745115936,\"onlineMoneyMade\":1120947300,\"onlineRunningTime\":191.20999999999768,\"pid\":1213,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1103218800,60,20,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5342.380549101425,\"onlineMoneyMade\":1103218800,\"onlineRunningTime\":191.20999999999768,\"pid\":1214,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[861144800,32,16,0]},\"filename\":\"hack.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3205.428329460855,\"onlineMoneyMade\":861144800,\"onlineRunningTime\":191.20999999999768,\"pid\":1215,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":8,\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08387b5d-fd90-43ae-b2ba-469ab21e533a\",\"moduleSequenceNumber\":12223}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":12223,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":12454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":12830,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":364,\"serverGrowth\":1}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"33.6.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":12198,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":12560,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":12936,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":215,\"serverGrowth\":1}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"94.9.0.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\".\",\"moduleSequenceNumber\":12293,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\".\",\"moduleSequenceNumber\":12522,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\".\",\"moduleSequenceNumber\":12898,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"helios\",\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":536,\"serverGrowth\":1}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"12.0.7.2\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///b6ea88ab-26fb-4aaf-858d-0333715b80cc\",\"moduleSequenceNumber\":12219}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"CSEC\",\"moduleSequenceNumber\":12219,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"CSEC\",\"moduleSequenceNumber\":12444,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"CSEC\",\"moduleSequenceNumber\":12820,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"foodnstuff\",\"phantasy\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":52,\"serverGrowth\":1}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"38.2.8.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"The-Cave\",\"moduleSequenceNumber\":12263,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"The-Cave\",\"moduleSequenceNumber\":12492,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"The-Cave\",\"moduleSequenceNumber\":12868,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"60.4.3.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"91.3.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"darkweb\",\"moduleSequenceNumber\":12309,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"darkweb\",\"moduleSequenceNumber\":12604,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"darkweb\",\"moduleSequenceNumber\":13008,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv\",\"httpPortOpen\":false,\"ip\":\"30.0.8.1\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"max-hardware\":[0,0,35424,0],\"silver-helix\":[0,0,35424,0],\"johnson-ortho\":[0,0,35424,0],\"crush-fitness\":[0,0,35424,0],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,35424,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"iron-gym\":[0,0,35424,0],\"n00dles\":[0,0,35424,0],\"foodnstuff\":[0,0,1168992,1204416],\"summit-uni\":[0,0,0,35424],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,35424,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":172935663.1242012,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":924,\"ramUsage\":3.7,\"server\":\"pserv\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///0f50ca12-3a38-43d2-b98c-074189ec96dd\",\"moduleSequenceNumber\":11203}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///5bb8dd92-7f7a-43e6-bcf8-fcd1f2e242ab\",\"moduleSequenceNumber\":11002}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv\",\"moduleSequenceNumber\":11002,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///0f50ca12-3a38-43d2-b98c-074189ec96dd\",\"moduleSequenceNumber\":11203}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv\",\"moduleSequenceNumber\":11203,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv\",\"moduleSequenceNumber\":12956,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-0\",\"httpPortOpen\":false,\"ip\":\"52.3.8.1\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"max-hardware\":[0,0,35424,0],\"silver-helix\":[0,0,35424,0],\"johnson-ortho\":[0,0,35424,0],\"crush-fitness\":[0,0,35424,0],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,35424,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"iron-gym\":[0,0,35424,0],\"n00dles\":[0,0,35424,0],\"foodnstuff\":[0,0,1168992,1204416],\"summit-uni\":[0,0,0,35424],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,35424,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":172935663.1242012,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":925,\"ramUsage\":3.7,\"server\":\"pserv-0\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///d8edb38a-d84c-4e01-be92-6551ff129f91\",\"moduleSequenceNumber\":11204}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///6bc3ae17-bee1-47f1-b275-f8fc855d0e6e\",\"moduleSequenceNumber\":11005}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-0\",\"moduleSequenceNumber\":11005,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///d8edb38a-d84c-4e01-be92-6551ff129f91\",\"moduleSequenceNumber\":11204}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-0\",\"moduleSequenceNumber\":11204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-0\",\"moduleSequenceNumber\":12958,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-1\",\"httpPortOpen\":false,\"ip\":\"64.6.8.5\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"max-hardware\":[0,0,35424,0],\"silver-helix\":[0,0,35424,0],\"johnson-ortho\":[0,0,35424,0],\"crush-fitness\":[0,0,35424,0],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,35424,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"iron-gym\":[0,0,35424,0],\"n00dles\":[0,0,35424,0],\"foodnstuff\":[0,0,602208,637632],\"summit-uni\":[0,0,0,35424],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,35424,70848],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":141197114.5200446,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":926,\"ramUsage\":3.7,\"server\":\"pserv-1\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///5a7a08f7-b52a-4c9d-b260-05676bbf8cfb\",\"moduleSequenceNumber\":11205}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///3353dad6-f516-4ea3-84c8-d2c36e9ca10a\",\"moduleSequenceNumber\":11008}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-1\",\"moduleSequenceNumber\":11008,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///5a7a08f7-b52a-4c9d-b260-05676bbf8cfb\",\"moduleSequenceNumber\":11205}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-1\",\"moduleSequenceNumber\":11205,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-1\",\"moduleSequenceNumber\":12960,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2\",\"httpPortOpen\":false,\"ip\":\"95.5.6.0\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,35424],\"silver-helix\":[0,0,35424,0],\"johnson-ortho\":[0,0,35424,0],\"crush-fitness\":[0,0,35424,0],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,35424,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,35424,35424],\"foodnstuff\":[0,0,0,35424],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":107487227.49326958,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":927,\"ramUsage\":3.7,\"server\":\"pserv-2\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///859b2f5f-227e-418d-a088-14f4b1d98bd5\",\"moduleSequenceNumber\":11206}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///b5918e99-405d-49db-aa3b-b0f212ba9db8\",\"moduleSequenceNumber\":11011}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-2\",\"moduleSequenceNumber\":11011,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///859b2f5f-227e-418d-a088-14f4b1d98bd5\",\"moduleSequenceNumber\":11206}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-2\",\"moduleSequenceNumber\":11206,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-2\",\"moduleSequenceNumber\":12962,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-3\",\"httpPortOpen\":false,\"ip\":\"66.8.8.8\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,35424],\"silver-helix\":[0,0,35424,0],\"johnson-ortho\":[0,0,35424,0],\"crush-fitness\":[0,0,35424,0],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,35424,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,35424,35424],\"foodnstuff\":[0,0,0,35424],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":107487227.49326958,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":928,\"ramUsage\":3.7,\"server\":\"pserv-3\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9c34132e-7f94-423c-958e-2178ee879d60\",\"moduleSequenceNumber\":11207}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///2432d5fb-29b9-4cb2-aa1b-8a28c7fc55c0\",\"moduleSequenceNumber\":11014}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-3\",\"moduleSequenceNumber\":11014,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9c34132e-7f94-423c-958e-2178ee879d60\",\"moduleSequenceNumber\":11207}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-3\",\"moduleSequenceNumber\":11207,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-3\",\"moduleSequenceNumber\":12964,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-4\",\"httpPortOpen\":false,\"ip\":\"50.4.4.7\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":929,\"ramUsage\":3.7,\"server\":\"pserv-4\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///c3ab535c-2019-43fb-aa3d-1ac533bbe5e6\",\"moduleSequenceNumber\":11208}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4f972f88-2525-4b82-a2e4-01307506a606\",\"moduleSequenceNumber\":11017}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-4\",\"moduleSequenceNumber\":11017,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///c3ab535c-2019-43fb-aa3d-1ac533bbe5e6\",\"moduleSequenceNumber\":11208}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-4\",\"moduleSequenceNumber\":11208,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-4\",\"moduleSequenceNumber\":12966,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-5\",\"httpPortOpen\":false,\"ip\":\"65.4.3.8\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":930,\"ramUsage\":3.7,\"server\":\"pserv-5\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///f2558bf1-c6aa-407c-899c-51637e0366ce\",\"moduleSequenceNumber\":11209}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c8e896e8-b2d0-4aa6-a98d-90e8ce46ee9b\",\"moduleSequenceNumber\":11020}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-5\",\"moduleSequenceNumber\":11020,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///f2558bf1-c6aa-407c-899c-51637e0366ce\",\"moduleSequenceNumber\":11209}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-5\",\"moduleSequenceNumber\":11209,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-5\",\"moduleSequenceNumber\":12968,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-6\",\"httpPortOpen\":false,\"ip\":\"75.3.4.0\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":931,\"ramUsage\":3.7,\"server\":\"pserv-6\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1d9bece7-324f-4a6c-9ae1-ed0f6b7a5520\",\"moduleSequenceNumber\":11210}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///88474e8b-3ea2-459c-aa53-028e66e6e177\",\"moduleSequenceNumber\":11023}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-6\",\"moduleSequenceNumber\":11023,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1d9bece7-324f-4a6c-9ae1-ed0f6b7a5520\",\"moduleSequenceNumber\":11210}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-6\",\"moduleSequenceNumber\":11210,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-6\",\"moduleSequenceNumber\":12970,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-7\",\"httpPortOpen\":false,\"ip\":\"77.5.7.3\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":932,\"ramUsage\":3.7,\"server\":\"pserv-7\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///f6bbdcfa-0fe5-49bd-baed-50754483706b\",\"moduleSequenceNumber\":11211}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///47220de9-ceac-4af6-b0f3-c3ce3d51a380\",\"moduleSequenceNumber\":11026}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-7\",\"moduleSequenceNumber\":11026,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///f6bbdcfa-0fe5-49bd-baed-50754483706b\",\"moduleSequenceNumber\":11211}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-7\",\"moduleSequenceNumber\":11211,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-7\",\"moduleSequenceNumber\":12972,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-8\",\"httpPortOpen\":false,\"ip\":\"14.5.6.2\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":933,\"ramUsage\":3.7,\"server\":\"pserv-8\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///0ea0d884-8e19-4809-b164-b4d8506a69f2\",\"moduleSequenceNumber\":11212}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///e314b802-8dc5-4928-8a89-c779a788150e\",\"moduleSequenceNumber\":11029}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-8\",\"moduleSequenceNumber\":11029,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///0ea0d884-8e19-4809-b164-b4d8506a69f2\",\"moduleSequenceNumber\":11212}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-8\",\"moduleSequenceNumber\":11212,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-8\",\"moduleSequenceNumber\":12974,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-9\",\"httpPortOpen\":false,\"ip\":\"28.0.7.2\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":934,\"ramUsage\":3.7,\"server\":\"pserv-9\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///6bea92a0-d5b6-482c-beb0-3484a00bb23b\",\"moduleSequenceNumber\":11213}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///d9a73c74-cb3b-4197-9483-42960ab4e57d\",\"moduleSequenceNumber\":11032}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-9\",\"moduleSequenceNumber\":11032,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///6bea92a0-d5b6-482c-beb0-3484a00bb23b\",\"moduleSequenceNumber\":11213}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-9\",\"moduleSequenceNumber\":11213,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-9\",\"moduleSequenceNumber\":12976,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-10\",\"httpPortOpen\":false,\"ip\":\"40.5.4.1\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":935,\"ramUsage\":3.7,\"server\":\"pserv-10\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9bc28002-eef3-45c2-b9af-7d36d19202d5\",\"moduleSequenceNumber\":11214}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///c80146c5-e2b5-4c82-b42d-dddef10c366a\",\"moduleSequenceNumber\":11035}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-10\",\"moduleSequenceNumber\":11035,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///9bc28002-eef3-45c2-b9af-7d36d19202d5\",\"moduleSequenceNumber\":11214}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-10\",\"moduleSequenceNumber\":11214,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-10\",\"moduleSequenceNumber\":12978,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-11\",\"httpPortOpen\":false,\"ip\":\"14.4.3.3\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":936,\"ramUsage\":3.7,\"server\":\"pserv-11\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///da43eac9-c1bc-47cc-802a-d1e2ea9ce430\",\"moduleSequenceNumber\":11215}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///2c6813f6-98ea-4a6a-9c58-51bbc428486c\",\"moduleSequenceNumber\":11038}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-11\",\"moduleSequenceNumber\":11038,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///da43eac9-c1bc-47cc-802a-d1e2ea9ce430\",\"moduleSequenceNumber\":11215}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-11\",\"moduleSequenceNumber\":11215,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-11\",\"moduleSequenceNumber\":12980,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-12\",\"httpPortOpen\":false,\"ip\":\"52.2.4.9\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":131068.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,35424,0],\"omega-net\":[0,0,35424,0],\"the-hub\":[0,0,35424,0],\"rho-construction\":[0,0,0,35424],\"sigma-cosmetics\":[0,0,35424,35424],\"joesguns\":[0,0,35424,0],\"hong-fang-tea\":[0,0,35424,0],\"max-hardware\":[0,0,35424,35424],\"crush-fitness\":[0,0,35424,35424],\"rothman-uni\":[0,0,35424,0],\"millenium-fitness\":[0,0,35424,0],\"harakiri-sushi\":[0,0,0,35424],\"zer0\":[0,0,70848,35424],\"neo-net\":[0,0,70848,35424],\"n00dles\":[0,0,35424,0],\"summit-uni\":[0,0,35424,70848],\"snap-fitness\":[0,0,35424,70848],\"zb-def\":[0,0,35424,70848],\"computek\":[0,0,0,35424],\"nova-med\":[0,0,35424,70848],\"powerhouse-fitness\":[0,0,35424,70848],\"syscore\":[0,0,35424,70848],\"alpha-ent\":[0,0,0,35424]},\"filename\":\"hack.ramp-up.service.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":106797259.04535313,\"onlineMoneyMade\":0,\"onlineRunningTime\":7748.009999995144,\"pid\":937,\"ramUsage\":3.7,\"server\":\"pserv-12\",\"threads\":35424,\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1679fa7f-b606-4c48-b5dc-2f87fd03fba4\",\"moduleSequenceNumber\":11216}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///f841d336-7446-4efd-a584-652f886fe843\",\"moduleSequenceNumber\":11041}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-12\",\"moduleSequenceNumber\":11041,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.service.js\",\"url\":\"blob:file:///1679fa7f-b606-4c48-b5dc-2f87fd03fba4\",\"moduleSequenceNumber\":11216}],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-12\",\"moduleSequenceNumber\":11216,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-12\",\"moduleSequenceNumber\":12982,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"hosts-info.db.txt\",\"text\":\"[{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"CSEC\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":8,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CyberSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.199999999999999,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":52,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"phantasy\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"91.6.7.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Phantasy Club\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":8.111999999999998,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":529212810,\\\"moneyMax\\\":600000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":35,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omega-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"58.5.5.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omega Software\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.199999999999996,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":34,\\\"hackDifficulty\\\":11.547999999999998,\\\"minDifficulty\\\":11,\\\"moneyAvailable\\\":1694967000,\\\"moneyMax\\\":1694967000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":220,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"the-hub\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"20.2.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Hub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":40,\\\"hackDifficulty\\\":16.332000000000015,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":3531491368,\\\"moneyMax\\\":4804665925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":320,\\\"serverGrowth\\\":55,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-institute\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"81.3.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Institute of Technology\\\",\\\"programs\\\":[],\\\"ramUsed\\\":31.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":891066726,\\\"moneyMax\\\":22276668150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":729,\\\"serverGrowth\\\":82,\\\"hackChance\\\":0.43762709030949615},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"0.2.6.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":256,\\\"messages\\\":[],\\\"organizationName\\\":\\\"I.I.I.I\\\",\\\"programs\\\":[],\\\"ramUsed\\\":254.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":364,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aevum-police\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"0.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Aevum Police Headquarters\\\",\\\"programs\\\":[],\\\"ramUsed\\\":14.4,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":216558490,\\\"moneyMax\\\":5413962250,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":433,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.4044942804948065},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"aerocorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"51.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"AeroCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":83,\\\"hackDifficulty\\\":83,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1061469948,\\\"moneyMax\\\":26536748700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":859,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.20705545447783694},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnia\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"15.2.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Omnia Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":7.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":984830381,\\\"moneyMax\\\":24620759525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":899,\\\"serverGrowth\\\":69,\\\"hackChance\\\":0.09573533196395423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"deltaone\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"77.4.1.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DeltaOne\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":84,\\\"hackDifficulty\\\":84,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":1605625314,\\\"moneyMax\\\":40140632850,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":843,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.1962377450349276},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"unitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"24.0.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"UnitaLife Group\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":72,\\\"hackDifficulty\\\":72,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":1025556639,\\\"moneyMax\\\":25638915975,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.35056667547165216},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"solaris\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"84.4.5.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Solaris Space Systems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":791232975,\\\"moneyMax\\\":19780824375,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":813,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.29818730772767466},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zeus-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.7.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Zeus Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1384544850,\\\"moneyMax\\\":34613621250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":840,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.23333558520118644},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"infocomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"96.4.8.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"InfoComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":717640104,\\\"moneyMax\\\":17941002600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":946,\\\"serverGrowth\\\":37,\\\"hackChance\\\":0.15231914819545608},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"applied-energetics\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.1.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Applied Energetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":78,\\\"hackDifficulty\\\":78,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":812003797,\\\"moneyMax\\\":20300094925,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":829,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.27146558355356326},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"run4theh111z\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.5.9.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"The Runners\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":540,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"stormtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"3.5.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Storm Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":87,\\\"hackDifficulty\\\":87,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":1161680915,\\\"moneyMax\\\":29042022875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":897,\\\"serverGrowth\\\":81,\\\"hackChance\\\":0.1557082449199775},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"omnitek\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"6.8.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":512,\\\"messages\\\":[],\\\"organizationName\\\":\\\"OmniTek Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":95,\\\"hackDifficulty\\\":95,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":13471749263,\\\"moneyMax\\\":336793731575,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":979,\\\"serverGrowth\\\":98,\\\"hackChance\\\":0.0577064212689807},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"4sigma\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Four Sigma\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":19376423266,\\\"moneyMax\\\":484410581650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1174,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.262595141616423},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"clarkinc\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"28.2.6.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Clarke Incorporated\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":58,\\\"hackDifficulty\\\":58,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":16045703884,\\\"moneyMax\\\":401142597100,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1159,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.44451169181896344},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"76.2.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":1000000,\\\"moneyMax\\\":25000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1507,\\\"serverGrowth\\\":1,\\\"hackChance\\\":0.008732111458588411},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"b-and-a\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"66.7.5.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Bachman & Associates\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":17345453635,\\\"moneyMax\\\":433636340875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":954,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.29185735823317016},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Powerhouse Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":59,\\\"hackDifficulty\\\":59,\\\"minDifficulty\\\":20,\\\"moneyAvailable\\\":900000000,\\\"moneyMax\\\":22500000000,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":970,\\\"serverGrowth\\\":52,\\\"hackChance\\\":0.4751558831204743},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"megacorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"78.6.9.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"MegaCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":58740169301,\\\"moneyMax\\\":1468504232525,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1219,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.010264387528701718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"The-Cave\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"38.2.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":925,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"ecorp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"44.0.7.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ECorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34109710772,\\\"moneyMax\\\":852742769300,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1389,\\\"serverGrowth\\\":99,\\\"hackChance\\\":0.009359919015093168},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nova-med\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"29.0.1.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nova Medical\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":62,\\\"hackDifficulty\\\":62,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":1131827801,\\\"moneyMax\\\":28295695025,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":795,\\\"serverGrowth\\\":79,\\\"hackChance\\\":0.47576905956867066},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"icarus\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"64.3.9.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Icarus Microsystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":86,\\\"hackDifficulty\\\":86,\\\"minDifficulty\\\":29,\\\"moneyAvailable\\\":998337256,\\\"moneyMax\\\":24958431400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":890,\\\"serverGrowth\\\":88,\\\"hackChance\\\":0.16820720171759446},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"univ-energy\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"61.7.2.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Universal Energy\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":82,\\\"hackDifficulty\\\":82,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":1140801511,\\\"moneyMax\\\":28520037775,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":841,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.22095899767305774},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zb-def\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"93.1.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZB Defense Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":55,\\\"hackDifficulty\\\":55,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":1031967495,\\\"moneyMax\\\":25799187375,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":807,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.5605377108051213},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"titan-labs\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"73.8.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Titan Laboratories\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":80,\\\"hackDifficulty\\\":80,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":896684806,\\\"moneyMax\\\":22417120150,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":844,\\\"serverGrowth\\\":60,\\\"hackChance\\\":0.24519077323323502},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.8.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":2048,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Fulcrum Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":97,\\\"hackDifficulty\\\":97,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":1553765024,\\\"moneyMax\\\":38844125600,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1233,\\\"serverGrowth\\\":83,\\\"hackChance\\\":0.030569705659213627},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"vitalife\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"14.8.8.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"VitaLife\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":81,\\\"hackDifficulty\\\":81,\\\"minDifficulty\\\":27,\\\"moneyAvailable\\\":796503902,\\\"moneyMax\\\":19912597550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":796,\\\"serverGrowth\\\":70,\\\"hackChance\\\":0.23778344212693203},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"kuai-gong\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.7.1.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"KuaiGong International\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":96,\\\"hackDifficulty\\\":96,\\\"minDifficulty\\\":32,\\\"moneyAvailable\\\":25760171936,\\\"moneyMax\\\":644004298400,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1123,\\\"serverGrowth\\\":91,\\\"hackChance\\\":0.04310058487495794},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"blade\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"65.4.8.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Blade Industries\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":89,\\\"hackDifficulty\\\":89,\\\"minDifficulty\\\":30,\\\"moneyAvailable\\\":34426655666,\\\"moneyMax\\\":860666391650,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1152,\\\"serverGrowth\\\":84,\\\"hackChance\\\":0.116829399842363},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"defcomm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"59.3.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"DefComm\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":92,\\\"hackDifficulty\\\":92,\\\"minDifficulty\\\":31,\\\"moneyAvailable\\\":909293970,\\\"moneyMax\\\":22732349250,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":947,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.09369229720380315},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"48.1.0.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Taiyang Digital\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":71,\\\"hackDifficulty\\\":71,\\\"minDifficulty\\\":24,\\\"moneyAvailable\\\":821130259,\\\"moneyMax\\\":20528256475,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":866,\\\"serverGrowth\\\":74,\\\"hackChance\\\":0.35213220406064805},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"microdyne\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"17.6.9.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Microdyne Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":625053028,\\\"moneyMax\\\":15626325700,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":814,\\\"serverGrowth\\\":85,\\\"hackChance\\\":0.3725745225689565},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"helios\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"33.8.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Helios Labs\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":85,\\\"hackDifficulty\\\":85,\\\"minDifficulty\\\":28,\\\"moneyAvailable\\\":613408832,\\\"moneyMax\\\":15335220800,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":848,\\\"serverGrowth\\\":77,\\\"hackChance\\\":0.18357385574365262},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\".\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"94.9.0.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\".\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":536,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nwo\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"19.6.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NWO\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":99,\\\"hackDifficulty\\\":99,\\\"minDifficulty\\\":33,\\\"moneyAvailable\\\":34606332155,\\\"moneyMax\\\":865158303875,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1017,\\\"serverGrowth\\\":65,\\\"hackChance\\\":0.01133910893898952},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"lexo-corp\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"57.2.0.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"LexoCorp\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":76,\\\"hackDifficulty\\\":76,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":748264803,\\\"moneyMax\\\":18706620075,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":724,\\\"serverGrowth\\\":61,\\\"hackChance\\\":0.309551688581015},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rho-construction\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"51.7.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rho Construction\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":21.18,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":17478984825,\\\"moneyMax\\\":17478984825,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":513,\\\"serverGrowth\\\":44,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"alpha-ent\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"9.6.9.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Alpha Enterprises\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":67,\\\"hackDifficulty\\\":67,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":637394768,\\\"moneyMax\\\":15934869200,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":594,\\\"serverGrowth\\\":51,\\\"hackChance\\\":0.4484581007599585},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"69.2.2.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Galactic Cybersystems\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":64,\\\"hackDifficulty\\\":64,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":777051942,\\\"moneyMax\\\":19426298550,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":858,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.4386619086971247},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"global-pharm\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"74.6.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Global Pharmaceuticals\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":75,\\\"hackDifficulty\\\":75,\\\"minDifficulty\\\":25,\\\"moneyAvailable\\\":1563076367,\\\"moneyMax\\\":39076909175,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":802,\\\"serverGrowth\\\":80,\\\"hackChance\\\":0.31207488971383185},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"snap-fitness\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"54.2.0.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Snap Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":57,\\\"hackDifficulty\\\":57,\\\"minDifficulty\\\":19,\\\"moneyAvailable\\\":450000000,\\\"moneyMax\\\":11250000000,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":678,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5651371992169718},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"netlink\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"83.3.3.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NetLink Technologies\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":77,\\\"hackDifficulty\\\":77,\\\"minDifficulty\\\":26,\\\"moneyAvailable\\\":275000000,\\\"moneyMax\\\":6875000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":379,\\\"serverGrowth\\\":55,\\\"hackChance\\\":0.33887109953024036},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"syscore\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"71.6.2.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"SysCore Securities\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":66,\\\"hackDifficulty\\\":66,\\\"minDifficulty\\\":22,\\\"moneyAvailable\\\":410866809,\\\"moneyMax\\\":10271670225,\\\"numOpenPortsRequired\\\":4,\\\"openPortCount\\\":4,\\\"requiredHackingSkill\\\":564,\\\"serverGrowth\\\":67,\\\"hackChance\\\":0.4674745512585782},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"11.5.8.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Sigma Cosmetics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":5.104,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":57500000,\\\"moneyMax\\\":57500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":5,\\\"serverGrowth\\\":10,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"nectar-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"62.4.2.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Nectar Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":20,\\\"hackDifficulty\\\":7.847999999999999,\\\"minDifficulty\\\":7,\\\"moneyAvailable\\\":43286160,\\\"moneyMax\\\":68750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":20,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"joesguns\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"4.9.7.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Joe's Guns\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":8.26,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":62500000,\\\"moneyMax\\\":62500000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":10,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"57.0.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HongFang Teahouse\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":7.171999999999999,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":47180230,\\\"moneyMax\\\":75000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":30,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"max-hardware\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"12.3.3.6\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Max Hardware Store\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":5.664,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":250000000,\\\"moneyMax\\\":250000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":80,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"silver-helix\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"37.3.9.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Silver Helix\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.383999999999997,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":922604520,\\\"moneyMax\\\":1125000000,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":150,\\\"serverGrowth\\\":30,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"computek\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"82.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"CompuTek\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":63,\\\"hackDifficulty\\\":63,\\\"minDifficulty\\\":21,\\\"moneyAvailable\\\":227887452,\\\"moneyMax\\\":5697186300,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":371,\\\"serverGrowth\\\":50,\\\"hackChance\\\":0.5467153037559741},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"56.6.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Johnson Orthopedics\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":15.247999999999996,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":1476136840,\\\"moneyMax\\\":1760935350,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":284,\\\"serverGrowth\\\":63,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"crush-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.1.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Crush Fitness\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":38,\\\"hackDifficulty\\\":14.963999999999999,\\\"minDifficulty\\\":13,\\\"moneyAvailable\\\":808492025,\\\"moneyMax\\\":1168460925,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":229,\\\"serverGrowth\\\":28,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"33.6.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"NiteSec\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":2,\\\"openPortCount\\\":2,\\\"requiredHackingSkill\\\":215,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"catalyst\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.7.3.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Catalyst Ventures\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":70,\\\"hackDifficulty\\\":70,\\\"minDifficulty\\\":23,\\\"moneyAvailable\\\":460995708,\\\"moneyMax\\\":11524892700,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":445,\\\"serverGrowth\\\":32,\\\"hackChance\\\":0.43147138401393675},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"rothman-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"47.3.6.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":64,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Rothman University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":47,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":4683387600,\\\"moneyMax\\\":4683387600,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":405,\\\"serverGrowth\\\":37,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"summit-uni\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"92.9.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Summit University\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":53,\\\"hackDifficulty\\\":53,\\\"minDifficulty\\\":18,\\\"moneyAvailable\\\":349551447,\\\"moneyMax\\\":8738786175,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":432,\\\"serverGrowth\\\":40,\\\"hackChance\\\":0.6792226012011371},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"21.2.4.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":128,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Millenium Fitness Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":49,\\\"hackDifficulty\\\":16,\\\"minDifficulty\\\":16,\\\"moneyAvailable\\\":6250000000,\\\"moneyMax\\\":6250000000,\\\"numOpenPortsRequired\\\":3,\\\"openPortCount\\\":3,\\\"requiredHackingSkill\\\":491,\\\"serverGrowth\\\":27,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"3.8.1.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":15,\\\"hackDifficulty\\\":6.635999999999998,\\\"minDifficulty\\\":5,\\\"moneyAvailable\\\":63996130,\\\"moneyMax\\\":100000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":40,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"zer0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.1.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"ZER0 Nightclub\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":11.231999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":187500000,\\\"moneyMax\\\":187500000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":75,\\\"serverGrowth\\\":40,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"neo-net\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.7.2.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Neo Nightclub Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":25,\\\"hackDifficulty\\\":10.647999999999996,\\\"minDifficulty\\\":8,\\\"moneyAvailable\\\":80627870,\\\"moneyMax\\\":125000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":50,\\\"serverGrowth\\\":25,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"iron-gym\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"97.4.2.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":32,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Iron Gym Network\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":30,\\\"hackDifficulty\\\":13.767999999999999,\\\"minDifficulty\\\":10,\\\"moneyAvailable\\\":407729730,\\\"moneyMax\\\":500000000,\\\"numOpenPortsRequired\\\":1,\\\"openPortCount\\\":1,\\\"requiredHackingSkill\\\":100,\\\"serverGrowth\\\":20,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"n00dles\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"46.3.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":4,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Noodle Bar\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":3.8040000000000025,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":1368760,\\\"moneyMax\\\":1750000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":3000,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":4,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"home\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"99.5.6.1\\\",\\\"isConnectedTo\\\":true,\\\"maxRam\\\":32768,\\\"messages\\\":[],\\\"organizationName\\\":\\\"Home PC\\\",\\\"programs\\\":[],\\\"ramUsed\\\":29622.1,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"30.0.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-0\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.3.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-1\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"64.6.8.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-2\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.5.6.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-3\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"66.8.8.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-4\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.4.4.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-5\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"65.4.3.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-6\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"75.3.4.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-7\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"77.5.7.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-8\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.5.6.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-9\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"28.0.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-10\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.5.4.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-11\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"14.4.3.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-12\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"52.2.4.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":1021.2,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-13\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"50.1.1.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-14\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"40.3.9.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-15\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"60.9.8.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-16\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"89.2.2.0\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-17\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"96.8.7.2\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-18\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"38.5.9.1\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-19\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"2.6.6.7\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-20\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"93.6.8.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-21\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"61.4.5.8\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-22\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"8.6.4.3\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":131072,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":4094,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"pserv-23\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"39.6.7.4\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":65536,\\\"messages\\\":[],\\\"organizationName\\\":\\\"\\\",\\\"programs\\\":[],\\\"ramUsed\\\":2760,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":true,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":false,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"foodnstuff\\\",\\\"httpPortOpen\\\":false,\\\"ip\\\":\\\"95.2.6.9\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":16,\\\"messages\\\":[],\\\"organizationName\\\":\\\"FoodNStuff\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":false,\\\"sqlPortOpen\\\":false,\\\"sshPortOpen\\\":false,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":10,\\\"hackDifficulty\\\":7.0459999999999985,\\\"minDifficulty\\\":3,\\\"moneyAvailable\\\":49036045.24879483,\\\"moneyMax\\\":50000000,\\\"numOpenPortsRequired\\\":0,\\\"openPortCount\\\":0,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":5,\\\"hackChance\\\":1},{\\\"contracts\\\":[],\\\"cpuCores\\\":1,\\\"ftpPortOpen\\\":true,\\\"hasAdminRights\\\":true,\\\"hostname\\\":\\\"darkweb\\\",\\\"httpPortOpen\\\":true,\\\"ip\\\":\\\"91.3.1.5\\\",\\\"isConnectedTo\\\":false,\\\"maxRam\\\":0,\\\"messages\\\":[],\\\"organizationName\\\":\\\"darkweb\\\",\\\"programs\\\":[],\\\"ramUsed\\\":0,\\\"runningScripts\\\":[],\\\"scripts\\\":[],\\\"serversOnNetwork\\\":[],\\\"smtpPortOpen\\\":true,\\\"sqlPortOpen\\\":true,\\\"sshPortOpen\\\":true,\\\"textFiles\\\":[],\\\"purchasedByPlayer\\\":false,\\\"backdoorInstalled\\\":false,\\\"baseDifficulty\\\":1,\\\"hackDifficulty\\\":1,\\\"minDifficulty\\\":1,\\\"moneyAvailable\\\":0,\\\"moneyMax\\\":0,\\\"numOpenPortsRequired\\\":5,\\\"openPortCount\\\":5,\\\"requiredHackingSkill\\\":1,\\\"serverGrowth\\\":1,\\\"hackChance\\\":1}]\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"ramped-up-hosts.db.txt\",\"text\":\"[\\\"n00dles\\\",\\\"foodnstuff\\\",\\\"sigma-cosmetics\\\",\\\"phantasy\\\",\\\"omega-net\\\",\\\"the-hub\\\",\\\"rho-construction\\\",\\\"nectar-net\\\",\\\"joesguns\\\",\\\"hong-fang-tea\\\",\\\"max-hardware\\\",\\\"silver-helix\\\",\\\"johnson-ortho\\\",\\\"crush-fitness\\\",\\\"rothman-uni\\\",\\\"millenium-fitness\\\",\\\"harakiri-sushi\\\",\\\"zer0\\\",\\\"neo-net\\\",\\\"iron-gym\\\",\\\"summit-uni\\\",\\\"snap-fitness\\\",\\\"zb-def\\\",\\\"computek\\\",\\\"nova-med\\\",\\\"powerhouse-fitness\\\",\\\"syscore\\\"]\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-13\",\"httpPortOpen\":false,\"ip\":\"50.1.1.0\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":50600,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,59000,60000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3311162.9444951476,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1174,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,14000,3000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":709534.9166775331,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1175,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,5000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":367288.6627507228,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1176,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,58000,30000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2448591.0850048154,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1177,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,33000,6000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1356463.8112952833,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1178,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,16000,3000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":925177.8815501165,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1179,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,85000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1316117.7081900898,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1180,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,40000,10000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2086867.401992742,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1181,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,53000,18000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2469459.7590247467,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1182,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,36000,12000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1669493.9215941941,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1183,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,21000,4000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":869528.0841636434,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1184,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,8000,2000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":556497.9738647316,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1185,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,22000,6000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1363420.035968592,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1186,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,11000,3000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":779097.1634106243,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1187,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,0,3000,2000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":333898.784318839,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1188,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,0,3000,0]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":200339.27059130342,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1189,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,0,3000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":278248.9869323658,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1190,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,0,1000,0]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79300.96127572426,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1191,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,0,1000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":164166.9022900958,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1192,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,0,1000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":164166.9022900958,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1193,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[0,0,1000,1000]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":175296.86176739045,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1194,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\"],\"dataMap\":{\"snap-fitness\":[0,0,1000,0]},\"filename\":\"hack.ramp-up.target.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":93213.41062234253,\"onlineMoneyMade\":0,\"onlineRunningTime\":314.0099999999907,\"pid\":1195,\"ramUsage\":2.3,\"server\":\"pserv-13\",\"threads\":1000,\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///08175e45-c08a-4784-901d-a248e7c0a49d\",\"moduleSequenceNumber\":11044}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-13\",\"moduleSequenceNumber\":11044,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-13\",\"moduleSequenceNumber\":12580,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///b2455e82-a82f-4bd4-b8a7-23f7aeea787d\",\"moduleSequenceNumber\":13009}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-13\",\"moduleSequenceNumber\":13009,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-14\",\"httpPortOpen\":false,\"ip\":\"40.3.9.9\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///30d8f689-f477-47b4-afd0-9bb724b54b12\",\"moduleSequenceNumber\":11047}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-14\",\"moduleSequenceNumber\":11047,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-14\",\"moduleSequenceNumber\":12582,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///eccb6a3f-7a30-4d2b-9fea-e487b9c58003\",\"moduleSequenceNumber\":13010}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-14\",\"moduleSequenceNumber\":13010,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-15\",\"httpPortOpen\":false,\"ip\":\"60.9.8.1\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///aa978f5f-b0c6-4fff-9581-09f900f7fd1a\",\"moduleSequenceNumber\":11050}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-15\",\"moduleSequenceNumber\":11050,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-15\",\"moduleSequenceNumber\":12584,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///dc2e37e0-0c83-4c88-8e3c-dc66c47d57bf\",\"moduleSequenceNumber\":13011}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-15\",\"moduleSequenceNumber\":13011,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-16\",\"httpPortOpen\":false,\"ip\":\"89.2.2.0\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///7648645f-f456-4917-bcf8-29580dbae5af\",\"moduleSequenceNumber\":11053}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-16\",\"moduleSequenceNumber\":11053,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-16\",\"moduleSequenceNumber\":12586,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///6be59695-582f-47c4-a046-3b1179180bb3\",\"moduleSequenceNumber\":13012}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-16\",\"moduleSequenceNumber\":13012,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-17\",\"httpPortOpen\":false,\"ip\":\"96.8.7.2\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///718765e1-722c-4b1f-bef6-427bf32cdd91\",\"moduleSequenceNumber\":11056}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-17\",\"moduleSequenceNumber\":11056,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-17\",\"moduleSequenceNumber\":12588,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///6e8d4df5-b912-4042-b952-7ac4ee0c4b37\",\"moduleSequenceNumber\":13013}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-17\",\"moduleSequenceNumber\":13013,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-18\",\"httpPortOpen\":false,\"ip\":\"38.5.9.1\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///488c5326-8caa-419f-902a-f004d41f3b4d\",\"moduleSequenceNumber\":11059}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-18\",\"moduleSequenceNumber\":11059,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-18\",\"moduleSequenceNumber\":12590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///0cadb208-b2f3-4d59-b77f-9b7476cb6140\",\"moduleSequenceNumber\":13014}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-18\",\"moduleSequenceNumber\":13014,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-19\",\"httpPortOpen\":false,\"ip\":\"2.6.6.7\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///b044deb5-bc90-4295-b9e8-f10155ee7508\",\"moduleSequenceNumber\":11062}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-19\",\"moduleSequenceNumber\":11062,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-19\",\"moduleSequenceNumber\":12592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///ca038fe1-587d-43fa-ac43-c3c648e5a195\",\"moduleSequenceNumber\":13015}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-19\",\"moduleSequenceNumber\":13015,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-20\",\"httpPortOpen\":false,\"ip\":\"93.6.8.9\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///ce4cb8ca-69a4-4ae6-8767-156f6eda82bc\",\"moduleSequenceNumber\":11065}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-20\",\"moduleSequenceNumber\":11065,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-20\",\"moduleSequenceNumber\":12594,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///ed968df7-0058-4c0e-9991-5066d56d2792\",\"moduleSequenceNumber\":13016}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-20\",\"moduleSequenceNumber\":13016,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-21\",\"httpPortOpen\":false,\"ip\":\"61.4.5.8\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///d2f9e879-afaf-45f9-9958-96698f2cb695\",\"moduleSequenceNumber\":11068}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-21\",\"moduleSequenceNumber\":11068,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-21\",\"moduleSequenceNumber\":12596,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///400243fe-d797-4dea-8d1c-490eb0ab0353\",\"moduleSequenceNumber\":13017}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-21\",\"moduleSequenceNumber\":13017,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-22\",\"httpPortOpen\":false,\"ip\":\"8.6.4.3\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///16c09210-185d-48d6-a6b2-478ddd352f05\",\"moduleSequenceNumber\":11071}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-22\",\"moduleSequenceNumber\":11071,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-22\",\"moduleSequenceNumber\":12598,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///0983c91e-91bf-47f2-8c3c-adcac00ffbfb\",\"moduleSequenceNumber\":13018}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-22\",\"moduleSequenceNumber\":13018,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-23\",\"httpPortOpen\":false,\"ip\":\"39.6.7.4\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0] || \\\"n00dles\\\";\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 5;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.75;\\n\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThreshold) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"hack.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.target.js\",\"url\":\"blob:file:///4f580a1f-3199-4963-9c77-4e9f4f7762b3\",\"moduleSequenceNumber\":11074}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"pserv-23\",\"moduleSequenceNumber\":11074,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tvar hosts = JSON.parse(ns.read('hosts-info.db.txt'));\\n\\t\\tvar selectedHosts = selectHosts(hosts);\\n\\n\\t\\tns.print('========================');\\n\\t\\tns.print('Service started, ramping up ' + selectedHosts.length + ' servers');\\n\\t\\tns.print('========================');\\n\\n\\t\\tfor (let host of selectedHosts) {\\n\\t\\t\\tvar securityThreshold = ns.getServerMinSecurityLevel(host.hostname) + 3;\\n\\t\\t\\tvar moneyThreshold = ns.getServerMaxMoney(host.hostname) * 0.9;\\n\\n\\t\\t\\twhile (\\n\\t\\t\\t\\tns.getServerSecurityLevel(host.hostname) > securityThreshold\\n\\t\\t\\t\\t|| ns.getServerMoneyAvailable(host.hostname) < moneyThreshold\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (ns.getServerSecurityLevel(host.hostname) > securityThreshold) {\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\t\\tns.print('Weakening server ' + host.hostname);\\n\\t\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(host.hostname) + '/' + securityThreshold);\\n\\t\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\t\\tawait ns.weaken(host.hostname);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Growing server ' + host.hostname);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(host.hostname) + '/' + moneyThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\n\\t\\t\\t\\tawait ns.grow(host.hostname);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ns.fileExists(\\\"ramped-up-hosts.db.txt\\\")) {\\n\\t\\t\\t\\tvar rampedHosts = JSON.parse(ns.read(\\\"ramped-up-hosts.db.txt\\\"));\\n\\t\\t\\t\\trampedHosts.push(host.hostname);\\n\\t\\t\\t\\trampedHosts = [...new Set(rampedHosts)];\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify(rampedHosts), \\\"w\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tns.write(\\\"ramped-up-hosts.db.txt\\\", JSON.stringify([host.hostname]), \\\"w\\\");\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tns.exec('discovery.enrich.js', 'home');\\n\\t\\tawait ns.sleep(60000);\\n\\t}\\n}\\n\\nfunction selectHosts(hosts) {\\n\\thosts = hosts.sort(compareHackChance);\\n\\tvar selectedHosts = [];\\n\\n\\tfor (let host of hosts) {\\n\\t\\tif (\\n\\t\\t\\thost.hostname.includes(\\\"pserv\\\")\\n\\t\\t\\t|| host.moneyMax == 0\\n\\t\\t\\t|| host.hackChance < 0.3\\n\\t\\t\\t|| !host.hasAdminRights\\n\\t\\t) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tselectedHosts.push(host);\\n\\t}\\n\\n\\treturn selectedHosts;\\n}\\n\\nfunction compareHackChance(a, b) {\\n\\treturn b.hackChance - a.hackChance;\\n}\",\"filename\":\"hack.ramp-up.service.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.7,\"queueCompile\":false,\"server\":\"pserv-23\",\"moduleSequenceNumber\":12600,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar securityThreshold = ns.getServerMinSecurityLevel(target) + 3;\\n\\tvar moneyThreshold = ns.getServerMaxMoney(target) * 0.9;\\n\\n\\twhile (true) {\\n\\t\\twhile (\\n\\t\\t\\tns.getServerSecurityLevel(target) > securityThreshold\\n\\t\\t\\t|| ns.getServerMoneyAvailable(target) < moneyThreshold\\n\\t\\t) {\\n\\t\\t\\tif (ns.getServerSecurityLevel(target) > securityThreshold) {\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tns.print('Weakening server ' + target);\\n\\t\\t\\t\\tns.print('Progress: ' + ns.getServerSecurityLevel(target) + '/' + securityThreshold);\\n\\t\\t\\t\\tns.print('========================');\\n\\t\\t\\t\\tawait ns.weaken(target);\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tns.print('Growing server ' + target);\\n\\t\\t\\tns.print('Progress: ' + ns.getServerMoneyAvailable(target) + '/' + moneyThreshold);\\n\\t\\t\\tns.print('========================');\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\n}\",\"filename\":\"hack.ramp-up.target.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.ramp-up.target.js\",\"url\":\"blob:file:///c035913e-0dd3-4610-b27f-a1e63a81a046\",\"moduleSequenceNumber\":13019}],\"dependents\":[],\"ramUsage\":2.3,\"queueCompile\":false,\"server\":\"pserv-23\",\"moduleSequenceNumber\":13019,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":201.2148,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":156.4531,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":123.8232,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":1.9586,\"isBanned\":true,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Chongqing\",\"playerReputation\":63162.19212401253}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Ishima\",\"playerReputation\":85767.7901709037}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"New Tokyo\",\"playerReputation\":12222.941959747219}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":119.7145,\"isBanned\":true,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":43.0321,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":103.7435,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":71.4394,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":86.065,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":34507.61626379499,\"lastPrice\":34453.32241365226,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.41,\"b\":false,\"otlkMag\":16.39848659049305,\"otlkMagForecast\":30.821898033771536,\"cap\":488549899,\"spreadPerc\":0.3,\"shareTxForMovement\":31032,\"shareTxUntilMovement\":31032,\"totalShares\":120300000,\"maxShares\":24100000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":63245.97073263517,\"lastPrice\":63365.08522868432,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.49,\"b\":false,\"otlkMag\":16.20362627231523,\"otlkMagForecast\":31.48583649485138,\"cap\":111108055,\"spreadPerc\":0.2,\"shareTxForMovement\":70749,\"shareTxUntilMovement\":70749,\"totalShares\":80200000,\"maxShares\":16000000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":10760.870676271248,\"lastPrice\":10793.131666206415,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":true,\"otlkMag\":12.24758938419229,\"otlkMagForecast\":61.41005394219991,\"cap\":39886904,\"spreadPerc\":0.2,\"shareTxForMovement\":33391,\"shareTxUntilMovement\":33391,\"totalShares\":96800000,\"maxShares\":19400000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":28510.20757417017,\"lastPrice\":28592.39347458427,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":15.705851839338138,\"otlkMagForecast\":34.631631387564106,\"cap\":403662811,\"spreadPerc\":0.2,\"shareTxForMovement\":84424,\"shareTxUntilMovement\":84424,\"totalShares\":65400000,\"maxShares\":13100000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":16265.238246558163,\"lastPrice\":16307.124441209344,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":false,\"otlkMag\":9.845580944788074,\"otlkMagForecast\":38.86406313697697,\"cap\":395680184,\"spreadPerc\":0.6,\"shareTxForMovement\":45551,\"shareTxUntilMovement\":45551,\"totalShares\":56100000,\"maxShares\":11200000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":92618.17923024727,\"lastPrice\":92263.55707168097,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1,\"b\":true,\"otlkMag\":16.998734986209023,\"otlkMagForecast\":66.39258885832746,\"cap\":763564308,\"spreadPerc\":0.1,\"shareTxForMovement\":65889,\"shareTxUntilMovement\":65889,\"totalShares\":39000000,\"maxShares\":7800000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":28396.513008405793,\"lastPrice\":28483.828373721466,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":10.410658855364124,\"otlkMagForecast\":61.01414354025045,\"cap\":50138114,\"spreadPerc\":0.3,\"shareTxForMovement\":73292,\"shareTxUntilMovement\":73292,\"totalShares\":87200000,\"maxShares\":17400000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":16739.31747543032,\"lastPrice\":16822.958004907057,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.3,\"b\":false,\"otlkMag\":19.351605284222853,\"otlkMagForecast\":33.12148666735117,\"cap\":594815142,\"spreadPerc\":0.7,\"shareTxForMovement\":75856,\"shareTxUntilMovement\":75856,\"totalShares\":59700000,\"maxShares\":11900000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":14495.971942036746,\"lastPrice\":14447.66022787352,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.87,\"b\":false,\"otlkMag\":6.2224998202712865,\"otlkMagForecast\":43.04266738825127,\"cap\":330774167,\"spreadPerc\":0.3,\"shareTxForMovement\":93380,\"shareTxUntilMovement\":93380,\"totalShares\":51700000,\"maxShares\":10300000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":17318.7204995825,\"lastPrice\":17278.872884374545,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":8.686040418581271,\"otlkMagForecast\":59.86641858268267,\"cap\":356410710,\"spreadPerc\":0.5,\"shareTxForMovement\":71416,\"shareTxUntilMovement\":71416,\"totalShares\":55100000,\"maxShares\":11000000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":23092.160076587366,\"lastPrice\":23145.413984710303,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":false,\"otlkMag\":8.998378351567037,\"otlkMagForecast\":40.561034620443884,\"cap\":213669278,\"spreadPerc\":0.9,\"shareTxForMovement\":107307,\"shareTxUntilMovement\":107307,\"totalShares\":60800000,\"maxShares\":12200000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":21775.28779314454,\"lastPrice\":21713.52914080539,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":true,\"otlkMag\":6.35032220920066,\"otlkMagForecast\":56.33219894564258,\"cap\":153927948,\"spreadPerc\":0.3,\"shareTxForMovement\":104734,\"shareTxUntilMovement\":104734,\"totalShares\":102700000,\"maxShares\":20500000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":18141.650661976364,\"lastPrice\":18189.76356538164,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":7.911789436956683,\"otlkMagForecast\":43.25248328163392,\"cap\":258440266,\"spreadPerc\":0.3,\"shareTxForMovement\":67255,\"shareTxUntilMovement\":67255,\"totalShares\":34500000,\"maxShares\":6900000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":27390.461998108116,\"lastPrice\":27447.311778625353,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":8.541172140246895,\"otlkMagForecast\":60.56535960017639,\"cap\":668349068,\"spreadPerc\":0.6,\"shareTxForMovement\":48275,\"shareTxUntilMovement\":48275,\"totalShares\":31900000,\"maxShares\":6400000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":12820.90098689716,\"lastPrice\":12788.950026136434,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":6.393391178918619,\"otlkMagForecast\":55.29472775430312,\"cap\":250339270,\"spreadPerc\":0.6,\"shareTxForMovement\":119842,\"shareTxUntilMovement\":119842,\"totalShares\":60400000,\"maxShares\":12100000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":13325.19736499479,\"lastPrice\":13360.024539167938,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.68,\"b\":true,\"otlkMag\":5.173445478628287,\"otlkMagForecast\":57.33978191196412,\"cap\":177236396,\"spreadPerc\":0.9,\"shareTxForMovement\":74357,\"shareTxUntilMovement\":74357,\"totalShares\":47500000,\"maxShares\":9500000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":25410.17719521938,\"lastPrice\":25483.4266897044,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":7.7622005356397565,\"otlkMagForecast\":41.865300260572255,\"cap\":220054100,\"spreadPerc\":1,\"shareTxForMovement\":74711,\"shareTxUntilMovement\":74711,\"totalShares\":34600000,\"maxShares\":6900000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":26807.529141114097,\"lastPrice\":26743.79818255067,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":true,\"otlkMag\":9.014247223887546,\"otlkMagForecast\":60.03112305295939,\"cap\":483029513,\"spreadPerc\":0.7,\"shareTxForMovement\":85416,\"shareTxUntilMovement\":85416,\"totalShares\":27600000,\"maxShares\":5500000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":19018.49033560866,\"lastPrice\":19073.31462086448,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":true,\"otlkMag\":5.220383010436199,\"otlkMagForecast\":56.63917900118952,\"cap\":26538635,\"spreadPerc\":0.4,\"shareTxForMovement\":87032,\"shareTxUntilMovement\":87032,\"totalShares\":31800000,\"maxShares\":6400000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":4665.760087725449,\"lastPrice\":4709.337792485672,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.43,\"b\":false,\"otlkMag\":6.878575481753556,\"otlkMagForecast\":46.581421010806594,\"cap\":109723900,\"spreadPerc\":1,\"shareTxForMovement\":31640,\"shareTxUntilMovement\":31640,\"totalShares\":74700000,\"maxShares\":14900000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":10915.795618028298,\"lastPrice\":10969.498926279826,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.28,\"b\":false,\"otlkMag\":7.407598541302514,\"otlkMagForecast\":42.39564976084193,\"cap\":10705591,\"spreadPerc\":0.8,\"shareTxForMovement\":79133,\"shareTxUntilMovement\":79133,\"totalShares\":52300000,\"maxShares\":10500000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":4939.4182889078365,\"lastPrice\":4949.670209654067,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":1.9897966070659792,\"otlkMagForecast\":49.64839385338459,\"cap\":101684141,\"spreadPerc\":0.6,\"shareTxForMovement\":102827,\"shareTxUntilMovement\":102827,\"totalShares\":30800000,\"maxShares\":6200000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":5632.871112929265,\"lastPrice\":5675.089350594972,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.95,\"b\":false,\"otlkMag\":11.650034603660332,\"otlkMagForecast\":38.03747747951567,\"cap\":29001243,\"spreadPerc\":0.5,\"shareTxForMovement\":58272,\"shareTxUntilMovement\":58272,\"totalShares\":29900000,\"maxShares\":6000000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":8518.103705775722,\"lastPrice\":8568.195896895677,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.53,\"b\":false,\"otlkMag\":2.3843415254822786,\"otlkMagForecast\":43.96447032802831,\"cap\":160156446,\"spreadPerc\":0.6,\"shareTxForMovement\":18831,\"shareTxUntilMovement\":18831,\"totalShares\":29300000,\"maxShares\":5900000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":4221.431276869344,\"lastPrice\":4207.845803431799,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.84,\"b\":true,\"otlkMag\":1.0361763092193608,\"otlkMagForecast\":55.2380700352576,\"cap\":122192108,\"spreadPerc\":1.1,\"shareTxForMovement\":84436,\"shareTxUntilMovement\":84436,\"totalShares\":36000000,\"maxShares\":7200000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":1613.9092540544536,\"lastPrice\":1598.4880321878306,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.51,\"b\":true,\"otlkMag\":1.3004929930239504,\"otlkMagForecast\":49.2315372828097,\"cap\":5329336,\"spreadPerc\":0.7,\"shareTxForMovement\":23931,\"shareTxUntilMovement\":23931,\"totalShares\":20700000,\"maxShares\":4100000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":6946.982285061907,\"lastPrice\":6919.58842938375,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.03,\"b\":true,\"otlkMag\":5.189652547414276,\"otlkMagForecast\":52.37540480927745,\"cap\":107692274,\"spreadPerc\":1.2,\"shareTxForMovement\":79750,\"shareTxUntilMovement\":79750,\"totalShares\":10100000,\"maxShares\":2000000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1683.7527506130662,\"lastPrice\":1688.541760270404,\"playerShares\":11,\"playerAvgPx\":1681.5754151797803,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":false,\"otlkMag\":3.605465607875667,\"otlkMagForecast\":44.41956425494132,\"cap\":17489522,\"spreadPerc\":0.6,\"shareTxForMovement\":92685,\"shareTxUntilMovement\":92685,\"totalShares\":25600000,\"maxShares\":5100000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":349.6678933046482,\"lastPrice\":352.24832674031853,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.92,\"b\":false,\"otlkMag\":4.099409389668641,\"otlkMagForecast\":43.18904145051783,\"cap\":19811202,\"spreadPerc\":1.4,\"shareTxForMovement\":46807,\"shareTxUntilMovement\":46807,\"totalShares\":14900000,\"maxShares\":3000000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1233.5330603911907,\"lastPrice\":1246.2868353207132,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.69,\"b\":false,\"otlkMag\":5.471098980836546,\"otlkMagForecast\":49.33045220117292,\"cap\":714782,\"spreadPerc\":0.6,\"shareTxForMovement\":45215,\"shareTxUntilMovement\":45215,\"totalShares\":65400000,\"maxShares\":13100000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":458.85247933551284,\"lastPrice\":456.4838621709075,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.35,\"b\":true,\"otlkMag\":14.564906657318529,\"otlkMagForecast\":66.19300339462882,\"cap\":3374923,\"spreadPerc\":0.7,\"shareTxForMovement\":70514,\"shareTxUntilMovement\":70514,\"totalShares\":123000000,\"maxShares\":24600000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":21819.492049028035,\"lastPrice\":21752.605783099647,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":false,\"otlkMag\":6.9069111004383545,\"otlkMagForecast\":44.25232571372178,\"cap\":311578536,\"spreadPerc\":0.7,\"shareTxForMovement\":182396,\"shareTxUntilMovement\":182396,\"totalShares\":19000000,\"maxShares\":3800000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":10580.873770837086,\"lastPrice\":10604.054765334551,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":true,\"otlkMag\":12.35604019766407,\"otlkMagForecast\":60.04876339753857,\"cap\":189977454,\"spreadPerc\":0.3,\"shareTxForMovement\":214295,\"shareTxUntilMovement\":214295,\"totalShares\":30400000,\"maxShares\":6100000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":29,\"lastUpdate\":1682903515076,\"ticksUntilCycle\":38}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":1,\"opened\":true},\"EditorTheme\":{\"base\":\"vs-dark\",\"inherit\":true,\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}}},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"30","AllGangsSave":"","LastExportBonus":"1682890562401","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"storedCycles\":0}}"}}